{
	"person": {
		"name": "Jan Groß",
		"githubUsername": "JanGross",
		"imageURL": "https://avatars.githubusercontent.com/u/13641301?v=4",
		"bio": "",
		"primary": true
	},
	"plugins": [
		{
			"files": [
				{
					"path": "Time/shiftstats.30s.py",
					"filename": "shiftstats.30s.py",
					"content": "#!/usr/bin/python\n# -*- coding: utf-8 -*-\n\n# \u003cbitbar.title\u003eShift Stats\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev2.0\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eJan Groß\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003eJanGross\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eShows the remaining time of today's work shift as well as the time of arrival and when its time to leave\u003c/bitbar.desc\u003e\n# \u003cbitbar.image\u003ehttp://i.imgur.com/6VTobzU.png\u003c/bitbar.image\u003e\n# \u003cbitbar.dependencies\u003epython\u003c/bitbar.dependencies\u003e\n\n\n#----- About ---------------------------------------#\n#   This plugin shows the remaining time\n#   of today's work shift as well as the\n#   time of arrival and when its time to\n#   leave. Tested on Yosemite only!\n#\n#   Written by Jan M. Groß\n#   Icons from http://icons8.com\n#\n#----- Settings -------------------------------------#\n#                                                    # Use decimal values to represent minutes (0.5 = 30 min etc.)\nshift_length = 8                                     # Shift length in hours\nlunch_break = 1                                      # Length of the lunch break in hours\nlog_path = '/var/log/accountpolicy.log'              # Path to the file containing information about logins - Standard is \"/var/log/accountpolicy.log\"\nlunchsave_path = '/.lunchbreak.sst'                  # File that the lunchtime is being saved to (relative to the current directory)\n#----------------------------------------------------#\n\nimport os, sys\ndir_path = os.path.dirname(os.path.realpath(__file__))\nfrom datetime import datetime, timedelta\n\nlunchsave_path = dir_path + lunchsave_path\nif(len(sys.argv) \u003e= 2):\n    print \"Parameters \" + str(sys.argv)\n    if(sys.argv[1] == \"--start-lunch\"):\n        with open(lunchsave_path, 'w') as file_:\n            file_.write(datetime.now().strftime('%Y-%m-%d %H:%M:%S'))\n            print \"Lunchfile has been saved!\"\n            sys.exit(1)\n\n# Images\nbitBarDarkMode = os.getenv('BitBarDarkMode', 0)\n\nif (bitBarDarkMode==0) :\n    cool_img = \"iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAABUElEQVQ4T32TAVEDQRAEiQJAARcFxAFBAXFAogBQwKOAoIBHAaAgcUBQwKMAcMB0aubr60jYqqnbu9udnd+9Hx38tSMdXQozAR/7Fl6EJ/t91qjKb7S/En6c0Pm+mPBQ61K4S96QoHXQtVb8XTY3wbPWBQEhoDKJU2GzJznHEzlrEzUQ8J0fws0/lWtOlNwLYwiQS2VA82KdHJoHipE7momKFQQEntQlvH/3errn/hMCvpkRQfRYBZ57v6rOaSCqphAgBQLGAxgj9irwFjBizuw/aKXhYBYCVHCA0VTQeZ+lyElPOKPYBAISqTquEuotpChqfUGBZcbIZviAmPWbA1HHnk+aWwUrCkoeEsm3Ak3LQ6Iiidh6IIczmspz3iqItXIurIQ57zIq84Cipn/KCUZJI3wJGS13ReD7j32P/K3VfyNnSKdSRphYCFuBSfT2C22RSmAfHmuiAAAAAElFTkSuQmCC\"\n    desk_img = \"iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAABPUlEQVRYR+2U4RHBQBCFkwrQQXRABXSADnRgVCAqoAQdoAMqoAPpABXw3szdzEnuxiY5kh+3MzuSS+z7bl/24qjhiBvWjwJAmQ4ksGuDHCjbrvhdIrM6NkoBKH5BdnNiD9wP60BIAQ4QmSDPyKmC4NoIeTTWSjdDCsCddpA9JK8Z7MZd7b5fWln9QQrwUu+bALTlVrJOgVMKoC04ocJMVdnjd/wvC7hbfvW0wYwnbjgV2a8tSCGwcoissc7nlUJiAb96tpvBuacdjLkBRVv0Op9tkZwaxg5JSGtIALT/FGdhM1IFYY4i31nk3nN2SQJgmwBdP8FFfhL0yPKAYvAAy5DWUZUAuLrnZd0GoHfsRcBS5EOzlQCE1l3wZZGznksgAIQOhA60pgO+T8PC2H87BxoD8C3srOfrqK0MHADeV1FAIfPgToUAAAAASUVORK5CYII=\"\n    exit_img = \"iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAB70lEQVRYR92X4TEEQRBGXQRkYEWACBABGVgRIAKXASJwIkAETgSEcDIgAr5XNa36pmZOb+3u/bipmtrd0df9+uvemTXZWh6NHl81uY4xFnJ6qPllzidZlOMEMEZw83mim3kE4FFGEA8xUPQ8OQoDLBn2pPDKbi7AlVS60dxJNb7W9SMpN7oCZwr0lJXJd/zoAM8KflroE6v35gOUSvApRQ402XRGVwD1acKp5rbmW3oetAnncnpU2Q9oOILdpzcgN+utQCuPD5Xg+fKFFmbZYm8AMtzVpK7mHMmRuzRyiF4APntz7B3WhPEQvQB89k2KNte11A80H51vypSAO50FBLTaR7Lfk71txbXydAJAfo5Rav9f9i+yYT9goAIqlSA6AfBqAYEz7n0tU6y/S358A8xvGdwP8j1wJ0eXeWQ9U3vgasODd1KAzP3gudR8pXff/24wgJ9KioCR2agK+CwI9K3pm2zVJ1xYgUZO25TGTNeFS4md7zY9E5xOpzENYpUKYQD8Y1yqM+tMBocOQPkxXFMhDEBW7y7r2i0bjqlD5gZcUyEM4A1rwS17+3uTlaKkQhggkHzRZKpVvogZ/EPTZlZhAEpgjeY/qyNgNOR+MvQlYikMUDUMEPj+yVVYCwCMfqv2KqwNwI5iSuFVqAL8AnfXxCEwgBYZAAAAAElFTkSuQmCC\"\n    timespan_img = \"iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAACyElEQVRYR8WXjZHUMAyFuQqADkIFQAWECoAKCBUAFRAqACpgqeCgAkIFQAWEDqACeF/G70brc2JvZhk0o8nGkaWnJ/lnL278Z7nYEf+x5tyVdklxMSf9puenU3y2Aujl9LmU4C3yUUbvpFPNuAaALF9Jh4KjnylrPt1KrORmBw28DnbX3GwBuCfrz8k5E39LycxaSg6mYAnAN5PBLz0fSilPMwAcvC9NaPQBI2+lT4P9M/2GkSMpMUDmX5MVWQOGLNZk2vgGGwQ1G/dzJnIAXQpOBgh0F6kLQanxlpAQIAFBIoCYPSEHAFrTRhdvZW4fYwUAn2HiMtl90HMoAeg1SNMhILZjasnvNTBfGgBgEpO7KkVkALofSV33F/r9oMF5bSnbBWWdpZSCzWrZU+LkP8kS6gmODFIYcBPBDN2Moz2CLzY02LwdAcQa5Z3ayRB22H4RJsfGZI3nwhzYpN6xdDHOE/yagVEv7HgRVO7U6D2OYwKYLQcdNEbnI6W1b6ZZPaMBHPRC99NQ/fWErkb4BhsuyazfsEFwB43TYzk9jj1sLt8MYNILDVcDgBOaCcBQXJLv6TtAAZjLUaw9AOzQjnjnYKJEa0EjiCIAMqIE0EMTtgiUj8mQZ2zMrfnFEuCg1oQtoFpsik0YlwfLCpr+hawuQ4KVNqJzg/BSZrelmY92QhqIzmZ930nPcwIg4I8UuLgV9/row+joxDoTioP8+KQtHkbEiUbLVnmm4LH2q8cxsTopy8SXh9W73AnAWK6+W1J73mfPr13J6Af2871MkDl3y6XhJNUrmYENaaLfKc1LKYBahIBvpPixNF9KPQGqJmm8XgOEsbV/P2TMmUJgZw3tvbS4U9ZuM50mjtJ4vTZAHJoRggE4FxqO+XPh2zJUA+B53vfJxIys+STjKQWung+tAGIwaAYQ7KAIGaIEPKlh9wBYy3zX+F+K66UhhM4TEQAAAABJRU5ErkJggg==\"\n    watch_img =\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAABBElEQVQ4T7WTaxHCQAyEqQNwUByAAoqDSqgEJCABCZWAA4oCcEAdgAT2u8l1QntX+MPNZBLy2N3LlWIxPaVSfSJPalIrEo2tck0G4KT8wddSAJ0aLrKtUwLzTbaXVXMAGxVhwXaytTU/5K/GjoJ7BPEKlkoiP16Bxt4aUQBorDWKX9Q8wNGQKdZepmLAAaHn7OIPAAowwhSZwWE4Lg8QCPCBxCugaSiYgkqeqzAUJJsCYoDrXwAYBuQrwNwVeJ1Ohs9e4agiz0PDeImmPiwwu8TxM0ZAhmHmd2sEw07GXyKN8b2JS6PunTr2gdJwcp9yZ6xP61vZUCWPDecvfyZkIzl1JrU3QEtCEdpZuxAAAAAASUVORK5CYII=\"\n    coffee_img = \"iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAABjUlEQVRYR+2W600DQQyESQeUcHQAFRAqACogVEA6gBKgAlICVECoADrIlZAOyHxoHW2OZO92T16EhCX/uIft8Xj2MTkab1dKsZSvS1JNSoI6MV96vgggstONBdCo4kp+Im+zqytgLIAX5QDEaSh+nDuKMQAeVexOfib/DADQAqD4NshKATwo+zz4IuqecdwGEG4Apsr8Jo+FB/XPcrRg43ADQMcUZPmZQTuFeWfjcAOwVGacMWAU/pDHWhhUnJ9KNDALXVqnUz3DAKxkWwmAfUVgIYt6S5ICQNLL7JZ2A177gKUAMGOWWlFnimvkrZwRHbQ+AAQnEyRy00Bv/D8AbwbuoxGhpYX8KR6bNwB2RoSMoYfu+ZHciAaJKFOEnJIs762wvRnoroIfTdUGgAaa32QAIXJuwMS31WTATs3rAKI6ALszMIKt1WAAurk7coNClDtnizcA24jeVXjvweYNgI2Irtcx7bVHAICD5s0Axf82gBt1MEtRmPjGvm/iKxoBt1zW7nkhAIoDvk3FbwCAylwh1H8uYQAAAABJRU5ErkJggg==\"\nelse:\n    cool_img = \"iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH4AcBBhwWxiKe6QAAASZJREFUOMuNk9FRxDAMRFcM/4QKSAekhNABHVyogHRAqIBcBZfr4KiAXAVABYQKEip4/Mjg8cRw+tFYu7JkeWVKDCgkbSTdSio8vEg6SNqb2RLzLUnuJN1L+vKEyaHSL7yQ1JvZo1YqD8ACNMoY0DhnlwKdA5X+MaBybvfzZmD+q3KmkxkoziX1/uYReIh4kw9v8RmUEbb3nCcDJklXmWLv7q8z+KcBb9HEdwnhxv1LEr/zjuqz0KaZDZK2EenZzEYzGyUdo/jWuUsYyAj0sZCAcmVwpYssnHtgFNACHydMvoh/CpiANgBLAlb82qv7Q+ggElQRElr/1yqpWAP1ipBmoF2T8gxsThDQkFumVlInac4s06Wkzsz61QuidW48IbaDpCFd52/RjRADacgLxAAAAABJRU5ErkJggg==\"\n    desk_img = \"iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH4AcBBh0oHliyAwAAANBJREFUWMPtldENgzAMREnVfxghI3QURugIbFBG6CawAWzCCLDB648rWWlaUAOpVPkk/1wgPvtsKAqDYSMAD3TAJNEBPmfymVfMWUQAvSQcgUpiFK7PIWCRZJXiKuGmlLtPG58rI9xTTFYLBmXBkNMCr2zQWFKHcKsF1zc2lHJ2aPW1qriRbnigVXwdvHNX34vbXv43kbM2nANJHqJNEUC4gsFsABBZ2YtE8qoeCher+NCEzrlvtiD7n489O/Hpvp93wASYABNwXtvfv++AwfAAuelGAznB3AUAAAAASUVORK5CYII=\"\n    exit_img = \"iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH4AcBBh4QHXdZXgAAAcJJREFUWMPFV9FxgzAMfcrlv9mgjMAGZQQ2iEdIJyidoMkEpROknQC6AZ0gZIKGCV5/7DuVYoIJUN1xh42MpadnSQaUkIxInjifnEhu9J4r/JbIPnNJBCDWE+se5TcA9YQbb69qkUwUXMlUbvf9d4V/ltWEXu5IflsvC5LxYgaQTAG8AHAMTwAc24yfEwEzhPGzhuC/OZB3zJ0BVIsYICLvAB4BNHbqE0AqIpdra9cBRCsBPHg+19bbVETKyUNA0vRs7giXAiis7mAZikCm4urivQNw16H7ShIikk+CgPXo3hkiIhmA0rO5NsKMSSh/cjbJ2o5rzQdPuS1JXtTYBNWYtiJJc+VnbYlIxi0j2hJUjJzyWcU08+h+iEgtIpVd10xBwp09XqXzvuc07FVeqGwxMpP2AyT3vtgv1Q/EAal4llrgg387uwEdIdEkS8a2cOuOnP6s3n3wN3ZcqYT05Mg62gARqVXR2ZLsOpIAkFtdA+CoUQgtRm2Y44EXjMiTFYtbT8FmgJ0HEalb7VhzKxdubUoz5WE++r5hQ1CEtNVqbdUVojEhSOyzCQTCdPQPy11MbBE6uMTURmGptjwD8BWCwg9iV3+aGz6VPAAAAABJRU5ErkJggg==\"\n    timespan_img = \"iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH4AcBBh0DsuRLQwAAAhJJREFUWMPVV+2R00AMfcvcf1xCOjhTAdcB7oB0ACWECs5UEHdwSwUxFXipgFBBlgoeP9DO6Hz76UuGQTM7ifdLsvSeJAP/WEzrAZIDgHsAOxkAcJbhjDHfrm4lyQeST6yXJ5IP11C8I3lMKDmTnGW4xJ4jyd1W5T3Ji7rMk5wkBDlPjbI3yIVk36p8X+vrxPlOjNWyrwKhWLvI428AewA+iWJj5gJgJwBvZeqdMcYlDZB4LQA6mbIAXJZGxnwphRLALEZ4MeIc1t+s9h+U8q8AfoiRuYGCgU68CLn7EPWA0OYkj7PaOMp/n1DwvRJXE4CPqVCApFVoH4Rem0CYAWZgh41tCDKu2KApddrM67/3jYGaL9CqlPSRZORWvD6FkUlgn0h2GT2DXjiUXKqs14aMEaVLjvtq7fAMIDI5V9QEHZKfkveXBETGyB3uxZoC3FwJJpvBpSP5OYWVta675vptjAcwyAXvZfqX0NXqJNOCzhCCpbFYWRl9w7lnIbhTDQUA9A2ecACGDWy8l1+vU7FbZcSbyKqUu2IiuoEBgco+tmgVv7sbKO9Ug2NTHA8y3cCAKZVtU5uGa8a+6uUknfrNvVy5t/TFYiYHdL4fXvnml6LrK5rSYwswBXDHmqa05Il1e/1I8kPhjR8j7Xy/1YW7SHsdZFF9QaoaTq9pYGJ531d0ab6lPmz9OO0zH6cW/5P8ARJNcwtJJuvFAAAAAElFTkSuQmCC\"\n    watch_img = \"iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH4AcBBhs1KwR5XAAAAO9JREFUOMutk9FtwzAMRN8FHcAjaAR1g4yQETJCNqhH8AgZoSNkgyoTVBvUG7A/FEAosvOREBBkiMez7khBF2aW2Ii9XARdd3JLf/YxwCUz+wI+gdrOgB8g9+BD94cGuAO/Xpj8+95hHq43mdm3mZ18T1F7l5tGBHMDbJBnLz6b2TySkIEjcOmLgcX9mB2XRwQVSJJqKD4CV+AiaZVU3JO13fTA81j3kpEgATWaJ+nmknLoQAUmSaeeoAA310sgWZ0I96D4etrGHOdjq40aDNLixmWX1QwuwNkNLcNRllTMjDCBf8GftWHe+ph49Tn/A5oeu+j1XBWdAAAAAElFTkSuQmCC\"\n    coffee_img = \"iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAm0lEQVQ4T2NkIAwSgEoW4FLGSEC/A1DeAIgnkGMATGMAUDPIFReA+AC6QfhcAHJ2ARArAHEDEIMMwgD4DABpBjl9A9QFH4gxAORsfjzh8hHqFbgSdBeA/GiPx4CDQDkHZPkBMQAUuKBYAQXqB3JdAIuRDeQaAHLBAyA+QK4B8KglxwBQGIAAmCbHANpGIyjp5uNJSBOBcqAkDgcAGnooEcKNcYIAAAAASUVORK5CYII=\"\n\ndef get_first_login():\n    #Reading the first line of the Log file\n    with open(log_path, 'r') as logFile:\n        first_line = logFile.readline()\n        return first_line\n\ndef get_lunchbreak_time():\n    ''' Returns the first line from the .lunchbreak file '''\n    if(os.path.exists(lunchsave_path)):\n        #Reading the lunchbreak file\n        with open(lunchsave_path, 'r') as lunchFile:\n            line = lunchFile.readline()\n            return line\n    else:\n        return \"N/A\"\n\ndef start_lunch_button():\n    #Call this script with the --start-lunch flag\n    print \"-- Start lunch break | refresh=true | color=indianred bash=\"+__file__+ \" param1='--start-lunch' terminal='false' color=green\"\n\ndef print_lunch_info():\n    last_lunch = get_lunchbreak_time()[:19]  #Has to be cut after 19 characters because unconverted data remains otherwise (probably the newline)\n    if(last_lunch== \"N/A\"):\n        print \"-- No lunch break in the records\"\n        start_lunch_button()\n    else:\n        lunch_begin = datetime.strptime(last_lunch,\"%Y-%m-%d %H:%M:%S\") #lunch_begin = the time logged in the .lunchbreak file\n        lunch_end = lunch_begin + timedelta(hours=(lunch_break))\n        remaining_lunch =  lunch_end  - datetime.now()\n        if(lunch_begin.date() == datetime.now().date()):\n            if not remaining_lunch.seconds/3600 \u003e lunch_break :\n                print \"-- Lunch time ends in: %dh %dm | image=\" % (remaining_lunch.seconds/3600, (remaining_lunch.seconds/60)%60) + coffee_img\n            else:\n                print \"-- No lunchtime left for today!\"\n        else:\n            start_lunch_button()\n\n        dts_units = 1\n        dts_span = 8\n        dts_unit = \"week\"\n\n        # Last lunch time stuff\n        print (\"-- Last lunch break: \\n--%s\") % (str(((lunch_begin if (datetime.now().date() - lunch_begin.date()).days \u003c dts_span else 'More than {0} {1} ago'.format(dts_units, dts_unit)) if lunch_begin.date() != datetime.now().date() else 'Today at ' + str(lunch_begin.time()))))\n\n\nparts = get_first_login().split() #Splitting the first line of the logfile into parts\n\n#Time calculatios\narrival_time = datetime.strptime(parts[2],\"%H:%M:%S\") #Stripping the time from the log. Be aware that because we are not stripping any date, it will be set to January 1st, 1900\nshift_end = arrival_time\nshift_end += timedelta(hours=(shift_length + lunch_break))\nremaining_time = shift_end - datetime.now()\n\n\n\n\n# Printing out the main countdown\ndef print_main():\n    if remaining_time.seconds/3600 \u003e shift_length : #Assuming that the shift ended when the shift_length is exceeded since the time of arrival is way in the past (as mentioned above)\n        print \"Shift ended! Have a nice evening |  image=\" + cool_img\n    else :\n        print \"Shift ends in: %dh %dm | image=\" % (remaining_time.seconds/3600, (remaining_time.seconds/60)%60) + watch_img# Calculating the hours and minutes based on the remaining seconds\n# Printing out the sub menus\ndef print_sub():\n    print \"---\"\n    print \"Now: \" + datetime.now().strftime(\"%x-%H:%M:%S\")\n    print \"Arrived at \" + arrival_time.strftime(\"%H:%M:%S\") + \"| color=green image=\" + desk_img\n    print \"Shift ends at \" + shift_end.strftime(\"%H:%M:%S\") + \"| color=green image=\" + exit_img\n    print \"---\"\n    print \"Shift length: \" + str(shift_length) + \" Hours | color=red image=\" + timespan_img\n    print \"---\"\n    print \"Lunch break \" + str(lunch_break) + \" Hours | color=black image=\" + coffee_img\n    print_lunch_info()\n    print \"---\"\n    print \"About this plugin\"\n    print \"-- Developed by Jan M. Groß | color=black\"\n    print \"-- Images/Icons from icons8.com | href=http://icons8.com\"\n    print \"-- Version 2.0\"\n    print \"-- ---\"\n    print \"-- Report an issue | href=https://github.com/matryer/bitbar-plugins/issues/new?assignee=jangross\u0026title=re:%20Workshift%20Stats\u0026body=FAO:+(@jangross)\"\n\nprint_main()\nprint_sub()\n"
				}
			],
			"path": "Time/shiftstats.30s.py",
			"filename": "shiftstats.30s.py",
			"dir": "Time",
			"docsPlugin": "Time/shiftstats.30s.py.html",
			"docsCategory": "Time.html",
			"pathSegments": [
				"Time"
			],
			"categoryPathSegments": [
				{
					"path": "Time",
					"text": "Time",
					"isLast": true
				}
			],
			"title": "Shift Stats",
			"version": "v2.0",
			"author": "Jan Groß",
			"authors": [
				{
					"name": "Jan Groß",
					"githubUsername": "JanGross",
					"imageURL": "https://avatars.githubusercontent.com/u/13641301?v=4",
					"bio": "",
					"primary": true
				}
			],
			"desc": "Shows the remaining time of today's work shift as well as the time of arrival and when its time to leave",
			"imageURL": "http://i.imgur.com/6VTobzU.png",
			"dependencies": [
				"python"
			],
			"aboutURL": "",
			"lastUpdated": "2021-03-08T15:22:06.282641Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "Lifestyle/random_quotes.5m.sh",
					"filename": "random_quotes.5m.sh",
					"content": "#!/bin/bash\n\n# Categories\n# (Uncomment ONE category at a time!)\n#\n# Default \ncat_name=\"Default\"\ncat_url=\"https://gist.githubusercontent.com/JanGross/fb6ada3292474f300ef4/raw/quotes_default\"\n#\n#Computer Science\n#cat_name=\"Computer Science\"\n#cat_url=https://gist.githubusercontent.com/JanGross/2ac95e44ca7d0a7e0663/raw/quotes_cscience\n#\n#--------------------------------------------------------------\n#Settings:\n#----------\n# The amount of characters shown before the quote gets trimmed. (Default: 25)\n# The full quote can always be seen in the dropdown menu!\nmax_chars=\"25\"\n#----------\n# Defines the color of the quote (status bar and dropdown)\nquote_color=\"black\"\n#----------\n\n#BitBar Metadata\n# \u003cbitbar.title\u003eRandom Quotes for BitBar\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev0.1\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eJan Groß\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003eJanGross\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eDisplays a random quote from the selected category\u003c/bitbar.desc\u003e\n# \u003cbitbar.image\u003ehttp://i.imgur.com/0yTkSta.png\u003c/bitbar.image\u003e\n# \u003cbitbar.dependencies\u003ebash\u003c/bitbar.dependencies\u003e\n# \u003cbitbar.abouturl\u003e\u003c/bitbar.abouturl\u003e\n\nmkdir -p ~/BitBar_quotes\ncurl -s $cat_url \u003e ~/BitBar_quotes/quotes\nline_c=$(wc -l ~/BitBar_quotes/quotes)\nline=$(jot -r 1  2 \"$line_c\")\nquote=$(tail -n+\"$line\" ~/BitBar_quotes/quotes | head -n1)\necho \"$quote | color=$quote_color length=$max_chars\"\necho \"---\"\necho \"$quote | color=$quote_color size=20\"\necho \"Quote from line $line\"\necho \"---\"\necho \"Category: $cat_name | color=black size=20\"\necho \"Category URL: $cat_url | size=10\"\necho \"Total Quotes in this category: $line_c \"\n\n\n"
				}
			],
			"path": "Lifestyle/random_quotes.5m.sh",
			"filename": "random_quotes.5m.sh",
			"dir": "Lifestyle",
			"docsPlugin": "Lifestyle/random_quotes.5m.sh.html",
			"docsCategory": "Lifestyle.html",
			"pathSegments": [
				"Lifestyle"
			],
			"categoryPathSegments": [
				{
					"path": "Lifestyle",
					"text": "Lifestyle",
					"isLast": true
				}
			],
			"title": "Random Quotes for BitBar",
			"version": "v0.1",
			"author": "Jan Groß",
			"authors": [
				{
					"name": "Jan Groß",
					"githubUsername": "JanGross",
					"imageURL": "https://avatars.githubusercontent.com/u/13641301?v=4",
					"bio": "",
					"primary": true
				}
			],
			"desc": "Displays a random quote from the selected category",
			"imageURL": "http://i.imgur.com/0yTkSta.png",
			"dependencies": [
				"bash"
			],
			"aboutURL": "",
			"lastUpdated": "2021-03-08T15:21:55.926001Z",
			"vars": null
		}
	]
}