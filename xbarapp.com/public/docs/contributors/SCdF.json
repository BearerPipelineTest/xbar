{
	"person": {
		"name": "Stefan du Fresne",
		"githubUsername": "SCdF",
		"imageURL": "https://avatars.githubusercontent.com/u/583851?v=4",
		"bio": "",
		"primary": true
	},
	"plugins": [
		{
			"files": [
				{
					"path": "Web/Twitch/livestreamer-now-playing.5m.js",
					"filename": "livestreamer-now-playing.5m.js",
					"content": "#!/usr/bin/env /usr/local/bin/node\n\n// \u003cbitbar.title\u003eTwitch Following\u003c/bitbar.title\u003e\n// \u003cbitbar.version\u003ev2.3\u003c/bitbar.version\u003e\n// \u003cbitbar.author\u003eStefan du Fresne\u003c/bitbar.author\u003e\n// \u003cbitbar.author.github\u003eSCdF\u003c/bitbar.author.github\u003e\n// \u003cbitbar.desc\u003eShows which channels you follow are live, what they're playing, for how long etc. Lets you watch them with streamlink and open the chat in your browser. Based on the play-with-livestreamer bitbar plugin. Requires a Twitch account.\u003c/bitbar.desc\u003e\n// \u003cbitbar.image\u003ehttps://i.imgur.com/dhscE7r.png\u003c/bitbar.image\u003e\n// \u003cbitbar.dependencies\u003enode, streamlink\u003c/bitbar.dependencies\u003e\n\n// TOOD: map response into a datastructure we can both use and store\n//       this helps with DRY, since it removes indirection in the native format\n// TODO: store options in a file so people don't have to edit this.\n//       This will require that we allow editing via the UI. Worst case a link\n//       open it in an editor, best case toggling favourites per stream etc\n// TODO: DRY error handling better\n//       DRY usages of :-( everywhere\n//       Work out how to get HTTP code out of request, error cleaner on that\n// TODO: Consider: show the last 24hrs of video from all your favourites\n\n'use strict';\n\n/*jshint esversion: 6 */\n\nconst fs = require('fs');\n\nconst STREAMLINK_PATH = '/usr/local/bin/streamlink';\nconst STREAMLINK_CONFIG_PATH = process.env.HOME + '/.config/streamlink/config';\nconst AUTH_PROP_KEY = 'twitch-oauth-token';\nconst ACCESS_TOKEN = readAccessToken();\n\nconst OPTIONS = {\n  // The followers you care about. This affects the bitbar tray count,\n  // notifications and other stuff.\n  //\n  // Leave as false to count everyone\n  // An empty list means no one\n  // Otherwise list twitch stream usernames, as strings, or regex, or a function\n  // predicate that evaluates over the stream object\n  // e.g.\n  // FAVOURITES: [\n  //   'manvsgame',\n  //   /evo[0-9]/,\n  //   stream =\u003e stream.channel.name === 'itmejp' \u0026\u0026 stream.channel.status.includes('Dropped Frames')\n  // ],\n  // Would show MANvsGAME as a favourite, along with any of the evo rooms, along\n  // with itmeJP if he's streaming Dropped Frames\n  FAVOURITES: false,\n  // True if you want native OSX notifications when a favourite goes live\n  // (if favourites are disabled notifications will work on everyone)\n  NOTIFICATIONS: true,\n  // True if we want to count the game changing as a new notification\n  NOTIFICATIONS_ON_GAME_CHANGE: true,\n  // True if we want to count a VOD-cast as favourite-worthy\n  // TODO: switching from VOD to live should generate notification\n  //       This will be much easier once we do the TODO at the top of the page\n  //       to map the datastructure, because then notification code can easily\n  //       understand if it's a VOD or not\n  FAVOURITES_WITH_VOD: false\n};\n\nconst TWITCH_ICON_36_RETINA =\n  \"iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAACXBIWXMAABYlAAAWJQFJUiTw\" +\n  \"AAA5pGlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlk\" +\n  \"PSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4KPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9i\" +\n  \"ZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENvcmUgNS42LWMxMTEgNzkuMTU4MzI1\" +\n  \"LCAyMDE1LzA5LzEwLTAxOjEwOjIwICAgICAgICAiPgogICA8cmRmOlJERiB4bWxuczpyZGY9\" +\n  \"Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPgogICAgICA8\" +\n  \"cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIgogICAgICAgICAgICB4bWxuczp4bXA9Imh0\" +\n  \"dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iCiAgICAgICAgICAgIHhtbG5zOnhtcE1NPSJo\" +\n  \"dHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvbW0vIgogICAgICAgICAgICB4bWxuczpzdFJl\" +\n  \"Zj0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NUeXBlL1Jlc291cmNlUmVmIyIKICAg\" +\n  \"ICAgICAgICAgeG1sbnM6c3RFdnQ9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlw\" +\n  \"ZS9SZXNvdXJjZUV2ZW50IyIKICAgICAgICAgICAgeG1sbnM6ZGM9Imh0dHA6Ly9wdXJsLm9y\" +\n  \"Zy9kYy9lbGVtZW50cy8xLjEvIgogICAgICAgICAgICB4bWxuczpwaG90b3Nob3A9Imh0dHA6\" +\n  \"Ly9ucy5hZG9iZS5jb20vcGhvdG9zaG9wLzEuMC8iCiAgICAgICAgICAgIHhtbG5zOnRpZmY9\" +\n  \"Imh0dHA6Ly9ucy5hZG9iZS5jb20vdGlmZi8xLjAvIgogICAgICAgICAgICB4bWxuczpleGlm\" +\n  \"PSJodHRwOi8vbnMuYWRvYmUuY29tL2V4aWYvMS4wLyI+CiAgICAgICAgIDx4bXA6Q3JlYXRv\" +\n  \"clRvb2w+QWRvYmUgUGhvdG9zaG9wIENDIDIwMTUgKE1hY2ludG9zaCk8L3htcDpDcmVhdG9y\" +\n  \"VG9vbD4KICAgICAgICAgPHhtcDpDcmVhdGVEYXRlPjIwMTYtMDQtMDlUMTY6MDY6MjIrMDE6\" +\n  \"MDA8L3htcDpDcmVhdGVEYXRlPgogICAgICAgICA8eG1wOk1vZGlmeURhdGU+MjAxNi0wNC0w\" +\n  \"OVQxNjoxNjozOSswMTowMDwveG1wOk1vZGlmeURhdGU+CiAgICAgICAgIDx4bXA6TWV0YWRh\" +\n  \"dGFEYXRlPjIwMTYtMDQtMDlUMTY6MTY6MzkrMDE6MDA8L3htcDpNZXRhZGF0YURhdGU+CiAg\" +\n  \"ICAgICAgIDx4bXBNTTpJbnN0YW5jZUlEPnhtcC5paWQ6NGU2ZThiY2EtZTQ3MC00M2RjLTg2\" +\n  \"YzEtNWIyZmVhNGM2YjNkPC94bXBNTTpJbnN0YW5jZUlEPgogICAgICAgICA8eG1wTU06RG9j\" +\n  \"dW1lbnRJRD54bXAuZGlkOjYzRUJDOTVDQTBDQzExRTNCRjU1OEFFRTJEQkQzMDM3PC94bXBN\" +\n  \"TTpEb2N1bWVudElEPgogICAgICAgICA8eG1wTU06RGVyaXZlZEZyb20gcmRmOnBhcnNlVHlw\" +\n  \"ZT0iUmVzb3VyY2UiPgogICAgICAgICAgICA8c3RSZWY6aW5zdGFuY2VJRD54bXAuaWlkOjYz\" +\n  \"RUJDOTU5QTBDQzExRTNCRjU1OEFFRTJEQkQzMDM3PC9zdFJlZjppbnN0YW5jZUlEPgogICAg\" +\n  \"ICAgICAgICA8c3RSZWY6ZG9jdW1lbnRJRD54bXAuZGlkOjYzRUJDOTVBQTBDQzExRTNCRjU1\" +\n  \"OEFFRTJEQkQzMDM3PC9zdFJlZjpkb2N1bWVudElEPgogICAgICAgICA8L3htcE1NOkRlcml2\" +\n  \"ZWRGcm9tPgogICAgICAgICA8eG1wTU06T3JpZ2luYWxEb2N1bWVudElEPnhtcC5kaWQ6NjNF\" +\n  \"QkM5NUNBMENDMTFFM0JGNTU4QUVFMkRCRDMwMzc8L3htcE1NOk9yaWdpbmFsRG9jdW1lbnRJ\" +\n  \"RD4KICAgICAgICAgPHhtcE1NOkhpc3Rvcnk+CiAgICAgICAgICAgIDxyZGY6U2VxPgogICAg\" +\n  \"ICAgICAgICAgICA8cmRmOmxpIHJkZjpwYXJzZVR5cGU9IlJlc291cmNlIj4KICAgICAgICAg\" +\n  \"ICAgICAgICAgPHN0RXZ0OmFjdGlvbj5zYXZlZDwvc3RFdnQ6YWN0aW9uPgogICAgICAgICAg\" +\n  \"ICAgICAgICA8c3RFdnQ6aW5zdGFuY2VJRD54bXAuaWlkOjRlNmU4YmNhLWU0NzAtNDNkYy04\" +\n  \"NmMxLTViMmZlYTRjNmIzZDwvc3RFdnQ6aW5zdGFuY2VJRD4KICAgICAgICAgICAgICAgICAg\" +\n  \"PHN0RXZ0OndoZW4+MjAxNi0wNC0wOVQxNjoxNjozOSswMTowMDwvc3RFdnQ6d2hlbj4KICAg\" +\n  \"ICAgICAgICAgICAgICAgPHN0RXZ0OnNvZnR3YXJlQWdlbnQ+QWRvYmUgUGhvdG9zaG9wIEND\" +\n  \"IDIwMTUgKE1hY2ludG9zaCk8L3N0RXZ0OnNvZnR3YXJlQWdlbnQ+CiAgICAgICAgICAgICAg\" +\n  \"ICAgIDxzdEV2dDpjaGFuZ2VkPi88L3N0RXZ0OmNoYW5nZWQ+CiAgICAgICAgICAgICAgIDwv\" +\n  \"cmRmOmxpPgogICAgICAgICAgICA8L3JkZjpTZXE+CiAgICAgICAgIDwveG1wTU06SGlzdG9y\" +\n  \"eT4KICAgICAgICAgPGRjOmZvcm1hdD5pbWFnZS9wbmc8L2RjOmZvcm1hdD4KICAgICAgICAg\" +\n  \"PHBob3Rvc2hvcDpDb2xvck1vZGU+MzwvcGhvdG9zaG9wOkNvbG9yTW9kZT4KICAgICAgICAg\" +\n  \"PHRpZmY6T3JpZW50YXRpb24+MTwvdGlmZjpPcmllbnRhdGlvbj4KICAgICAgICAgPHRpZmY6\" +\n  \"WFJlc29sdXRpb24+MTQ0MDAwMC8xMDAwMDwvdGlmZjpYUmVzb2x1dGlvbj4KICAgICAgICAg\" +\n  \"PHRpZmY6WVJlc29sdXRpb24+MTQ0MDAwMC8xMDAwMDwvdGlmZjpZUmVzb2x1dGlvbj4KICAg\" +\n  \"ICAgICAgPHRpZmY6UmVzb2x1dGlvblVuaXQ+MjwvdGlmZjpSZXNvbHV0aW9uVW5pdD4KICAg\" +\n  \"ICAgICAgPGV4aWY6Q29sb3JTcGFjZT42NTUzNTwvZXhpZjpDb2xvclNwYWNlPgogICAgICAg\" +\n  \"ICA8ZXhpZjpQaXhlbFhEaW1lbnNpb24+MzI8L2V4aWY6UGl4ZWxYRGltZW5zaW9uPgogICAg\" +\n  \"ICAgICA8ZXhpZjpQaXhlbFlEaW1lbnNpb24+MzI8L2V4aWY6UGl4ZWxZRGltZW5zaW9uPgog\" +\n  \"ICAgICA8L3JkZjpEZXNjcmlwdGlvbj4KICAgPC9yZGY6UkRGPgo8L3g6eG1wbWV0YT4KICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"IAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAK\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAog\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"IAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAK\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAog\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"IAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAg\" +\n  \"ICAKPD94cGFja2V0IGVuZD0idyI/Ps99cBwAAAAgY0hSTQAAeiUAAICDAAD5/wAAgOkAAHUw\" +\n  \"AADqYAAAOpgAABdvkl/FRgAAAb1JREFUeNrsl00rRUEYx3/X68pLJFFSCjckJBvZ+AKUhdiw\" +\n  \"cL+AUkpslYW8LUSunWJBLCwoUmykCMVHEAspXQvuPTYPjTGne07mnrPxr2meM890/v95ZuaZ\" +\n  \"mYjjOISJnC8j1r3xZY4DdRnmPV09Goz/EKBgOoCBlwNxgCzNMRRQ5B9/TYFgVLEPgGWLpNnA\" +\n  \"GlAIOCYBjUCz8n0J7Fge+ZII+IY6BWNa52LL5LkSBdwEFIWxDVUBb2EL8IN+4M5ljSyIb9JX\" +\n  \"IvKJSiAKFBh8TeKry2QEElI/GXzPUr9kUkDoa+BfQInUtQZftbJQM7YLDoF84MHgmwEagHOt\" +\n  \"3bEp4EKKCVsu7R+KiEgYa2BYmbqyoAXEgHU5jFLAnJcpcCySr4j9DnQAV14ikLBAPqKQo5On\" +\n  \"i8AA0G5onwBOxY4Ci0Ceyw2oU+yk/OvKzy6okKKjRgREgWu5aKRDC3BrKxGdyCl444E8CbS5\" +\n  \"kesCqjyQp4AeuS96ySGt0tdTJpyS8JowBHRJApnXfHtSdJwB935S8bEUE+oVASp2gd4gDqNS\" +\n  \"Q9v2X8n9CNCvXptAn9XHaRrsA69Khpy1laMjYT/PPwcA7IpMXaKcVm4AAAAASUVORK5CYII=\";\n\nfunction readAccessToken() {\n  try {\n    const data = fs.readFileSync(STREAMLINK_CONFIG_PATH, 'utf8');\n    if (data) {\n      const line = data.split('\\n').find(line =\u003e line.indexOf(AUTH_PROP_KEY) \u003e= 0);\n\n      return line.substring(line.indexOf('=') + 1);\n    }\n  } catch (e) {}\n}\n\nfunction outputForStream(stream) {\n  const channel = stream.channel;\n\n  let timeLive = Math.floor((Date.now() - Date.parse(stream.created_at)) / 1000 / 60);\n  if (timeLive \u003e 60) {\n    timeLive = Math.floor(timeLive / 60) + 'h ' + (timeLive % 60) + 'm';\n  } else {\n    timeLive = timeLive + 'm';\n  }\n\n\n  const name = `${!live(stream) ? '[' : ''}${channel.display_name}${!live(stream) ? ']' : ''}`;\n\n  return  [\n      `${name} | href=https://twitch.tv/${channel.name}`,\n      `--📺 ${live(stream) ? 'livestream' : 'VOD'} | terminal=false bash=${STREAMLINK_PATH} param1=${channel.url.replace('http://', '')}`,\n      `--👥 chat | href=https://twitch.tv/${channel.name}/chat?popout=`,\n      `--👤 chit.chat | href=https://chitchat.ma.pe/${channel.name}`,\n      `-----`,\n      isFavourite(stream) ? `--${stream.channel.game}|size=10 color=#888888` : undefined,\n      `--${channel.status.replace(/\\n/g, '')} | color=grey size=10 length=30`,\n      `--👤 ${stream.viewers} live for ${timeLive}| size=10`,\n      ''].join('\\n');\n}\n\nfunction endOutput() {\n  console.log('---');\n  console.log('Refresh | refresh=true');\n}\n\nconst streamName = stream =\u003e stream.channel.name;\nconst live = stream =\u003e stream.stream_type === 'live';\nconst isFavourite = stream =\u003e\n  OPTIONS.FAVOURITES \u0026\u0026 OPTIONS.FAVOURITES.find(f =\u003e\n    typeof f === 'function' ? f(stream) :\n    f instanceof RegExp ? streamName(stream).match(f) :\n    streamName(stream) === f) \u0026\u0026\n  (OPTIONS.FAVOURITES_WITH_VOD || live(stream));\n\nfunction notifications(streams) {\n  const TEMP_FILE = '/tmp/livestreamer-now-playing.json';\n  const statusFile = () =\u003e {\n    try {\n      return JSON.parse(fs.readFileSync(TEMP_FILE, 'utf8'));\n    } catch (error) {\n      return {\n        live: []\n      };\n    }\n  };\n\n  if (fs.existsSync(TEMP_FILE)) {\n    const status = statusFile();\n    const currentStreamers = streams.filter(isFavourite);\n    const changedStreams = currentStreamers.filter(stream =\u003e\n      // Just went live\n      !Object.keys(status.live).includes(streamName(stream)) ||\n      // Just changed games\n      (OPTIONS.NOTIFICATIONS_ON_GAME_CHANGE \u0026\u0026\n       status.live[streamName(stream)].game !== stream.channel.game));\n\n    if (changedStreams.length) {\n      const exec = require('child_process').exec;\n      const safe = text =\u003e text.replace(/('|\")/, \"\");\n\n      // TODO: better notification approach\n      //       osascript doesn't let you set the click action\n      //       https://stackoverflow.com/questions/24606225/redirected-to-applescript-editor-on-clicking-apple-notification\n      changedStreams.map(stream =\u003e\n        exec(`osascript -e 'display notification \"${safe(stream.channel.status)}\" with title \"${safe(streamName(stream))} is playing ${safe(stream.channel.game)}\" sound name \"Ping\"'`));\n    }\n  }\n\n  fs.writeFileSync(TEMP_FILE, JSON.stringify({\n    live: streams.reduce((live, s) =\u003e {\n      live[streamName(s)] = {\n        game: s.channel.game\n      };\n      return live;\n    }, {})\n  }));\n}\n\nfunction handleResponse(body) {\n  const streamByGame = {};\n\n  if (!(body \u0026\u0026 body.streams)) {\n    console.log(':-(');\n    console.log('---');\n    console.log(body);\n    return endOutput();\n  }\n\n  const onlineStreams = body.streams.filter(stream =\u003e !stream.is_playlist);\n\n  const importantStreams = [];\n\n  onlineStreams.forEach(stream =\u003e {\n    if (isFavourite(stream)) {\n      return importantStreams.push(stream);\n    }\n\n    if (!streamByGame[stream.channel.game]) {\n      streamByGame[stream.channel.game] = [];\n    }\n\n    streamByGame[stream.channel.game].push(stream);\n  });\n\n  const outputs = [];\n\n  if (importantStreams.length) {\n    outputs.push(importantStreams.map(outputForStream).join(''));\n  }\n\n  for (const game in streamByGame) {\n    outputs.push([game, '| size=10 color=#888888 length=30\\n', streamByGame[game].map(outputForStream).join('')].join(''));\n  }\n\n  if (onlineStreams.length === 0) {\n    console.log('|templateImage=\"'+ TWITCH_ICON_36_RETINA + '\"\\n');\n  } else {\n    const count =\n      (OPTIONS.FAVOURITES ? importantStreams.length : onlineStreams.length) || '';\n    console.log(count + '|image=\"'+ TWITCH_ICON_36_RETINA + '\"\\n');\n  }\n\n  console.log('---\\n' + outputs.join('\\n---\\n'));\n\n  endOutput();\n\n  if (OPTIONS.NOTIFICATIONS) {\n    notifications(onlineStreams);\n  }\n}\ntry {\n  if (ACCESS_TOKEN) {\n    const urlHost = 'api.twitch.tv';\n    const urlPath = '/kraken/streams/followed';\n\n    require('https').get({\n      hostname: urlHost,\n      path: urlPath,\n      headers: {\n        'Authorization': 'OAuth ' + ACCESS_TOKEN\n      }\n    }, res =\u003e {\n      let body = '';\n      res.on('data', data =\u003e body += data);\n      res.on('end', () =\u003e {\n        try {\n          handleResponse(JSON.parse(body));\n        } catch (error) {\n          console.log(':-(');\n          console.log('---');\n          console.log(error);\n          endOutput();\n        }\n      });\n      res.on('error', err =\u003e {\n        console.log(':-(');\n        console.log('---');\n        console.log(err);\n        endOutput();\n      });\n    });\n  } else {\n    console.log('💔');\n    console.log('---');\n    console.log('Click to authenticate streamlink | terminal=false bash=' + STREAMLINK_PATH + ' param1=--twitch-oauth-authenticate');\n    endOutput();\n  }\n} catch (error) {\n  console.log(':-(');\n  endOutput();\n}\n\n"
				}
			],
			"path": "Web/Twitch/livestreamer-now-playing.5m.js",
			"filename": "livestreamer-now-playing.5m.js",
			"dir": "Web/Twitch",
			"docsPlugin": "Web/Twitch/livestreamer-now-playing.5m.js.html",
			"docsCategory": "Web/Twitch.html",
			"pathSegments": [
				"Web",
				"Twitch"
			],
			"categoryPathSegments": [
				{
					"path": "Web",
					"text": "Web",
					"isLast": false
				},
				{
					"path": "Web/Twitch",
					"text": "Twitch",
					"isLast": true
				}
			],
			"title": "Twitch Following",
			"version": "v2.3",
			"author": "Stefan du Fresne",
			"authors": [
				{
					"name": "Stefan du Fresne",
					"githubUsername": "SCdF",
					"imageURL": "https://avatars.githubusercontent.com/u/583851?v=4",
					"bio": "",
					"primary": true
				}
			],
			"desc": "Shows which channels you follow are live, what they're playing, for how long etc. Lets you watch them with streamlink and open the chat in your browser. Based on the play-with-livestreamer bitbar plugin. Requires a Twitch account.",
			"imageURL": "https://i.imgur.com/dhscE7r.png",
			"dependencies": [
				"node",
				"streamlink"
			],
			"aboutURL": "",
			"lastUpdated": "2021-03-08T15:22:09.115892Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "Lifestyle/habitica.1h.js",
					"filename": "habitica.1h.js",
					"content": "#!/usr/bin/env /usr/local/bin/node\n\n// \u003cbitbar.title\u003eHabitica\u003c/bitbar.title\u003e\n// \u003cbitbar.version\u003ev1.2\u003c/bitbar.version\u003e\n// \u003cbitbar.author\u003eStefan du Fresne\u003c/bitbar.author\u003e\n// \u003cbitbar.author.github\u003eSCdF\u003c/bitbar.author.github\u003e\n// \u003cbitbar.desc\u003eAllows you to manage your Habitica tasks, habits and to-dos. See: habitica.com\u003c/bitbar.desc\u003e\n// \u003cbitbar.image\u003ehttp://i.imgur.com/CUO445t.png\u003c/bitbar.image\u003e\n// \u003cbitbar.dependencies\u003enode6\u003c/bitbar.dependencies\u003e\n\n/*jshint esversion: 6 */\n'use strict';\n\n// Go here: https://habitica.com/#/options/settings/api\n// And put your values in these vars below!\nconst USER_ID = 'YOUR_USER_ID_HERE';\nconst API_TOKEN = 'YOUR_TOKEN_HERE';\n\nconst HABITICA_ICON =\n  'iVBORw0KGgoAAAANSUhEUgAAACQAAAAkCAYAAADhAJiYAAAACXBIWXMAABYlAAAWJQFJUiTwAA' +\n  'A6HWlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJX' +\n  'NU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4KPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpucz' +\n  'ptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENvcmUgNS42LWMxMzIgNzkuMTU5Mjg0LCAyMDE2' +\n  'LzA0LzE5LTEzOjEzOjQwICAgICAgICAiPgogICA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly' +\n  '93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPgogICAgICA8cmRmOkRlc2Ny' +\n  'aXB0aW9uIHJkZjphYm91dD0iIgogICAgICAgICAgICB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG' +\n  '9iZS5jb20veGFwLzEuMC8iCiAgICAgICAgICAgIHhtbG5zOmRjPSJodHRwOi8vcHVybC5vcmcv' +\n  'ZGMvZWxlbWVudHMvMS4xLyIKICAgICAgICAgICAgeG1sbnM6cGhvdG9zaG9wPSJodHRwOi8vbn' +\n  'MuYWRvYmUuY29tL3Bob3Rvc2hvcC8xLjAvIgogICAgICAgICAgICB4bWxuczp4bXBNTT0iaHR0' +\n  'cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIKICAgICAgICAgICAgeG1sbnM6c3RFdnQ9Im' +\n  'h0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZUV2ZW50IyIKICAgICAg' +\n  'ICAgICAgeG1sbnM6dGlmZj0iaHR0cDovL25zLmFkb2JlLmNvbS90aWZmLzEuMC8iCiAgICAgIC' +\n  'AgICAgIHhtbG5zOmV4aWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20vZXhpZi8xLjAvIj4KICAgICAg' +\n  'ICAgPHhtcDpDcmVhdGVEYXRlPjIwMTYtMDctMzBUMTM6MzA6MTErMDE6MDA8L3htcDpDcmVhdG' +\n  'VEYXRlPgogICAgICAgICA8eG1wOk1vZGlmeURhdGU+MjAxNi0wNy0zMFQxMzozMTo0NSswMTow' +\n  'MDwveG1wOk1vZGlmeURhdGU+CiAgICAgICAgIDx4bXA6TWV0YWRhdGFEYXRlPjIwMTYtMDctMz' +\n  'BUMTM6MzE6NDUrMDE6MDA8L3htcDpNZXRhZGF0YURhdGU+CiAgICAgICAgIDx4bXA6Q3JlYXRv' +\n  'clRvb2w+QWRvYmUgUGhvdG9zaG9wIENDIDIwMTUuNSAoTWFjaW50b3NoKTwveG1wOkNyZWF0b3' +\n  'JUb29sPgogICAgICAgICA8ZGM6Zm9ybWF0PmltYWdlL3BuZzwvZGM6Zm9ybWF0PgogICAgICAg' +\n  'ICA8cGhvdG9zaG9wOkNvbG9yTW9kZT4zPC9waG90b3Nob3A6Q29sb3JNb2RlPgogICAgICAgIC' +\n  'A8eG1wTU06SW5zdGFuY2VJRD54bXAuaWlkOmI1Y2U5ZjZlLWRmZjEtNDYzNS05Yzk0LTkzN2I2' +\n  'OTI2NzliMTwveG1wTU06SW5zdGFuY2VJRD4KICAgICAgICAgPHhtcE1NOkRvY3VtZW50SUQ+eG' +\n  '1wLmRpZDplYTUwZTRiMi0zZmVjLTQ1MDktOWVhMS02MGIxYTZhZDRhODU8L3htcE1NOkRvY3Vt' +\n  'ZW50SUQ+CiAgICAgICAgIDx4bXBNTTpPcmlnaW5hbERvY3VtZW50SUQ+eG1wLmRpZDplYTUwZT' +\n  'RiMi0zZmVjLTQ1MDktOWVhMS02MGIxYTZhZDRhODU8L3htcE1NOk9yaWdpbmFsRG9jdW1lbnRJ' +\n  'RD4KICAgICAgICAgPHhtcE1NOkhpc3Rvcnk+CiAgICAgICAgICAgIDxyZGY6U2VxPgogICAgIC' +\n  'AgICAgICAgICA8cmRmOmxpIHJkZjpwYXJzZVR5cGU9IlJlc291cmNlIj4KICAgICAgICAgICAg' +\n  'ICAgICAgPHN0RXZ0OmFjdGlvbj5zYXZlZDwvc3RFdnQ6YWN0aW9uPgogICAgICAgICAgICAgIC' +\n  'AgICA8c3RFdnQ6aW5zdGFuY2VJRD54bXAuaWlkOmVhNTBlNGIyLTNmZWMtNDUwOS05ZWExLTYw' +\n  'YjFhNmFkNGE4NTwvc3RFdnQ6aW5zdGFuY2VJRD4KICAgICAgICAgICAgICAgICAgPHN0RXZ0On' +\n  'doZW4+MjAxNi0wNy0zMFQxMzozMTowMiswMTowMDwvc3RFdnQ6d2hlbj4KICAgICAgICAgICAg' +\n  'ICAgICAgPHN0RXZ0OnNvZnR3YXJlQWdlbnQ+QWRvYmUgUGhvdG9zaG9wIENDIDIwMTUuNSAoTW' +\n  'FjaW50b3NoKTwvc3RFdnQ6c29mdHdhcmVBZ2VudD4KICAgICAgICAgICAgICAgICAgPHN0RXZ0' +\n  'OmNoYW5nZWQ+Lzwvc3RFdnQ6Y2hhbmdlZD4KICAgICAgICAgICAgICAgPC9yZGY6bGk+CiAgIC' +\n  'AgICAgICAgICAgIDxyZGY6bGkgcmRmOnBhcnNlVHlwZT0iUmVzb3VyY2UiPgogICAgICAgICAg' +\n  'ICAgICAgICA8c3RFdnQ6YWN0aW9uPnNhdmVkPC9zdEV2dDphY3Rpb24+CiAgICAgICAgICAgIC' +\n  'AgICAgIDxzdEV2dDppbnN0YW5jZUlEPnhtcC5paWQ6YjVjZTlmNmUtZGZmMS00NjM1LTljOTQt' +\n  'OTM3YjY5MjY3OWIxPC9zdEV2dDppbnN0YW5jZUlEPgogICAgICAgICAgICAgICAgICA8c3RFdn' +\n  'Q6d2hlbj4yMDE2LTA3LTMwVDEzOjMxOjQ1KzAxOjAwPC9zdEV2dDp3aGVuPgogICAgICAgICAg' +\n  'ICAgICAgICA8c3RFdnQ6c29mdHdhcmVBZ2VudD5BZG9iZSBQaG90b3Nob3AgQ0MgMjAxNS41IC' +\n  'hNYWNpbnRvc2gpPC9zdEV2dDpzb2Z0d2FyZUFnZW50PgogICAgICAgICAgICAgICAgICA8c3RF' +\n  'dnQ6Y2hhbmdlZD4vPC9zdEV2dDpjaGFuZ2VkPgogICAgICAgICAgICAgICA8L3JkZjpsaT4KIC' +\n  'AgICAgICAgICAgPC9yZGY6U2VxPgogICAgICAgICA8L3htcE1NOkhpc3Rvcnk+CiAgICAgICAg' +\n  'IDx0aWZmOk9yaWVudGF0aW9uPjE8L3RpZmY6T3JpZW50YXRpb24+CiAgICAgICAgIDx0aWZmOl' +\n  'hSZXNvbHV0aW9uPjE0NDAwMDAvMTAwMDA8L3RpZmY6WFJlc29sdXRpb24+CiAgICAgICAgIDx0' +\n  'aWZmOllSZXNvbHV0aW9uPjE0NDAwMDAvMTAwMDA8L3RpZmY6WVJlc29sdXRpb24+CiAgICAgIC' +\n  'AgIDx0aWZmOlJlc29sdXRpb25Vbml0PjI8L3RpZmY6UmVzb2x1dGlvblVuaXQ+CiAgICAgICAg' +\n  'IDxleGlmOkNvbG9yU3BhY2U+NjU1MzU8L2V4aWY6Q29sb3JTcGFjZT4KICAgICAgICAgPGV4aW' +\n  'Y6UGl4ZWxYRGltZW5zaW9uPjM2PC9leGlmOlBpeGVsWERpbWVuc2lvbj4KICAgICAgICAgPGV4' +\n  'aWY6UGl4ZWxZRGltZW5zaW9uPjM2PC9leGlmOlBpeGVsWURpbWVuc2lvbj4KICAgICAgPC9yZG' +\n  'Y6RGVzY3JpcHRpb24+CiAgIDwvcmRmOlJERj4KPC94OnhtcG1ldGE+CiAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC' +\n  'AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC' +\n  'AgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC' +\n  'AgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC' +\n  'AKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgIC' +\n  'AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIC' +\n  'AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIC' +\n  'AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC' +\n  'AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC' +\n  'AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC' +\n  'AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC' +\n  'AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC' +\n  'AgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC' +\n  'AgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC' +\n  'AgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgIC' +\n  'AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgIC' +\n  'AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgIC' +\n  'AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC' +\n  'AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC' +\n  'AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC' +\n  'AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC' +\n  'AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC' +\n  'AgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC' +\n  'AgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC' +\n  'AgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgIC' +\n  'AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIC' +\n  'AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgIC' +\n  'AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC' +\n  'AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC' +\n  'AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAog' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC' +\n  'AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC' +\n  'AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC' +\n  'AgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC' +\n  'AgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC' +\n  'AgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgIC' +\n  'AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgIC' +\n  'AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgIC' +\n  'AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC' +\n  'AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC' +\n  'AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAK' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC' +\n  'AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC' +\n  'AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC' +\n  'AgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC' +\n  'AgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC' +\n  'AgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgIC' +\n  'AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgIC' +\n  'AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIC' +\n  'AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC' +\n  'AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC' +\n  'AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC' +\n  'AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC' +\n  'AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC' +\n  'AgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC' +\n  'AgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC' +\n  'AgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgIC' +\n  'AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgIC' +\n  'AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgIC' +\n  'AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC' +\n  'AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC' +\n  'AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'IAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC' +\n  'AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC' +\n  'AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC' +\n  'AgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC' +\n  'AgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC' +\n  'AgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogIC' +\n  'AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgIC' +\n  'AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgIC' +\n  'AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC' +\n  'AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC' +\n  'AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC' +\n  'AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC' +\n  'AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC' +\n  'AgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC' +\n  'AgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC' +\n  'AgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKIC' +\n  'AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgIC' +\n  'AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgIC' +\n  'AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC' +\n  'AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC' +\n  'AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC' +\n  'AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC' +\n  'AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC' +\n  'AgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC' +\n  'AgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC' +\n  'AgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCi' +\n  'AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgIC' +\n  'AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIC' +\n  'AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC' +\n  'AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC' +\n  'AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC' +\n  'AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC' +\n  'AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC' +\n  'AgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC' +\n  'AgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC' +\n  'AgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA' +\n  'ogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgIC' +\n  'AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgIC' +\n  'AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgIC' +\n  'AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC' +\n  'AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC' +\n  'AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC' +\n  'AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC' +\n  'AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC' +\n  'AgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC' +\n  'AgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC' +\n  'AKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgIC' +\n  'AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIC' +\n  'AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIC' +\n  'AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgCjw/eHBhY2tldC' +\n  'BlbmQ9InciPz5J4M7HAAAAIGNIUk0AAHolAACAgwAA+f8AAIDpAAB1MAAA6mAAADqYAAAXb5Jf' +\n  'xUYAAAT0SURBVHja7JhfbFN1FMc/567rsBsERiSAhBBoy5LxgMQnHrCsk39BMEaCIQaFGE1IiG' +\n  'BcNybGG2LCVkAJ+kBMDIhIVIhGIIrZmGVogkQkmkzZn+AS3RDDABUurN29x4e1446uawsL8uB5' +\n  'ur2/3/3db8/5nu8554qqcj+ZwX1mntSFiLAguKmsT+13iq/7lh3pNq17BcIdpUEesp24IRC2Sq' +\n  'yjj082ff95yHzW6M5+yMy/XmwdDpWbJfcakKTcJSIAhAORc8DM5PpZO6FLYp3b/sj34BXlprfn' +\n  '5o1HRPquHu/Y8fOKctPbk7BmO4bxZ+xcXWemkKUBqghU7xJ0vWv/BRFndWPb9sZcgISmmaM8nh' +\n  'sbMDSiyrjk7R5gDFAI9Kowr6ktenooQJ50hjl7EXEDmqRqNFQGInvEYHNDa7R7EICQ6Snour4I' +\n  'lVEizFastQqTGKwm413XRaK6FjidU9o3dWz7QeFEGk5Y4zicDwcieyv8VXMGAMVwQGoRDiq8Ck' +\n  'zKThQm5qVDovY6IDHEUhHwrIicCQcizZXBVypNTMdO+CpQtopwJQuU3xD9XFWO5UzqlIX91c8g' +\n  '+kF2EeFjn+Vbe6TbtPrDZx0FFg4pet7E+K9a3rqcsw657XhH/X5HWQ5czOL+lZbPOmRiGrGY2a' +\n  'dD8TJpfXHv8znrUKisZlrIH5niXvy6I3rY9vr8IrwIfCjCGeDHZNa4QS0+GbjxZsZEueWL+rA/' +\n  '8sVi//oxWQEV2M6vBQbfpKVxCxYwXYVTDrpb0EPA70O87KVwoGq3QDCLRxfH5YFjoZDpGZZD4W' +\n  'B1TJBLiO5X6HbrxG1iOTL1C13T1L5tb0YONbVHQwbOGyifCVrrfthRIiNeIpCncm8/VMoqgxGz' +\n  '0l8TSnEJ4b0RxhQyMY1c+6GZqryO4YRSN0oLfeuA90cQ0M3v/D0lw+rQY4Gq2Q5y1rXeiug5lY' +\n  'JdTa11Tf18qloKsgV4+C7A9JZ6fWMOtpjxnHUo5SlUluPYUwf0qX3b0ePt0TmKPIqyQ5Vv02Qg' +\n  'uxVdiVtLh+0YARLe4g5P7835GM4iVapv+VHSXNvUXt8MNAOE/JEphiEvi+rGPFj9BPBpTqWjIl' +\n  'D1nCB7XNu67ETvrFjnzqvp5YU60IfyT3tONLVHQzmFbLy3+ICdiI+zE/FxHm9iPDjdBR7vZvee' +\n  'ymDkhf5alz+YZNpfzhqylCXJFh/wWDCyT2BZ6vfC8o2lfXG232Vn33jHY5AoqwRtHiiSvYVPA6' +\n  'PvAs5Fu8i3744AhYNVtSBT+7zFO13+nnsXYP4xDJbGWsxrOYcsZfODVUtQ2aywaNABwmTufOA9' +\n  '39Aa/T7vyTU0o8ZvqHwkwoZkirtTZFSOL7dHZJQ2MY0Cwz6A8EljW/TdIVI2noV1XYquKfX6fL' +\n  'bXNxpla96jtNtO+q0nQYJ2oa8iA8ktJOOZv9jSNy/WtuNS8nccqK0IVJcIuh4dnrdDN/nCbOBS' +\n  'JuIhXM54oMFqF5hbtUKtzUAvBmPyBqToKWBGOBDZsqLc9N4+CALTMxXNsR7fT6l5zf3slx1v/w' +\n  '10oExMnpHf1FEZjNT11zPpAm0EuSqipY6ySODBYf7kBcACpgKWndCygiKdgG3UISxOdREiXFNl' +\n  'lgg7G1rra7ICAlgQ3FRmq71KYa70e2UCUJzfxwNZqaKzgNcybPmrsa1+bBqg/7+gZbB/BwBXfQ' +\n  'a0r0oBWwAAAABJRU5ErkJggg==';\n\n//   ================================================================================================\n//   ===     =====    ====  =======  ===      ===        =====  =====  =======  ==        ===      ==\n//   ==  ===  ===  ==  ===   ======  ==  ====  =====  =======    ====   ======  =====  =====  ====  =\n//   =  ========  ====  ==    =====  ==  ====  =====  ======  ==  ===    =====  =====  =====  ====  =\n//   =  ========  ====  ==  ==  ===  ===  ==========  =====  ====  ==  ==  ===  =====  ======  ======\n//   =  ========  ====  ==  ===  ==  =====  ========  =====  ====  ==  ===  ==  =====  ========  ====\n//   =  ========  ====  ==  ====  =  =======  ======  =====        ==  ====  =  =====  ==========  ==\n//   =  ========  ====  ==  =====    ==  ====  =====  =====  ====  ==  =====    =====  =====  ====  =\n//   ==  ===  ===  ==  ===  ======   ==  ====  =====  =====  ====  ==  ======   =====  =====  ====  =\n//   ===     =====    ====  =======  ===      ======  =====  ====  ==  =======  =====  ======      ==\n//   ================================================================================================\n\n// NB: DEBUG on means refreshing post-action doesn't work\nconst DEBUG = false;\n\nconst REQUEST_TIMEOUT = 30 * 1000;\n\nconst NEW_DAY = '🌅';\n\nconst UNCHECKED = '◻️';\nconst CHECKED = '☑️';\nconst HEALTH = '💗';\nconst EXP = '⭐';\nconst MAGIC = '🔥';\n\nconst SCORE_UP   = '➕';\nconst SCORE_DOWN = '➖';\n\nconst SCORE_TASK = 'scoreTask';\nconst SCORE_CHECKLIST_ITEM = 'scoreChecklistItem';\nconst START_NEW_DAY = 'startNewDay';\n\n//   ========================================================================\n//   =  ====  =====  =====      ====    ==        ==    ====     ======  ====\n//   =  ====  ====    ====  ===  ====  ======  ======  ====  ===  ====    ===\n//   =  ====  ===  ==  ===  ====  ===  ======  ======  ===  =========  ==  ==\n//   =  ====  ==  ====  ==  ===  ====  ======  ======  ===  ========  ====  =\n//   =        ==  ====  ==      =====  ======  ======  ===  ========  ====  =\n//   =  ====  ==        ==  ===  ====  ======  ======  ===  ========        =\n//   =  ====  ==  ====  ==  ====  ===  ======  ======  ===  ========  ====  =\n//   =  ====  ==  ====  ==  ===  ====  ======  ======  ====  ===  ==  ====  =\n//   =  ====  ==  ====  ==      ====    =====  =====    ====     ===  ====  =\n//   ========================================================================\n\nconst https = require('https');\n\nconst options = function(method, endpoint) {\n  return {\n    method: method,\n    hostname: 'habitica.com',\n    path: '/api/v3/' + endpoint,\n    timeout: REQUEST_TIMEOUT,\n    headers: {\n      'x-api-user': USER_ID,\n      'x-api-key': API_TOKEN\n    }\n  };\n};\n\nconst request = function(method, endpoint) {\n  return new Promise((resolve, reject) =\u003e {\n    let req = https.request(options(method, endpoint), (res) =\u003e {\n      if (res.statusCode !== 200) {\n        return reject('HTTP'+res.statusCode+' when '+method+'ing ['+endpoint+']');\n      }\n\n      let body = '';\n      res.on('data', data =\u003e body += data);\n      res.on('end',  ()   =\u003e resolve(JSON.parse(body)));\n      res.on('error', reject);\n    });\n\n    req.end();\n    req.on('error', reject);\n  });\n};\n\nconst get = function(endpoint) {\n  return request('GET', endpoint);\n};\n\n//   =====================================================================\n//   ====  =======     ===        ==    ====    ====  =======  ===      ==\n//   ===    =====  ===  =====  ======  ====  ==  ===   ======  ==  ====  =\n//   ==  ==  ===  ===========  ======  ===  ====  ==    =====  ==  ====  =\n//   =  ====  ==  ===========  ======  ===  ====  ==  ==  ===  ===  ======\n//   =  ====  ==  ===========  ======  ===  ====  ==  ===  ==  =====  ====\n//   =        ==  ===========  ======  ===  ====  ==  ====  =  =======  ==\n//   =  ====  ==  ===========  ======  ===  ====  ==  =====    ==  ====  =\n//   =  ====  ===  ===  =====  ======  ====  ==  ===  ======   ==  ====  =\n//   =  ====  ====     ======  =====    ====    ====  =======  ===      ==\n//   =====================================================================\n\nconst scoreTask = (taskId, direction) =\u003e request('POST', 'tasks/'+taskId+'/score/'+direction);\n\nconst scoreChecklistItem = (taskId, checklistItemId) =\u003e\n  request('POST', 'tasks/'+taskId+'/checklist/'+checklistItemId+'/score');\n\nconst processArguments = function() {\n  const action = process.argv[2];\n\n  switch (action) {\n    case SCORE_TASK: {\n      const taskId = process.argv[3],\n            direction = process.argv[4];\n      if (taskId \u0026\u0026 direction) {\n        return scoreTask(taskId, direction);\n      } else {\n        throw Error(SCORE_TASK + ' requires an id and a direction');\n      }\n      break;\n    }\n    case SCORE_CHECKLIST_ITEM: {\n      const taskId = process.argv[3],\n            checklistItemId = process.argv[4];\n\n      if (taskId \u0026\u0026 checklistItemId) {\n        return scoreChecklistItem(taskId, checklistItemId);\n      } else {\n        throw Error(SCORE_CHECKLIST_ITEM + ' missing params');\n      }\n      break;\n    }\n    case START_NEW_DAY: {\n      return request('POST', 'cron');\n    }\n    default:\n      throw Error('Unsupported action ' + action);\n  }\n};\n\n//   ==============================================\n//   =  ==========    =====      ===    ====     ==\n//   =  =========  ==  ===   ==   ===  ====  ===  =\n//   =  ========  ====  ==  ====  ===  ===  =======\n//   =  ========  ====  ==  =========  ===  =======\n//   =  ========  ====  ==  =========  ===  =======\n//   =  ========  ====  ==  ===   ===  ===  =======\n//   =  ========  ====  ==  ====  ===  ===  =======\n//   =  =========  ==  ===   ==   ===  ====  ===  =\n//   =        ====    =====      ===    ====     ==\n//   ==============================================\n\nconst dayOfWeek = new Date().getDay();\nconst now = Date.now();\nconst tz = new Date().getTimezoneOffset();\nconst days = ['su', 'm', 't', 'w', 'th', 'f', 's'];\n\nconst relevant = task =\u003e {\n  switch (task.frequency) {\n    case 'weekly':\n      return task.repeat[days[dayOfWeek]];\n    case 'daily':\n      let startDateLocal = new Date(task.startDate).getTime() - (1000 * 60 * tz);\n      let msDifferent = Math.abs(Date.now() - startDateLocal);\n      let daysDifferent = Math.floor(msDifferent / (1000 * 60 * 60 * 24));\n\n      return daysDifferent % task.everyX === 0;\n    default:\n      throw Error('Cannot handle task.frequency of ' + task.frequency);\n  }\n};\nconst daily = task =\u003e task.type === 'daily';\nconst habit = task =\u003e task.type === 'habit';\nconst todo = task =\u003e task.type === 'todo';\nconst completed = task =\u003e task.completed;\nconst incomplete = task =\u003e !completed(task);\n\n// presumes that habitica never screws up and always contains all the ids\n// we need\nconst order = (correctOrder, unorderedItems) =\u003e\n  correctOrder\n    .map(oItem =\u003e unorderedItems.find(item =\u003e item._id === oItem))\n    .filter(i =\u003e i); // identity function, removes undefined\n\n//   ============================================================\n//   ===    ====  ====  ==        ==       ===  ====  ==        =\n//   ==  ==  ===  ====  =====  =====  ====  ==  ====  =====  ====\n//   =  ====  ==  ====  =====  =====  ====  ==  ====  =====  ====\n//   =  ====  ==  ====  =====  =====  ====  ==  ====  =====  ====\n//   =  ====  ==  ====  =====  =====       ===  ====  =====  ====\n//   =  ====  ==  ====  =====  =====  ========  ====  =====  ====\n//   =  ====  ==  ====  =====  =====  ========  ====  =====  ====\n//   ==  ==  ===   ==   =====  =====  ========   ==   =====  ====\n//   ===    =====      ======  =====  =========      ======  ====\n//   ============================================================\n\nconst sep = () =\u003e console.log('---');\nconst title = text =\u003e console.log(text + '|size=10');\n\nconst FILLED = '🌕';\nconst UNFILLED = '🌑';\nconst FILLEDISH = ['🌘','🌗','🌖'];\nconst progressBar = function(n, total, charLength = 10) {\n  n = Math.max(n, 0); // Health can be negative\n\n  const progress = (n / total) * charLength;\n  const ish = progress % 1;\n\n  const filled = Array(Math.floor(progress) + 1).join(FILLED);\n  const middle = ish ? FILLEDISH[Math.ceil(FILLEDISH.length * ish) - 1] : false;\n  const unfilled = Array(charLength - Math.floor(progress) + (middle ? 0 : 1)).join(UNFILLED);\n\n  return filled + (middle ? middle : '') + unfilled;\n};\n\nconst action = function(action, params) {\n  params = Array.prototype.slice.call(arguments).slice(1);\n  return ['terminal='+DEBUG+' refresh=true bash=' + process.argv[0],\n          'param1=' + process.argv[1],\n          'param2=' + action\n         ].concat(params.map((p, i) =\u003e 'param'+(i+3)+'='+p))\n         .join(' ');\n};\n\nconst outputTasks = function(titleName, tasks) {\n  title(titleName);\n\n  tasks.forEach(task =\u003e {\n    console.log([UNCHECKED, task.text, '|', action(SCORE_TASK, task._id, 'up')].join(' '));\n    task.checklist.forEach(item =\u003e {\n      console.log(\n        ['--', (completed(item) ? CHECKED : UNCHECKED), item.text, '|',\n         action(SCORE_CHECKLIST_ITEM, task._id, item.id)].join(' '));\n    });\n  });\n};\n\nconst outputHabits = function(habits) {\n  title('Habits');\n\n  habits.forEach(habit =\u003e {\n    if (habit.up) {\n      console.log([SCORE_UP, habit.text, '|', action(SCORE_TASK, habit._id, 'up')].join(' '));\n    }\n    if (habit.down) {\n      console.log([SCORE_DOWN, habit.text, '|', action(SCORE_TASK, habit._id, 'down')].join(' '));\n    }\n  });\n};\n\nconst outputProfile = function(userData) {\n  title(userData.profile.name +\n    ' \u003clvl ' + userData.stats.lvl + ' ' +\n    (n =\u003e n[0].toUpperCase() + n.slice(1))(userData.stats.class) + '\u003e');\n\n  const font = '| color=black size=10 font=Monaco';\n\n  const hp = Math.floor(userData.stats.hp),\n        xp = Math.floor(userData.stats.exp),\n        mp = Math.floor(userData.stats.mp),\n        maxHp = userData.stats.maxHealth,\n        maxXp = userData.stats.toNextLevel,\n        maxMp = userData.stats.maxMP;\n\n  console.log([HEALTH, progressBar(hp, maxHp), hp, '/', maxHp, font].join(' '));\n  console.log([EXP, progressBar(xp, maxXp), xp, '/', maxXp, font].join(' '));\n  console.log([MAGIC, progressBar(mp, maxMp), mp, '/', maxMp, font].join(' '));\n};\n\nconst outputIcon = function(numDailies, isSleeping, needsCron) {\n  if (isSleeping) {\n    console.log(`Zzz|templateImage=\"${HABITICA_ICON}\"`);\n  } else {\n    if (numDailies) {\n      numDailies = needsCron ? `(${numDailies})` : numDailies;\n      console.log(`${numDailies}|image=\"${HABITICA_ICON}\"`);\n    } else {\n      console.log(`|templateImage=\"${HABITICA_ICON}\"`);\n    }\n  }\n};\n\nconst outputNeedsCron = () =\u003e {\n  console.log('You left Dailies unchecked yesterday!|size=11');\n  console.log('Either check them off now or…|size=11');\n  console.log(NEW_DAY + ' Start My New Day|' + action('startNewDay'));\n};\n\nconst output = function(dailies, habits, todos, userData) {\n    outputIcon(dailies.length,\n               userData.preferences.sleep,\n               userData.needsCron);\n\n    if (userData.needsCron) {\n      sep();\n      outputNeedsCron();\n    }\n\n    if (dailies.length) {\n      sep();\n      outputTasks((userData.needsCron ? 'Yesterday\\'s ' : '') + 'Dailies', dailies);\n    }\n\n    if (habits.length) {\n      sep();\n      outputHabits(habits);\n    }\n\n    if (todos.length) {\n      sep();\n      outputTasks('To-Dos', todos);\n    }\n\n    sep();\n    outputProfile(userData);\n    sep();\n    console.log('Go to website|href=\"https://habitica.com\"');\n    console.log('Refresh|refresh=true');\n};\n\n//   ==============================================\n//   =        ==  ==========    ====  ====  ====  =\n//   =  ========  =========  ==  ===  ====  ====  =\n//   =  ========  ========  ====  ==  ====  ====  =\n//   =  ========  ========  ====  ==  ====  ====  =\n//   =      ====  ========  ====  ==   ==    ==  ==\n//   =  ========  ========  ====  ===  ==    ==  ==\n//   =  ========  ========  ====  ===  ==    ==  ==\n//   =  ========  =========  ==  =====    ==    ===\n//   =  ========        ====    =======  ====  ====\n//   ==============================================\n\nconst failure = function(reason) {\n  console.log('☹');\n  console.log('---');\n  console.log(reason);\n};\n\nif (USER_ID === 'YOUR_USER_ID_HERE' || API_TOKEN === 'YOUR_TOKEN_HERE') {\n  return failure('Please configure the plugin with your userid and token');\n}\n\nget('status')\n.catch(err =\u003e {\n  throw new Error('habitica api is down');\n})\n.then(result =\u003e {\n  if (result.data.status !== 'up') {\n    throw new Error('habitica api is down');\n  }\n})\n.then(() =\u003e {\n  if (process.argv.length \u003e 2) {\n    return processArguments().then((r) =\u003e console.log(JSON.stringify(r, null, 2)));\n  } else {\n    return Promise.all([\n      get('tasks/user'),\n      get('user')])\n    .then(([tasks, user]) =\u003e {\n      const dailies = order(\n        user.data.tasksOrder.dailys,\n        tasks.data\n          .filter(daily)\n          .filter(relevant)\n          .filter(incomplete));\n\n      const habits = order(\n        user.data.tasksOrder.habits,\n        tasks.data\n          .filter(habit));\n\n      const todos = order(\n        user.data.tasksOrder.todos,\n        tasks.data\n          .filter(todo)\n          .filter(incomplete));\n\n      output(dailies, habits, todos, user.data);\n    });\n  }\n})\n.catch(failure);\n"
				}
			],
			"path": "Lifestyle/habitica.1h.js",
			"filename": "habitica.1h.js",
			"dir": "Lifestyle",
			"docsPlugin": "Lifestyle/habitica.1h.js.html",
			"docsCategory": "Lifestyle.html",
			"pathSegments": [
				"Lifestyle"
			],
			"categoryPathSegments": [
				{
					"path": "Lifestyle",
					"text": "Lifestyle",
					"isLast": true
				}
			],
			"title": "Habitica",
			"version": "v1.2",
			"author": "Stefan du Fresne",
			"authors": [
				{
					"name": "Stefan du Fresne",
					"githubUsername": "SCdF",
					"imageURL": "https://avatars.githubusercontent.com/u/583851?v=4",
					"bio": "",
					"primary": true
				}
			],
			"desc": "Allows you to manage your Habitica tasks, habits and to-dos. See: habitica.com",
			"imageURL": "http://i.imgur.com/CUO445t.png",
			"dependencies": [
				"node6"
			],
			"aboutURL": "",
			"lastUpdated": "2021-03-08T15:21:55.425685Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "Web/toggl.1m.js",
					"filename": "toggl.1m.js",
					"content": "#!/usr/bin/env /usr/local/bin/node\n\n// \u003cbitbar.title\u003eToggl status\u003c/bitbar.title\u003e\n// \u003cbitbar.version\u003ev1.1\u003c/bitbar.version\u003e\n// \u003cbitbar.author\u003eStefan du Fresne\u003c/bitbar.author\u003e\n// \u003cbitbar.author.github\u003eSCdF\u003c/bitbar.author.github\u003e\n// \u003cbitbar.desc\u003eShows hours completed today, hours completed this week.\u003c/bitbar.desc\u003e\n// \u003cbitbar.image\u003ehttps://i.imgur.com/1dlNZLW.png\u003c/bitbar.image\u003e\n// \u003cbitbar.dependencies\u003enode\u003c/bitbar.dependencies\u003e\n\n/*jshint esversion: 6 */\n\nconst fs = require('fs');\n\n// TODO: Add month-long work leveling\n//   You're supposed to work N hours a week, but also N*M hours a month\n//   Take longer / shorter weeks into account all the way to the month\n\n/* jshint -W100 */\nconst AVATARS = {\n  '👶': ['👶', '👶🏻', '👶🏼', '👶🏽', '👶🏾', '👶🏿'],\n  '👦': ['👦', '👦🏻', '👦🏼', '👦🏽', '👦🏾', '👦🏿'],\n  '👧': ['👧', '👧🏻', '👧🏼', '👧🏽', '👧🏾', '👧🏿'],\n  '👨': ['👨', '👨🏻', '👨🏼', '👨🏽', '👨🏾', '👨🏿'],\n  '👩': ['👩', '👩🏻', '👩🏼', '👩🏽', '👩🏾', '👩🏿'],\n  '👱‍♀️': ['👱‍♀️', '👱🏻‍♀️', '👱🏼‍♀️', '👱🏽‍♀️', '👱🏾‍♀️', '👱🏿‍♀️'],\n  '👱': ['👱', '👱🏻', '👱🏼', '👱🏽', '👱🏾', '👱🏿'],\n  '👴': ['👴', '👴🏻', '👴🏼', '👴🏽', '👴🏾', '👴🏿'],\n  '👵': ['👵', '👵🏻', '👵🏼', '👵🏽', '👵🏾', '👵🏿'],\n  '👲': ['👲', '👲🏻', '👲🏼', '👲🏽', '👲🏾', '👲🏿'],\n  '👳‍♀️': ['👳‍♀️', '👳🏻‍♀️', '👳🏼‍♀️', '👳🏽‍♀️', '👳🏾‍♀️', '👳🏿‍♀️'],\n  '👳': ['👳', '👳🏻', '👳🏼', '👳🏽', '👳🏾', '👳🏿'],\n  '👮‍♀️': ['👮‍♀️', '👮🏻‍♀️', '👮🏼‍♀️', '👮🏽‍♀️', '👮🏾‍♀️', '👮🏿‍♀️'],\n  '👮': ['👮', '👮🏻', '👮🏼', '👮🏽', '👮🏾', '👮🏿'],\n  '👷‍♀️': ['👷‍♀️', '👷🏻‍♀️', '👷🏼‍♀️', '👷🏽‍♀️', '👷🏾‍♀️', '👷🏿‍♀️'],\n  '👷': ['👷', '👷🏻', '👷🏼', '👷🏽', '👷🏾', '👷🏿'],\n  '💂‍♀️': ['💂‍♀️', '💂🏻‍♀️', '💂🏼‍♀️', '💂🏽‍♀️', '💂🏾‍♀️', '💂🏿‍♀️'],\n  '💂': ['💂', '💂🏻', '💂🏼', '💂🏽', '💂🏾', '💂🏿'],\n  '🕵️‍♀️': ['🕵️‍♀️', '🕵🏻‍♀️', '🕵🏼‍♀️', '🕵🏽‍♀️', '🕵🏾‍♀️', '🕵🏿‍♀️'],\n  '🕵️': ['🕵️', '🕵🏻', '🕵🏼', '🕵🏽', '🕵🏾', '🕵🏿'],\n  '👩‍⚕️': ['👩‍⚕️', '👩🏻‍⚕️', '👩🏼‍⚕️', '👩🏽‍⚕️', '👩🏾‍⚕️', '👩🏿‍⚕️'],\n  '👨‍⚕️': ['👨‍⚕️', '👨🏻‍⚕️', '👨🏼‍⚕️', '👨🏽‍⚕️', '👨🏾‍⚕️', '👨🏿‍⚕️'],\n  '👩‍🌾': ['👩‍🌾', '👩🏻‍🌾', '👩🏼‍🌾', '👩🏽‍🌾', '👩🏾‍🌾', '👩🏿‍🌾'],\n  '👨‍🌾': ['👨‍🌾', '👨🏻‍🌾', '👨🏼‍🌾', '👨🏽‍🌾', '👨🏾‍🌾', '👨🏿‍🌾'],\n  '👩‍🍳': ['👩‍🍳', '👩🏻‍🍳', '👩🏼‍🍳', '👩🏽‍🍳', '👩🏾‍🍳', '👩🏿‍🍳'],\n  '👨‍🍳': ['👨‍🍳', '👨🏻‍🍳', '👨🏼‍🍳', '👨🏽‍🍳', '👨🏾‍🍳', '👨🏿‍🍳'],\n  '👩‍🎓': ['👩‍🎓', '👩🏻‍🎓', '👩🏼‍🎓', '👩🏽‍🎓', '👩🏾‍🎓', '👩🏿‍🎓'],\n  '👨‍🎓': ['👨‍🎓', '👨🏻‍🎓', '👨🏼‍🎓', '👨🏽‍🎓', '👨🏾‍🎓', '👨🏿‍🎓'],\n  '👩‍🎤': ['👩‍🎤', '👩🏻‍🎤', '👩🏼‍🎤', '👩🏽‍🎤', '👩🏾‍🎤', '👩🏿‍🎤'],\n  '👨‍🎤': ['👨‍🎤', '👨🏻‍🎤', '👨🏼‍🎤', '👨🏽‍🎤', '👨🏾‍🎤', '👨🏿‍🎤'],\n  '👩‍🏫': ['👩‍🏫', '👩🏻‍🏫', '👩🏼‍🏫', '👩🏽‍🏫', '👩🏾‍🏫', '👩🏿‍🏫'],\n  '👨‍🏫': ['👨‍🏫', '👨🏻‍🏫', '👨🏼‍🏫', '👨🏽‍🏫', '👨🏾‍🏫', '👨🏿‍🏫'],\n  '👩‍🏭': ['👩‍🏭', '👩🏻‍🏭', '👩🏼‍🏭', '👩🏽‍🏭', '👩🏾‍🏭', '👩🏿‍🏭'],\n  '👨‍🏭': ['👨‍🏭', '👨🏻‍🏭', '👨🏼‍🏭', '👨🏽‍🏭', '👨🏾‍🏭', '👨🏿‍🏭'],\n  '👩‍💻': ['👩‍💻', '👩🏻‍💻', '👩🏼‍💻', '👩🏽‍💻', '👩🏾‍💻', '👩🏿‍💻'],\n  '👨‍💻': ['👨‍💻', '👨🏻‍💻', '👨🏼‍💻', '👨🏽‍💻', '👨🏾‍💻', '👨🏿‍💻'],\n  '👩‍💼': ['👩‍💼', '👩🏻‍💼', '👩🏼‍💼', '👩🏽‍💼', '👩🏾‍💼', '👩🏿‍💼'],\n  '👨‍💼': ['👨‍💼', '👨🏻‍💼', '👨🏼‍💼', '👨🏽‍💼', '👨🏾‍💼', '👨🏿‍💼'],\n  '👩‍🔧': ['👩‍🔧', '👩🏻‍🔧', '👩🏼‍🔧', '👩🏽‍🔧', '👩🏾‍🔧', '👩🏿‍🔧'],\n  '👨‍🔧': ['👨‍🔧', '👨🏻‍🔧', '👨🏼‍🔧', '👨🏽‍🔧', '👨🏾‍🔧', '👨🏿‍🔧'],\n  '👩‍🔬': ['👩‍🔬', '👩🏻‍🔬', '👩🏼‍🔬', '👩🏽‍🔬', '👩🏾‍🔬', '👩🏿‍🔬'],\n  '👨‍🔬': ['👨‍🔬', '👨🏻‍🔬', '👨🏼‍🔬', '👨🏽‍🔬', '👨🏾‍🔬', '👨🏿‍🔬'],\n  '👩‍🎨': ['👩‍🎨', '👩🏻‍🎨', '👩🏼‍🎨', '👩🏽‍🎨', '👩🏾‍🎨', '👩🏿‍🎨'],\n  '👨‍🎨': ['👨‍🎨', '👨🏻‍🎨', '👨🏼‍🎨', '👨🏽‍🎨', '👨🏾‍🎨', '👨🏿‍🎨'],\n  '👩‍🚒': ['👩‍🚒', '👩🏻‍🚒', '👩🏼‍🚒', '👩🏽‍🚒', '👩🏾‍🚒', '👩🏿‍🚒'],\n  '👨‍🚒': ['👨‍🚒', '👨🏻‍🚒', '👨🏼‍🚒', '👨🏽‍🚒', '👨🏾‍🚒', '👨🏿‍🚒'],\n  '👩‍✈️': ['👩‍✈️', '👩🏻‍✈️', '👩🏼‍✈️', '👩🏽‍✈️', '👩🏾‍✈️', '👩🏿‍✈️'],\n  '👨‍✈️': ['👨‍✈️', '👨🏻‍✈️', '👨🏼‍✈️', '👨🏽‍✈️', '👨🏾‍✈️', '👨🏿‍✈️'],\n  '👩‍🚀': ['👩‍🚀', '👩🏻‍🚀', '👩🏼‍🚀', '👩🏽‍🚀', '👩🏾‍🚀', '👩🏿‍🚀'],\n  '👨‍🚀': ['👨‍🚀', '👨🏻‍🚀', '👨🏼‍🚀', '👨🏽‍🚀', '👨🏾‍🚀', '👨🏿‍🚀'],\n  '👩‍⚖️': ['👩‍⚖️', '👩🏻‍⚖️', '👩🏼‍⚖️', '👩🏽‍⚖️', '👩🏾‍⚖️', '👩🏿‍⚖️'],\n  '👨‍⚖️': ['👨‍⚖️', '👨🏻‍⚖️', '👨🏼‍⚖️', '👨🏽‍⚖️', '👨🏾‍⚖️', '👨🏿‍⚖️'],\n  '🤶': ['🤶', '🤶🏻', '🤶🏼', '🤶🏽', '🤶🏾', '🤶🏿'],\n  '🎅': ['🎅', '🎅🏻', '🎅🏼', '🎅🏽', '🎅🏾', '🎅🏿'],\n  '👸': ['👸', '👸🏻', '👸🏼', '👸🏽', '👸🏾', '👸🏿'],\n  '🤴': ['🤴', '🤴🏻', '🤴🏼', '🤴🏽', '🤴🏾', '🤴🏿'],\n  '👰': ['👰', '👰🏻', '👰🏼', '👰🏽', '👰🏾', '👰🏿'],\n  '🤵 ': ['🤵', '🤵🏻', '🤵🏼', '🤵🏽', '🤵🏾', '🤵🏿']\n};\n/* jshint +W100 */\nconst randomItem = array =\u003e array[Math.floor(Math.random() * array.length)];\nconst randomAvatar = () =\u003e randomItem([].concat(...Object.values(AVATARS)));\n\nconst CONFIG_FILE = `${process.env.HOME}/.toggl.json`;\n\nlet configDirty = false;\nconst config = (() =\u003e {\n  if (fs.existsSync(CONFIG_FILE)) {\n    try {\n      return JSON.parse(fs.readFileSync(CONFIG_FILE, 'utf8'));\n    } catch (_) {}\n  }\n\n  // Defaults\n  configDirty = true;\n  return {\n    avatar: randomAvatar(),\n    hoursInDay: 8,\n    daysInWeek: 5,\n    style: 'hours'\n  };\n})();\n\nconst relativeThreshold = 15 * 60; // TODO: configurable?\n\nconst endOutput = () =\u003e {\n  if (configDirty) {\n    fs.writeFileSync(CONFIG_FILE, JSON.stringify(config, null, 2));\n  }\n\n  console.log('---');\n  console.log('Refresh | refresh=true');\n  process.exit();\n};\n\nconst badApiToken = wrong =\u003e {\n  console.log(`🚨 ${wrong ? 'provided api token is wrong' : 'token needed'} 🚨`);\n  console.log('---');\n  console.log('🖱 Click here to find your token| href=https://toggl.com/app/profile');\n  console.log('It will be at the bottom of the page|size=12');\n  console.log(`Once you've found your token, copy it (CMD+C)|size=12`);\n  console.log(`🤞 I've copied it 🤞|bash=${process.argv[1]} param1=api_token refresh=true terminal=false `);\n  endOutput();\n};\n\nconst NOW = new Date();\n\nconst unix = date =\u003e Math.round(date.getTime() / 1000);\nconst outputUnix = (unixTime, verbose) =\u003e {\n  const negative = (() =\u003e {if (unixTime \u003c 0) {\n    // TODO: turn red if it's negative\n    unixTime *= -1;\n    return true;\n  }})();\n\n  const fmt = x =\u003e x.toLocaleString(undefined, {minimumIntegerDigits: 2});\n  const hours = Math.floor(unixTime / 60 / 60);\n  const minutes = Math.floor(unixTime / 60) - (hours * 60);\n\n  if (verbose) {\n    return `${negative ? '-' : ''}${hours} hours ${minutes} minutes`;\n  } else {\n    return `${negative ? '-' : ''}${hours}:${fmt(minutes)}`;\n  }\n};\n\n// TODO: alter this so you can pass the considered start day (ie Sunday or Monday)\n//       Might as well be the offset integer, 0 or 1, but in theory could be 0-6\nconst startOfWeek = () =\u003e {\n  const thisWeek = new Date(NOW.getFullYear(), NOW.getMonth(), NOW.getDate() - NOW.getDay());\n  return unix(thisWeek);\n};\n\nconst avatar = () =\u003e config.avatar === 'avatar' ?  randomAvatar() : config.avatar;\n\nconst outputHeader = (timeDay, timeWeek) =\u003e {\n  let daySection; // Output string\n  let dayAmount; // single amount, if possible\n  if (typeof timeDay === 'object') {\n    const max = Math.max(...timeDay);\n    const min = Math.min(...timeDay);\n    if ((max - min) \u003e relativeThreshold) {\n      daySection = `${outputUnix(min)} — ${outputUnix(max)}`;\n    } else {\n      dayAmount = min + Math.round((max - min) / 2);\n      daySection = `${outputUnix(dayAmount)}`;\n    }\n  } else {\n    dayAmount = timeDay;\n    daySection = `${outputUnix(dayAmount)}`;\n  }\n\n  if (dayAmount \u0026\u0026 Math.abs(timeWeek - dayAmount) \u003e relativeThreshold) {\n    console.log(`${avatar()} ${daySection} (${outputUnix(timeWeek)})`);\n  } else {\n    console.log(`${avatar()} ${daySection}`);\n  }\n};\n\nconst displayTimes = me =\u003e {\n  // Calculate times\n  const unixToday = unix(new Date(NOW.getFullYear(), NOW.getMonth(), NOW.getDate()));\n  const completeDay = config.hoursInDay * 60 * 60;\n  const completeWeek = completeDay * config.daysInWeek;\n\n  let full = 0,\n      today = 0;\n  const days = [];\n\n  let currentlyWorking,\n      currentWid,\n      currentPid;\n\n  const timeByWidByPid = {};\n\n  (me.data.time_entries || []).forEach(({start, duration:entryDuration, wid, pid}) =\u003e {\n    // TODO: deal with partial entries that cross over midnight\n    //       (both daily and weekly)\n    // TODO: respect configured start of week in me.beginning_of_week\n    //\n    start = new Date(start);\n\n    let duration;\n    if (entryDuration \u003e 0) {\n      duration = entryDuration;\n    } else {\n      duration = unix(NOW) - unix(start);\n      currentlyWorking = true;\n      currentWid = wid;\n      currentPid = pid;\n    }\n\n    if (!timeByWidByPid[wid]) {\n      timeByWidByPid[wid] = {};\n    }\n    if (!timeByWidByPid[wid][pid]) {\n      timeByWidByPid[wid][pid] = 0;\n    }\n    timeByWidByPid[wid][pid] += duration;\n\n    if (unix(start) \u003e startOfWeek()) {\n      full += duration;\n      let day = start.getDay();\n      const end = new Date(start.getTime() + duration * 1000);\n      if (day === end.getDay()) {\n        days[day] = (days[day] || 0) + duration;\n      } else {\n        // TODO: We want to split a duration over midnights and distribute them to the correct days\n        days[day] = (days[day] || 0) + duration;\n      }\n    }\n\n    if (unix(start) \u003e unixToday) {\n      today += duration;\n    }\n  });\n\n  // Output times\n  if (!currentlyWorking) {\n    process.exit(0);\n  }\n\n  switch(config.style) {\n    case 'hours': {\n      outputHeader(today, full);\n      break;\n    }\n    case 'left': {\n      outputHeader(completeDay - today, completeWeek - full);\n      break;\n    }\n    case 'percentage': {\n      const completeDay = config.hoursInDay * 60 * 60;\n      const completeWeek = completeDay * config.daysInWeek;\n      const dayPercent = Math.round((today / completeDay) * 100);\n      const weekPercent = Math.round((full / completeWeek) * 100);\n      console.log(`${avatar()} ${dayPercent}% (${weekPercent}%)`);\n      break;\n    }\n    case 'relative': {\n      const startOfWeekday = 1; // TODO: support using configured day from /me\n      const todayWeekday = NOW.getDay();\n      const daysLeft = config.daysInWeek - (todayWeekday - startOfWeekday);\n\n      const timeInWeek = config.daysInWeek * config.hoursInDay * 60 * 60;\n\n      const allButTodaysTime = full - today;\n      const allButTodaysTimeLeft = timeInWeek - allButTodaysTime;\n      const timePerDayLeft = Math.round(allButTodaysTimeLeft / daysLeft);\n      const amortisedTimeLeft = timePerDayLeft - today;\n\n      const onTrackTime = (daysLeft - 1) * config.hoursInDay * 60 * 60;\n      const timeOffTrack = allButTodaysTimeLeft - onTrackTime - today;\n      const fullDay = Math.min(completeDay - today, timeInWeek - full);\n\n      outputHeader([amortisedTimeLeft, timeOffTrack, fullDay], timeInWeek - full);\n      break;\n    }\n  }\n\n  // TODO: add end day time, either as its own option, or as a custom estimate\n  //       in the menu.\n  //       I think having it as an option might be a bit more chill, you don't\n  //       see it counting down, just an idea of when knocking off time is\n\n  // Have to filter first before showing length because Monday is idx 1 / length 2\n  if (days.filter(d =\u003e !!d).length \u003e 1) {\n    console.log('---');\n    const dayNames = ['S', 'M', 'T', 'W', 'T', 'F', 'S'];\n    days.forEach((val, day) =\u003e {\n      console.log(`${dayNames[day]}:\\t${outputUnix(val, true)}`);\n    });\n    console.log(`Σ:\\t${outputUnix(full, true)}`);\n    console.log(`T-:\\t${outputUnix(completeWeek - full, true)}`);\n  }\n\n  // TODO: figure out how we want to pull in wids and pid labels, and if it's worth the extra api calls\n  // console.log('---');\n  // console.log(`${currentWid} :: ${currentPid}`);\n  // console.log(outputUnix(timeByWidByPid[currentWid][currentPid], true));\n\n  // TODO: display project summary for the week\n  // TODO: allow muting of a project as it relates to time\n  //       (if you're on a muted project just show emoji but not time)\n  //       (it would still show in this project summary)\n};\n\nconst avatarChoice = () =\u003e {\n  console.log(`Change ${config.avatar}`);\n  console.log(`--((surprise me))|bash=${process.argv[1]} param1=avatar param2=avatar refresh=true terminal=false size=10`);\n  Object.keys(AVATARS).forEach(k =\u003e {\n    console.log(`--${k}|size=32`);\n    AVATARS[k].forEach(v =\u003e {\n      console.log(`----${v}|bash=${process.argv[1]} param1=avatar param2=${v} refresh=true terminal=false size=32`);\n    });\n  });\n};\n\nconst styleChoice = () =\u003e {\n  const current = style =\u003e style === config.style ? '✓ ' : '';\n  const link = style =\u003e `|bash=${process.argv[1]} param1=style param2=${style} refresh=true terminal=false`;\n  console.log('Change reporting style');\n  console.log(`--${current('hours')}Hours complete${link('hours')}`);\n  console.log(`--${current('left')}Hours left${link('left')}`);\n  console.log(`--${current('percentage')}Percentage complete${link('percentage')}`);\n  console.log(`--${current('relative')}Relative weekly goals${link('relative')}`);\n};\n\nconst input = () =\u003e {\n  switch (process.argv[2]) {\n    case 'avatar': {\n      config.avatar = process.argv[3];\n      configDirty = true;\n      break;\n    }\n    case 'api_token': {\n      config.apiToken = require('child_process').execSync('pbpaste').toString();\n      configDirty = true;\n      break;\n    }\n    case 'style': {\n      config.style = process.argv[3];\n      configDirty = true;\n      break;\n    }\n  }\n};\n\nconst output = () =\u003e {\n  require('https').get({\n    hostname: 'toggl.com',\n    // NB: since is \"edited since\", and so isn't really reliable\n    path: `/api/v8/me?with_related_data=true\u0026since=${startOfWeek()}`,\n    auth: `${config.apiToken}:api_token`\n  }, res =\u003e {\n    if (res.statusCode === 403) {\n      badApiToken(true);\n      endOutput();\n    }\n\n    let body = '';\n    res.on('data', data =\u003e body += data);\n    res.on('end', () =\u003e {\n      try {\n        displayTimes(JSON.parse(body));\n        console.log('---');\n        avatarChoice();\n        styleChoice();\n        endOutput();\n      } catch (error) {\n        console.log(':-(');\n        console.log('---');\n        console.log(error);\n        console.log('---');\n        console.log(body);\n        endOutput();\n      }\n    });\n    res.on('error', err =\u003e {\n      console.log(':-(');\n      console.log('---');\n      console.log(err);\n      endOutput();\n    });\n  });\n};\n\ninput();\nif (!config.apiToken) {\n  badApiToken();\n}\noutput();\n"
				}
			],
			"path": "Web/toggl.1m.js",
			"filename": "toggl.1m.js",
			"dir": "Web",
			"docsPlugin": "Web/toggl.1m.js.html",
			"docsCategory": "Web.html",
			"pathSegments": [
				"Web"
			],
			"categoryPathSegments": [
				{
					"path": "Web",
					"text": "Web",
					"isLast": true
				}
			],
			"title": "Toggl status",
			"version": "v1.1",
			"author": "Stefan du Fresne",
			"authors": [
				{
					"name": "Stefan du Fresne",
					"githubUsername": "SCdF",
					"imageURL": "https://avatars.githubusercontent.com/u/583851?v=4",
					"bio": "",
					"primary": true
				}
			],
			"desc": "Shows hours completed today, hours completed this week.",
			"imageURL": "https://i.imgur.com/1dlNZLW.png",
			"dependencies": [
				"node"
			],
			"aboutURL": "",
			"lastUpdated": "2021-03-08T15:22:10.40311Z",
			"vars": null
		}
	]
}