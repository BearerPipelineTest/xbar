{
	"person": {
		"name": "Aaron Crawford",
		"githubUsername": "aaroncrawford",
		"imageURL": "https://avatars.githubusercontent.com/u/3203500?v=4",
		"bio": "",
		"primary": true
	},
	"plugins": [
		{
			"files": [
				{
					"path": "Dev/gulpLauncher.1h.js",
					"filename": "gulpLauncher.1h.js",
					"content": "#!/usr/bin/env /usr/local/bin/node\n\n\n/* jshint esversion: 6 */\n/* jshint asi: true */\n\n/*\n * \u003cbitbar.title\u003eGulp Launcher\u003c/bitbar.title\u003e\n * \u003cbitbar.version\u003ev1.0\u003c/bitbar.version\u003e\n * \u003cbitbar.author\u003eAaron Crawford\u003c/bitbar.author\u003e\n * \u003cbitbar.author.github\u003eaaroncrawford\u003c/bitbar.author.github\u003e\n * \u003cbitbar.image\u003ehttps://i.imgur.com/RAxo5tG.png\u003c/bitbar.image\u003e\n * \u003cbitbar.desc\u003eQuickly launch gulp processes on projects.  Useful for agency developers with a lot of projects.  Editing of file required to list your projects.\u003c/bitbar.desc\u003e\n * \u003cbitbar.dependencies\u003enode\u003c/bitbar.dependencies\u003e\n */\n\n// EDIT ME\nvar file = '/path/to/_projects.json'\n// Example _projects.json file : (you can just create an array in this file, but our file was huge so we decided to store in a separate file)\n/*\n\n[\n  {\n    \"name\": \"Project 1\",\n    \"path\": \"/path/to/readable/file/project1/src\"\n  },\n  {\n    \"name\": \"Project 2\",\n    \"path\": \"/path/to/readable/file/project2/src\"\n  }\n]\n\n*/\n\n\nvar fs = require('fs')\n\nfs.readFile(file, 'utf8', (e, data) =\u003e {\n\tconsole.log('ü•§')\n\tconsole.log('---')\n\n\tvar projects = JSON.parse(data)\n\n\tprojects.map((d) =\u003e {\n\t\tvar path = d.path.replace(\" \", \"\\\\\\\\ \")\n\t\t// Currently just goes to the directory and runs 'gulp'.  If you want to modify this process, edit this line\n\t\tconsole.log(`${d.name}|bash=\"cd ${path} \u0026\u0026 gulp\" terminal=true`)\n\t})\t\n})\n\n\n"
				}
			],
			"path": "Dev/gulpLauncher.1h.js",
			"filename": "gulpLauncher.1h.js",
			"dir": "Dev",
			"docsPlugin": "Dev/gulpLauncher.1h.js.html",
			"docsCategory": "Dev.html",
			"pathSegments": [
				"Dev"
			],
			"categoryPathSegments": [
				{
					"path": "Dev",
					"text": "Dev",
					"isLast": true
				}
			],
			"title": "Gulp Launcher",
			"version": "v1.0",
			"author": "Aaron Crawford",
			"authors": [
				{
					"name": "Aaron Crawford",
					"githubUsername": "aaroncrawford",
					"imageURL": "https://avatars.githubusercontent.com/u/3203500?v=4",
					"bio": "",
					"primary": true
				}
			],
			"desc": "Quickly launch gulp processes on projects.  Useful for agency developers with a lot of projects.  Editing of file required to list your projects.",
			"imageURL": "https://i.imgur.com/RAxo5tG.png",
			"dependencies": [
				"node"
			],
			"aboutURL": "",
			"lastUpdated": "2021-03-08T15:21:51.560166Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "Dev/cloudflare.1m.js",
					"filename": "cloudflare.1m.js",
					"content": "#!/usr/bin/env /usr/local/bin/node\n\n\n/* jshint esversion: 6 */\n\n/*\n * \u003cbitbar.title\u003eCloudflare Development Mode\u003c/bitbar.title\u003e\n * \u003cbitbar.version\u003ev1.0\u003c/bitbar.version\u003e\n * \u003cbitbar.author\u003eAaron Crawford\u003c/bitbar.author\u003e\n * \u003cbitbar.author.github\u003eaaroncrawford\u003c/bitbar.author.github\u003e\n * \u003cbitbar.image\u003ehttps://i.imgur.com/nKXgmxg.png\u003c/bitbar.image\u003e\n * \u003cbitbar.desc\u003eEnable or Disable Development Mode from BitBar.  Plugin will need to be edited to include your API key and email to work.\u003c/bitbar.desc\u003e\n * \u003cbitbar.dependencies\u003enode\u003c/bitbar.dependencies\u003e\n */\n\n// CHANGE THESE AREAS\nlet email = 'CHANGE@ME.com'; // Cloudflare email\nlet key = 'CHANGE ME'; // Global API Key, not Origin CA Key - Located under \"My Profile\"\n//\n\n\nvar https = require('https');\nvar data = {\n    zones: []\n};\n\nvar headers = {\n    'X-Auth-Email': email,\n    'X-Auth-Key': key,\n    'Content-Type': 'application/json'\n};\n\nfunction getZones() {\n    var options = {\n        host: 'api.cloudflare.com',\n        path: '/client/v4/zones?per_page=50',\n        method: 'GET',\n        headers: headers\n    };\n    return new Promise((resolve, reject) =\u003e {\n        var res = https.request(options, (res) =\u003e {\n            var responseString = '';\n\n            res.setEncoding('utf-8');\n\n            res.on('data', function(data) {\n                responseString += data;\n            });\n\n            res.on('end', function() {\n                var parse = JSON.parse(responseString);\n                parse.result.map((val, i) =\u003e {\n                    if(val.development_mode \u003e 0) {\n                        dev = true;\n                    }\n                    else {\n                        dev = false;\n                    }\n                    data.zones.push({name:val.name, id:val.id, dev:dev});\n                });\n                resolve();\n            });\n\n        });\n        res.end();\n    });\n}\n\nfunction flipSwitch(status) {\n    var flag = (status == true) ? 'on' : 'off';\n    var options = {\n        host: 'api.cloudflare.com',\n        path: `/client/v4/zones/${process.argv[3]}/settings/development_mode`,\n        method: 'PATCH',\n        headers: headers\n    };\n\n    return new Promise((resolve, reject) =\u003e {\n        var postData = { value: flag };\n\n        var res = https.request(options, (res) =\u003e {\n            var body = [];\n            var responseString = '';\n\n            res.setEncoding('utf-8');\n            res.on('data', function(data) {\n                responseString += data;\n            });\n            res.on('end', function() {\n                var parse = JSON.parse(responseString);\n                resolve();\n            });\n            res.on('error', function(err) {\n                reject(err);\n            });\n        });\n        res.write(JSON.stringify(postData));\n        res.end();\n    });\n}\n\nconsole.log('‚öôÔ∏è');\nconsole.log('---');\n\nif(process.argv[2] == 'triggerUpdate') {\n    var status = (process.argv[4] == 'Enable') ? true : false;\n    flipSwitch(status)\n    .then(getZones())\n    .then(() =\u003e {\n        data.zones.map((val, i) =\u003e {\n            var status = (val.dev) ? 'Disable' : 'Enable';\n            var color = (val.dev) ? 'red' : 'black';\n            console.log(`${val.name}| color=${color}`);\n            console.log(`--${status}| bash=${process.argv[0]} param1=${process.argv[1]} param2=triggerUpdate param3=${val.id} param4=${status} refresh=true terminal=false`);\n        });\n    });\n\n}\nelse {\n    getZones().then(() =\u003e {\n        data.zones.map((val, i) =\u003e {\n            var status = (val.dev) ? 'Disable' : 'Enable';\n            var color = (val.dev) ? 'red' : 'black';\n            console.log(`${val.name}| color=${color}`);\n            console.log(`--${status}| bash=${process.argv[0]} param1=${process.argv[1]} param2=triggerUpdate param3=${val.id} param4=${status} refresh=true terminal=false`);\n        });\n    });\n}"
				}
			],
			"path": "Dev/cloudflare.1m.js",
			"filename": "cloudflare.1m.js",
			"dir": "Dev",
			"docsPlugin": "Dev/cloudflare.1m.js.html",
			"docsCategory": "Dev.html",
			"pathSegments": [
				"Dev"
			],
			"categoryPathSegments": [
				{
					"path": "Dev",
					"text": "Dev",
					"isLast": true
				}
			],
			"title": "Cloudflare Development Mode",
			"version": "v1.0",
			"author": "Aaron Crawford",
			"authors": [
				{
					"name": "Aaron Crawford",
					"githubUsername": "aaroncrawford",
					"imageURL": "https://avatars.githubusercontent.com/u/3203500?v=4",
					"bio": "",
					"primary": true
				}
			],
			"desc": "Enable or Disable Development Mode from BitBar.  Plugin will need to be edited to include your API key and email to work.",
			"imageURL": "https://i.imgur.com/nKXgmxg.png",
			"dependencies": [
				"node"
			],
			"aboutURL": "",
			"lastUpdated": "2021-03-08T15:21:51.116063Z",
			"vars": null
		}
	]
}