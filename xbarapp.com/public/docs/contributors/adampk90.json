{
	"person": {
		"name": "Adam Kenyon",
		"githubUsername": "adampk90",
		"imageURL": "https://avatars.githubusercontent.com/u/2799877?v=4",
		"bio": "",
		"primary": true
	},
	"plugins": [
		{
			"files": [
				{
					"path": "Music/nowplaying.5s.sh",
					"filename": "nowplaying.5s.sh",
					"content": "#!/bin/bash\n\n# \u003cbitbar.title\u003eNow playing\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev1.1\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eAdam Kenyon\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003eadampk90\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eShows and controls the music that is now playing. Currently supports Spotify, iTunes, and Vox.\u003c/bitbar.desc\u003e\n# \u003cbitbar.image\u003ehttps://pbs.twimg.com/media/CbKmTS7VAAA84VS.png:small\u003c/bitbar.image\u003e\n# \u003cbitbar.dependencies\u003e\u003c/bitbar.dependencies\u003e\n# \u003cbitbar.abouturl\u003e\u003c/bitbar.abouturl\u003e\n\n# first, determine if there's an app that's playing or paused\napps=(Music Spotify Vox)\nplaying=\"\"\npaused=\"\"\n\n# Determine if we are running a pre-Catalina OS X version and adjust the apps accordingly.\nosx_ver_before_catalina=$(sw_vers -productVersion | grep -E \"10\\.\\d[0-4]+\\..*\")\nif [ -n \"$osx_ver_before_catalina\" ]; then\n  apps=(iTunes Spotify Vox)\nfi\n\nfor i in \"${apps[@]}\"; do\n\t# is the app running?\n\tapp_state=$(osascript -e \"application \\\"$i\\\" is running\")\n\n\t# shellcheck disable=SC2181\n\tif [ \"$?\" != \"0\" ]; then\n\t\t# just exit if there was an error determining the app's state\n\t\t# (the app might be in the middle of quitting)\n\t\texit\n\tfi\n\n\tif [ \"$app_state\" = \"true\" ] \u0026\u0026 [ \"$track\" = \"\" ]; then\n\t\t# yes, it's running\n\t\t# is it playing music currently?\n\t\tapp_playing=$(osascript -e \"tell application \\\"$i\\\" to player state as string\")\n\t\tif [ \"$app_playing\" = \"paused\" ] || [ \"$app_playing\" = \"0\" ]; then\n\t\t\t# nope, it's paused\n\t\t\tpaused=\"$i\"\n\t\telif [ \"$app_playing\" = \"playing\" ] || [ \"$app_playing\" = \"1\" ]; then\n\t\t\t# yes, it's playing\n\t\t\tplaying=\"$i\"\n\t\tfi\n\tfi\ndone\n\n\n# open a specified app\nif [ \"$1\" = \"open\" ]; then\n\tosascript -e \"tell application \\\"$2\\\" to activate\"\n\texit\nfi\n# play/pause\nif [ \"$1\" = \"play\" ] || [ \"$1\" = \"pause\" ]; then\n\tosascript -e \"tell application \\\"$2\\\" to $1\"\n\texit\nfi\n# next/previous\nif [ \"$1\" = \"next\" ] || [ \"$1\" = \"previous\" ]; then\n\tosascript -e \"tell application \\\"$2\\\" to $1 track\"\n\t# tell spotify to hit \"Previous\" twice so it actually plays the previous track\n\t# instead of just starting from the beginning of the current one\n\tif [ \"$playing\" = \"Spotify\" ] \u0026\u0026 [ \"$1\" = \"previous\" ]; then\n\t\tosascript -e \"tell application \\\"$2\\\" to $1 track\"\n\tfi\n\tosascript -e \"tell application \\\"$2\\\" to play\"\n\texit\nfi\n\n\n# start outputting information to bitbar\nif [ \"$playing\" = \"\" ] \u0026\u0026 [ \"$paused\" = \"\" ]; then\n\t# nothing is even paused\n\techo \"üôâ No music playing | color=gray\"\nelse\n\t# something is playing or is paused\n\ttrack=\"\"\n\tartist=\"\"\n\n\tif [ \"$playing\" = \"\" ]; then\n\t\techo \"$paused is paused | color=#888888\"\n\t\techo \"---\"\n\t\tapp=\"$paused\"\n\telse\n\t\tapp=\"$playing\"\n\tfi\n\n\ttrack_query=\"name of current track\"\n\tartist_query=\"artist of current track\"\n\t# Vox uses a different syntax for track and artist names\n\tif [ \"$app\" = \"Vox\" ]; then\n\t\ttrack_query=\"track\"\n\t\tartist_query=\"artist\"\n\tfi\n\n\t# output the track and artist\n\ttrack=$(osascript -e \"tell application \\\"$app\\\" to $track_query\")\n\tartist=$(osascript -e \"tell application \\\"$app\\\" to $artist_query\")\n\n\techo \"$track | length=40\" | awk -F '\\ -' '{print $1}'\n\techo \"---\"\n\techo \"$artist\"\n\n\tif [ \"$playing\" != \"\" ]; then\n\t\techo \"Now playing on $app | color=gray bash='$0' param1=open param2=$app terminal=false\"\n\t\techo \"---\"\n\t\techo \"‚è∏ Pause | bash='$0' param1=pause param2=$app refresh=true terminal=false\"\n\telse\n\t\techo \"‚ñ∂Ô∏è Play | bash='$0' param1=play param2=$app refresh=true terminal=false\"\n\tfi\n\n\techo \"‚è≠ Next | bash='$0' param1=next param2=$app refresh=true terminal=false\"\n\techo \"‚èÆ Previous | bash='$0' param1=previous param2=$app refresh=true terminal=false\"\nfi\n\n# add an Open option for each service\necho \"---\"\nfor i in \"${apps[@]}\"; do\n\techo \"Open $i | bash='$0' param1=open param2=$i terminal=false\"\ndone\n"
				}
			],
			"path": "Music/nowplaying.5s.sh",
			"filename": "nowplaying.5s.sh",
			"dir": "Music",
			"docsPlugin": "Music/nowplaying.5s.sh.html",
			"docsCategory": "Music.html",
			"pathSegments": [
				"Music"
			],
			"categoryPathSegments": [
				{
					"path": "Music",
					"text": "Music",
					"isLast": true
				}
			],
			"title": "Now playing",
			"version": "v1.1",
			"author": "Adam Kenyon",
			"authors": [
				{
					"name": "Adam Kenyon",
					"githubUsername": "adampk90",
					"imageURL": "https://avatars.githubusercontent.com/u/2799877?v=4",
					"bio": "",
					"primary": true
				}
			],
			"desc": "Shows and controls the music that is now playing. Currently supports Spotify, iTunes, and Vox.",
			"imageURL": "https://pbs.twimg.com/media/CbKmTS7VAAA84VS.png:small",
			"dependencies": [],
			"aboutURL": "",
			"lastUpdated": "2021-03-08T15:21:57.494058Z",
			"vars": null
		}
	]
}