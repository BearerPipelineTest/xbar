{
	"person": {
		"name": "Alexandre Espinosa Menor",
		"githubUsername": "alexandregz",
		"imageURL": "https://avatars.githubusercontent.com/u/1374718?v=4",
		"bio": "",
		"primary": true
	},
	"plugins": [
		{
			"files": [
				{
					"path": "Dev/Vagrant/vagrant.30s.pl",
					"filename": "vagrant.30s.pl",
					"content": "#!/usr/bin/env perl\n# \u003cbitbar.title\u003eVagrant Global Status\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003e1.1\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eAlexandre Espinosa Menor\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003ealexandregz\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eShow vagrant images running, from vagrant global-status command\u003c/bitbar.desc\u003e\n# \u003cbitbar.image\u003ehttp://i.imgur.com/4YAFZC6.png\u003c/bitbar.image\u003e\n#\n# \"running\" line run command \"vagrant suspend\"\n# \"saved, poweroff, aborted\" line run command \"vagrant up\"\n#\n\nuse strict;\n\n$ENV{'PATH'} = $ENV{'PATH'}.':/usr/local/bin'; \n\nif ($#ARGV \u003e= 1) {\n        exit exec_sub_command(@ARGV);\n}\n\n# action =\u003e [status1 from machine, status2, ...]\nmy $actions_from_status = {\n        up =\u003e [\"saved\", \"poweroff\", \"aborted\"],\n        suspend =\u003e [\"running\"],\n        resume =\u003e [\"suspended\"]\n};\n\nmy $status = `vagrant global-status`;\n\nif($status =~ /^\\-{10,}\\n(.*)\\n\\s+\\n/sm) {\n        my @images = split(/\\n/, $1);\n\n        print \"ðŸ‡»\"; print \"(\".scalar(@images).\")\" if(@images);\n        print \"\\n\";\n        print \"---\\n\";\n\n        foreach my $i(@images) {\n                my @data_image = split(/\\s+/, $i);\n                my $i_id = $data_image[0];\n                my $i_image = $data_image[1];\n                my $i_provider = $data_image[2];\n                my $i_status = $data_image[3];\n                my $i_path = $data_image[4];\n\n                my $color = \"black\";\n                $color = \"green\" if($i_status eq 'running');\n                $color = \"red\" if($i_status eq 'saved');\n\n                print \"$i_id - $i_image ($i_provider) | color=black\\n\";\n                print \"   $i_path | bash=$0 param1=path_copy param2=$i_path color=gray trim=false terminal=false\\n\";\n\n                print \"$i_status | color=$color \";\n                foreach my $action(keys(%{$actions_from_status})) {\n                        print \"bash=vagrant param1=$action param2=$i_id terminal=true\" if(grep $_ eq $i_status, @{$actions_from_status-\u003e{$action}});\n                }\n                print \"\\n\";\n                print \"---\\n\";\n        }\n}\nelse{\n        #print \"Without Vagrant images running?\";\n        print \"ðŸ‡»(0)\";\n}\n\nsub exec_sub_command {\n        my ($sub_command, @args) = @_;\n        my $sub_command_methods = {\n                'path_copy' =\u003e \\\u0026sub_command_path_copy,\n        };\n        if (!defined $sub_command_methods-\u003e{$sub_command}) {\n                die \"Undefined sub command: $sub_command\";\n        }\n        return $sub_command_methods-\u003e{$sub_command}(@args);\n}\n\nsub sub_command_path_copy {\n        my $path = shift;\n        open my $fh, '|/usr/bin/pbcopy' or die $!;\n        print $fh $path;\n        close $fh;\n        return;\n}\n"
				}
			],
			"path": "Dev/Vagrant/vagrant.30s.pl",
			"filename": "vagrant.30s.pl",
			"dir": "Dev/Vagrant",
			"docsPlugin": "Dev/Vagrant/vagrant.30s.pl.html",
			"docsCategory": "Dev/Vagrant.html",
			"pathSegments": [
				"Dev",
				"Vagrant"
			],
			"categoryPathSegments": [
				{
					"path": "Dev",
					"text": "Dev",
					"isLast": false
				},
				{
					"path": "Dev/Vagrant",
					"text": "Vagrant",
					"isLast": true
				}
			],
			"title": "Vagrant Global Status",
			"version": "1.1",
			"author": "Alexandre Espinosa Menor",
			"authors": [
				{
					"name": "Alexandre Espinosa Menor",
					"githubUsername": "alexandregz",
					"imageURL": "https://avatars.githubusercontent.com/u/1374718?v=4",
					"bio": "",
					"primary": true
				}
			],
			"desc": "Show vagrant images running, from vagrant global-status command",
			"imageURL": "http://i.imgur.com/4YAFZC6.png",
			"dependencies": null,
			"aboutURL": "",
			"lastUpdated": "2021-03-08T15:21:50.663267Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "Network/bandwidth-test.2h.sh",
					"filename": "bandwidth-test.2h.sh",
					"content": "#!/bin/sh\n#\n# Bandwith test, using speedtest-cli (https://github.com/sivel/speedtest-cli) \n#\n# \u003cbitbar.title\u003eBandwith test\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev1.0\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eAlexandre Espinosa Menor\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003ealexandregz\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eBandwith tester, from https://speedtest.net using speedtest-cli\u003c/bitbar.desc\u003e\n# \u003cbitbar.dependencies\u003espeedtest-cli\u003c/bitbar.dependencies\u003e\n# \u003cbitbar.image\u003ehttp://i.imgur.com/mrPw9MV.png\u003c/bitbar.image\u003e\n#\n# Dependencies: \n#   speedtest-cli (https://github.com/sivel/speedtest-cli)\n\n# modify this path according your prefs\nif command -v \"/usr/local/bin/speedtest-cli\" \u003e/dev/null 2\u003e\u00261; then\n\tOUTPUT=$(/usr/local/bin/speedtest-cli --simple)\nelse\n\tOUTPUT=$(~/bin/speedtest-cli --simple)\nfi\n\necho \"$OUTPUT\"\n"
				}
			],
			"path": "Network/bandwidth-test.2h.sh",
			"filename": "bandwidth-test.2h.sh",
			"dir": "Network",
			"docsPlugin": "Network/bandwidth-test.2h.sh.html",
			"docsCategory": "Network.html",
			"pathSegments": [
				"Network"
			],
			"categoryPathSegments": [
				{
					"path": "Network",
					"text": "Network",
					"isLast": true
				}
			],
			"title": "Bandwith test",
			"version": "v1.0",
			"author": "Alexandre Espinosa Menor",
			"authors": [
				{
					"name": "Alexandre Espinosa Menor",
					"githubUsername": "alexandregz",
					"imageURL": "https://avatars.githubusercontent.com/u/1374718?v=4",
					"bio": "",
					"primary": true
				}
			],
			"desc": "Bandwith tester, from https://speedtest.net using speedtest-cli",
			"imageURL": "http://i.imgur.com/mrPw9MV.png",
			"dependencies": [
				"speedtest-cli"
			],
			"aboutURL": "",
			"lastUpdated": "2021-03-08T15:21:58.271719Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "System/Battery/keyboard-system_profiler.1m.rb",
					"filename": "keyboard-system_profiler.1m.rb",
					"content": "#!/usr/bin/env ruby\n# \u003cbitbar.title\u003eBattery Apple Bluetooth keyboard\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003e1.0\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eAlexandre Espinosa Menor\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003ealexandregz\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eShow battery percentage for Bluetooth Keyboard\u003c/bitbar.desc\u003e\n# \u003cbitbar.image\u003ehttp://i.imgur.com/1FlcPYx.png\u003c/bitbar.image\u003e\n#\n# command from https://github.com/matryer/bitbar-plugins/issues/84 by @keithamus\n# works fine with Apple Keyboard\n#\n\nrequire 'yaml'\n\noutput = YAML.load(`system_profiler SPBluetoothDataType 2\u003e /dev/null`);\n\noutput['Bluetooth']['Devices (Paired, Configured, etc.)'].each do |device|\n        puts \"Keyboard: \"+device[1]['Battery Level'].to_s if device[1]['Minor Type'].eql?('Keyboard') \u0026\u0026 device[1].has_key?('Battery Level')\nend\n"
				}
			],
			"path": "System/Battery/keyboard-system_profiler.1m.rb",
			"filename": "keyboard-system_profiler.1m.rb",
			"dir": "System/Battery",
			"docsPlugin": "System/Battery/keyboard-system_profiler.1m.rb.html",
			"docsCategory": "System/Battery.html",
			"pathSegments": [
				"System",
				"Battery"
			],
			"categoryPathSegments": [
				{
					"path": "System",
					"text": "System",
					"isLast": false
				},
				{
					"path": "System/Battery",
					"text": "Battery",
					"isLast": true
				}
			],
			"title": "Battery Apple Bluetooth keyboard",
			"version": "1.0",
			"author": "Alexandre Espinosa Menor",
			"authors": [
				{
					"name": "Alexandre Espinosa Menor",
					"githubUsername": "alexandregz",
					"imageURL": "https://avatars.githubusercontent.com/u/1374718?v=4",
					"bio": "",
					"primary": true
				}
			],
			"desc": "Show battery percentage for Bluetooth Keyboard",
			"imageURL": "http://i.imgur.com/1FlcPYx.png",
			"dependencies": null,
			"aboutURL": "",
			"lastUpdated": "2021-03-08T15:22:01.741858Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "System/Battery/mouse.1m.sh",
					"filename": "mouse.1m.sh",
					"content": "#!/bin/sh\n# \u003cbitbar.title\u003eMouse battery\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003e1.0\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eAlexandre Espinosa Menor\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003ealexandregz\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eShow battery percentage for Bluetooth Mouse\u003c/bitbar.desc\u003e\n# \u003cbitbar.image\u003ehttp://i.imgur.com/IqjZMJg.png\u003c/bitbar.image\u003e\n\n# works fine with Magic Mouse\n\nPERCENTAGE=$(ioreg -n BNBMouseDevice | fgrep BatteryPercent | fgrep -v \\{ | sed 's/[^[:digit:]]//g')\n\nif [ \"$PERCENTAGE\" ]; then\n        echo \"Mouse: $PERCENTAGE%\"\n#else\n#        echo \"without bluetooth mouse?\"\nfi\n\n"
				}
			],
			"path": "System/Battery/mouse.1m.sh",
			"filename": "mouse.1m.sh",
			"dir": "System/Battery",
			"docsPlugin": "System/Battery/mouse.1m.sh.html",
			"docsCategory": "System/Battery.html",
			"pathSegments": [
				"System",
				"Battery"
			],
			"categoryPathSegments": [
				{
					"path": "System",
					"text": "System",
					"isLast": false
				},
				{
					"path": "System/Battery",
					"text": "Battery",
					"isLast": true
				}
			],
			"title": "Mouse battery",
			"version": "1.0",
			"author": "Alexandre Espinosa Menor",
			"authors": [
				{
					"name": "Alexandre Espinosa Menor",
					"githubUsername": "alexandregz",
					"imageURL": "https://avatars.githubusercontent.com/u/1374718?v=4",
					"bio": "",
					"primary": true
				}
			],
			"desc": "Show battery percentage for Bluetooth Mouse",
			"imageURL": "http://i.imgur.com/IqjZMJg.png",
			"dependencies": null,
			"aboutURL": "",
			"lastUpdated": "2021-03-08T15:22:01.948654Z",
			"vars": null
		}
	]
}