{
	"person": {
		"name": "CartoonChess",
		"githubUsername": "cartoonchess",
		"imageURL": "https://avatars.githubusercontent.com/u/43363630?v=4",
		"bio": "",
		"primary": true
	},
	"plugins": [
		{
			"files": [
				{
					"path": "Music/airconnect.1d.sh",
					"filename": "airconnect.1d.sh",
					"content": "#!/bin/bash\n\n###\n#\n# Make sure you take care of the \u003cbitbar.dependencies\u003e, then\n#\n# CHANGE THESE\n#\n\nreadonly path=\"/Applications/\"\nreadonly processName=\"aircast-osx-multi\"\n\n#\n# NOTE: These values cannot contain single or double quotation marks.\n# Would love to know how to get BitBar to parse these correctly!\n# (Incidentally, |href also chokes on spaces.)\n#\n###\n\n\n\n# Info\n\n# \u003cbitbar.title\u003eAirConnect\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev1.1.0\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eCartoonChess\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003ecartoonchess\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eLaunches AirConnect to enable streaming AirPlay audio to Chromecast devices.\u003c/bitbar.desc\u003e\n# \u003cbitbar.image\u003ehttps://user-images.githubusercontent.com/43363630/101709887-aa9f2900-3ad3-11eb-8863-4309a068aa3c.png\u003c/bitbar.image\u003e\n# \u003cbitbar.dependencies\u003eairconnect,bash\u003c/bitbar.dependencies\u003e\n# \u003cbitbar.abouturl\u003ehttps://github.com/cartoonchess/bitbar-airconnect\u003c/bitbar.abouturl\u003e\n\n\n\n# Strings\n\nreadonly app=\"AirConnect\"\n\n\n\n# Icons\n\nreadonly onIcon=\"iVBORw0KGgoAAAANSUhEUgAAACQAAAAkCAYAAADhAJiYAAAACXBIWXMAABYlAAAWJQFJUiTwAAAGX2lUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENvcmUgNi4wLWMwMDMgNzkuMTY0NTI3LCAyMDIwLzEwLzE1LTE3OjQ4OjMyICAgICAgICAiPiA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iIHhtbG5zOmRjPSJodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLyIgeG1sbnM6cGhvdG9zaG9wPSJodHRwOi8vbnMuYWRvYmUuY29tL3Bob3Rvc2hvcC8xLjAvIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RFdnQ9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZUV2ZW50IyIgeG1wOkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgMjIuMSAoTWFjaW50b3NoKSIgeG1wOkNyZWF0ZURhdGU9IjIwMTUtMDMtMjFUMDQ6NTQ6MjArMDk6MDAiIHhtcDpNb2RpZnlEYXRlPSIyMDIwLTEyLTEwVDEwOjIzOjQyKzA5OjAwIiB4bXA6TWV0YWRhdGFEYXRlPSIyMDIwLTEyLTEwVDEwOjIzOjQyKzA5OjAwIiBkYzpmb3JtYXQ9ImltYWdlL3BuZyIgcGhvdG9zaG9wOkNvbG9yTW9kZT0iMyIgcGhvdG9zaG9wOklDQ1Byb2ZpbGU9InNSR0IgSUVDNjE5NjYtMi4xIiB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOjk2MzQxY2VkLTRlNmQtNDYxMi1hNzZhLTUzMGU4YmQ4N2RhYiIgeG1wTU06RG9jdW1lbnRJRD0iYWRvYmU6ZG9jaWQ6cGhvdG9zaG9wOmUzMjIyZmNiLWIxMGYtZDU0ZC05NDQ3LWMzZWJiNzdmMWY1NCIgeG1wTU06T3JpZ2luYWxEb2N1bWVudElEPSJ4bXAuZGlkOjQ1ZjAwZjFiLTIyMzEtNDVmYy05NzdhLTI0NGYxM2U1MTM1ZSI+IDx4bXBNTTpIaXN0b3J5PiA8cmRmOlNlcT4gPHJkZjpsaSBzdEV2dDphY3Rpb249ImNyZWF0ZWQiIHN0RXZ0Omluc3RhbmNlSUQ9InhtcC5paWQ6NDVmMDBmMWItMjIzMS00NWZjLTk3N2EtMjQ0ZjEzZTUxMzVlIiBzdEV2dDp3aGVuPSIyMDE1LTAzLTIxVDA0OjU0OjIwKzA5OjAwIiBzdEV2dDpzb2Z0d2FyZUFnZW50PSJBZG9iZSBQaG90b3Nob3AgMjIuMSAoTWFjaW50b3NoKSIvPiA8cmRmOmxpIHN0RXZ0OmFjdGlvbj0iY29udmVydGVkIiBzdEV2dDpwYXJhbWV0ZXJzPSJmcm9tIGFwcGxpY2F0aW9uL3ZuZC5hZG9iZS5waG90b3Nob3AgdG8gaW1hZ2UvcG5nIi8+IDxyZGY6bGkgc3RFdnQ6YWN0aW9uPSJzYXZlZCIgc3RFdnQ6aW5zdGFuY2VJRD0ieG1wLmlpZDo5NjM0MWNlZC00ZTZkLTQ2MTItYTc2YS01MzBlOGJkODdkYWIiIHN0RXZ0OndoZW49IjIwMjAtMTItMTBUMTA6MjM6NDIrMDk6MDAiIHN0RXZ0OnNvZnR3YXJlQWdlbnQ9IkFkb2JlIFBob3Rvc2hvcCAyMi4xIChNYWNpbnRvc2gpIiBzdEV2dDpjaGFuZ2VkPSIvIi8+IDwvcmRmOlNlcT4gPC94bXBNTTpIaXN0b3J5PiA8L3JkZjpEZXNjcmlwdGlvbj4gPC9yZGY6UkRGPiA8L3g6eG1wbWV0YT4gPD94cGFja2V0IGVuZD0iciI/PhYdaq8AAAH7SURBVFiF7ZfRcdswDIa/9jKANqi6gT1B3AniDapsIE9gZYK2E4QbJJ2gygTRBtEG0QbtA4EQoinZdSTlxd8djzQIm78BkpDgwoX38cmMM6CQfkk6wEn/RgY8A38/qD0TBaL8QDHaSoArEyGlBp7iuM7ENbCxGq4STk9AtYgcv87GGj4vtPDJpCJk2RD9gwmopSU5RdB+Oi1v1EMTKqhiuX0zyrE95IAd0M6uRDgmqAV+Al+BW6LbdA5UUEW4oF6ABw7LiBNhbglBlhzYAvfAq/S5zHX4SN0uKSimwEetMjYHrJkhhSrIAd+k3QFNwnePL4K5fG7EfzFyfLriIvgKrIxfkfAZa5X5bhXbx1LW4vfKmn7EMuAPIVKOCTd66pTpCVMafGrsopn4KTsm2k+pCG3xqXqRMYTTZUWtCOHvRNQsgpQcH4V7Y9vRT9+efuraqQQ5fFriBcGn74eMOw7vIFt8f71XkBbXVlqNLxWlLJTJfIl/cHvEC3aEfVYQ9tAjx18S6jO1ssIfcVtSlJz+US44j4qBY68TD/QvvrtIhC7c0k/tzZmCDogf0Lb4h7I1odJ/J1yEN4ST9tvYtVeqE9e/NuMv8Q/YFNg7pozmlM2AHf7v5u69Bg0d+60ZNwM+U9IgkdeU1SPOLf29dMzOiD1FR+JV+sKFc/kHPkbXK6gg7e8AAAAASUVORK5CYII=\"\n\nreadonly offIcon=\"iVBORw0KGgoAAAANSUhEUgAAACQAAAAkCAYAAADhAJiYAAAACXBIWXMAABYlAAAWJQFJUiTwAAAGX2lUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENvcmUgNi4wLWMwMDMgNzkuMTY0NTI3LCAyMDIwLzEwLzE1LTE3OjQ4OjMyICAgICAgICAiPiA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iIHhtbG5zOmRjPSJodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLyIgeG1sbnM6cGhvdG9zaG9wPSJodHRwOi8vbnMuYWRvYmUuY29tL3Bob3Rvc2hvcC8xLjAvIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RFdnQ9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZUV2ZW50IyIgeG1wOkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgMjIuMSAoTWFjaW50b3NoKSIgeG1wOkNyZWF0ZURhdGU9IjIwMTUtMDMtMjFUMDQ6NTQ6MjIrMDk6MDAiIHhtcDpNb2RpZnlEYXRlPSIyMDIwLTEyLTEwVDEwOjI2OjA2KzA5OjAwIiB4bXA6TWV0YWRhdGFEYXRlPSIyMDIwLTEyLTEwVDEwOjI2OjA2KzA5OjAwIiBkYzpmb3JtYXQ9ImltYWdlL3BuZyIgcGhvdG9zaG9wOkNvbG9yTW9kZT0iMyIgcGhvdG9zaG9wOklDQ1Byb2ZpbGU9InNSR0IgSUVDNjE5NjYtMi4xIiB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOjgxYzg2NGI4LTQ0OTQtNDdiNy1iOGY2LTdkNDNiZjgyNzUxZCIgeG1wTU06RG9jdW1lbnRJRD0iYWRvYmU6ZG9jaWQ6cGhvdG9zaG9wOjEyODQ2OTA3LTBjMjctODk0Ni1iODJlLTgwN2M0NjFkZTVmZCIgeG1wTU06T3JpZ2luYWxEb2N1bWVudElEPSJ4bXAuZGlkOmMwOTBmMjkyLTIwN2EtNDVlYy04Y2ZkLThiMzc0ZjljNDNiMiI+IDx4bXBNTTpIaXN0b3J5PiA8cmRmOlNlcT4gPHJkZjpsaSBzdEV2dDphY3Rpb249ImNyZWF0ZWQiIHN0RXZ0Omluc3RhbmNlSUQ9InhtcC5paWQ6YzA5MGYyOTItMjA3YS00NWVjLThjZmQtOGIzNzRmOWM0M2IyIiBzdEV2dDp3aGVuPSIyMDE1LTAzLTIxVDA0OjU0OjIyKzA5OjAwIiBzdEV2dDpzb2Z0d2FyZUFnZW50PSJBZG9iZSBQaG90b3Nob3AgMjIuMSAoTWFjaW50b3NoKSIvPiA8cmRmOmxpIHN0RXZ0OmFjdGlvbj0iY29udmVydGVkIiBzdEV2dDpwYXJhbWV0ZXJzPSJmcm9tIGFwcGxpY2F0aW9uL3ZuZC5hZG9iZS5waG90b3Nob3AgdG8gaW1hZ2UvcG5nIi8+IDxyZGY6bGkgc3RFdnQ6YWN0aW9uPSJzYXZlZCIgc3RFdnQ6aW5zdGFuY2VJRD0ieG1wLmlpZDo4MWM4NjRiOC00NDk0LTQ3YjctYjhmNi03ZDQzYmY4Mjc1MWQiIHN0RXZ0OndoZW49IjIwMjAtMTItMTBUMTA6MjY6MDYrMDk6MDAiIHN0RXZ0OnNvZnR3YXJlQWdlbnQ9IkFkb2JlIFBob3Rvc2hvcCAyMi4xIChNYWNpbnRvc2gpIiBzdEV2dDpjaGFuZ2VkPSIvIi8+IDwvcmRmOlNlcT4gPC94bXBNTTpIaXN0b3J5PiA8L3JkZjpEZXNjcmlwdGlvbj4gPC9yZGY6UkRGPiA8L3g6eG1wbWV0YT4gPD94cGFja2V0IGVuZD0iciI/PgzdiP0AAAHiSURBVFiF7ZetdoNAEIW/pghEBKIiIgKJRPQBkJGVlX2EPkIfI7KysrIyMiICUVERgYhARCAiEBUVMxsWCklOICSCe86eXWY32cu9sz/AgAHtcGe1XSDUuk/kQKz1npALvACTnskYpMA7kI80EF6RDDp3COBowLYp0dIHfC17Dk7NoARY9MEGiCgIATCqHXZFDISOweTQgv7y5iBuTqGbI2Qsi7QAZMjO+aMlvwYhG56WQJ9jJL+yHvicZFkIvFIoeFHca50h9sTadoFxZayPqLamOxt9ip06ARJDKFcimXaslJxL+dAdI4qtgd0lCB2yLAM+gTmS5AbmquJ1QOgfjEKRThIhijgWiR3wjahj1HKQN1u1nN+nwTK74wHJlRBRaQv8IjnmWaRMjiVdEjpkmQc8A09W7IuyfREdW1ddZSny5vYKmyB5s0aU2gCPVr+rvz0HPkdW2QbJixyYUmycUyW7RXLKo7BuAiyVbGtCTZYt0Uu3FZtZ7UVlfEBHMIQi4A3JGU9jaWViD72IU5x3nROqnmUBIuFcJ11S/iIJkA0TJG9s22xEJ87vW22vjhBIks6AD32OKeyylUiqf3YGIRspNB+uQXXghZGiyhuFEpqvsFlDX1OcA/E6lD6lBwxoiz93TGyVG5zbNAAAAABJRU5ErkJggg==\"\n\n\n\n# Run app\n\nif [ \"$1\" = \"start\" ]; then\n\t# Must use -Z to keep CPU under control\n\t# \u0026 runs in background so plugin can refresh\n\t\"$path$processName\" -Z \u0026\n\texit\nfi\n\n\n\n# Exit app\n\nif [ \"$1\" = \"stop\" ]; then\n\tpid=$(pgrep \"$processName\")\n\tkill -s $2 $pid\n\t# Give the plugin time to wait for the app process to end\n\tsleep 1\n\texit\nfi\n\n\n\n# Check if app script is running\n\nrunning=false\nps cax | grep aircast-osx-multi \u003e /dev/null\n\nif [ $? = 0 ]; then\n\trunning=true\nfi\n\n\n\n# Show menu bar item\n\nif [ \"$running\" = true ]; then\n\techo \"| templateImage=$onIcon\"\nelse\n\techo \"| templateImage=$offIcon\"\nfi\necho \"---\"\n\n\n\n# Check that the app can be located and only show help if not\n\ntest -f \"$path$processName\"\n\nif [ $? != 0 ]; then\n\techo \"$app Not Found\"\n\techo \"Refresh | refresh=true\"\n\techo \"Help\"\n\techo \"-- Set path and filename in .sh file\"\n\techo \"-- Open Plugin Folder… | href=file://${0%/*}/\"\n\techo \"-----\"\n\techo \"-- Download and install $app binary\"\n\techo \"-- Open GitHub Page… | href=https://github.com/philippe44/AirConnect\"\n\texit\nfi\n\n\n\n\n# Show full menu (if app is properly located)\n\nif [ \"$running\" = true ]; then\n\t# Running\n\techo \"Running\"\n\techo \"Stop $app | bash='$0' param1=stop param2=TERM terminal=false refresh=true\"\n\t# Hold opt key to force quit\n\techo \"Force Quit $app | alternate=true bash='$0' param1=stop param2=KILL terminal=false refresh=true\"\nelse\n\t# Not running\n\techo \"Not Running\"\n\techo \"Start $app | bash='$0' param1=start terminal=false refresh=true\"\nfi"
				}
			],
			"path": "Music/airconnect.1d.sh",
			"filename": "airconnect.1d.sh",
			"dir": "Music",
			"docsPlugin": "Music/airconnect.1d.sh.html",
			"docsCategory": "Music.html",
			"pathSegments": [
				"Music"
			],
			"categoryPathSegments": [
				{
					"path": "Music",
					"text": "Music",
					"isLast": true
				}
			],
			"title": "AirConnect",
			"version": "v1.1.0",
			"author": "CartoonChess",
			"authors": [
				{
					"name": "CartoonChess",
					"githubUsername": "cartoonchess",
					"imageURL": "https://avatars.githubusercontent.com/u/43363630?v=4",
					"bio": "",
					"primary": true
				}
			],
			"desc": "Launches AirConnect to enable streaming AirPlay audio to Chromecast devices.",
			"imageURL": "https://user-images.githubusercontent.com/43363630/101709887-aa9f2900-3ad3-11eb-8863-4309a068aa3c.png",
			"dependencies": [
				"airconnect",
				"bash"
			],
			"aboutURL": "https://github.com/cartoonchess/bitbar-airconnect",
			"lastUpdated": "2021-03-08T15:21:56.758357Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "Environment/covid-19_today.15m.sh",
					"filename": "covid-19_today.15m.sh",
					"content": "#!/bin/bash\n\n# \u003cbitbar.title\u003eCOVID-19 Today\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev1.0.0\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eCartoonChess\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003ecartoonchess\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eDisplays changes in daily and average COVID-19 cases for a given country.\u003c/bitbar.desc\u003e\n# \u003cbitbar.image\u003ehttps://user-images.githubusercontent.com/43363630/93694795-da7d0700-fb4a-11ea-875b-02f29152e929.png\u003c/bitbar.image\u003e\n# \u003cbitbar.dependencies\u003ebash,jq\u003c/bitbar.dependencies\u003e\n# \u003cbitbar.abouturl\u003ehttps://github.com/cartoonchess/bitbar-covid-19-today\u003c/bitbar.abouturl\u003e\n\n# ==============================CONFIGURATION================================\n# Set these variables to configure the output to your liking.\n# The country must be a two- or three-letter country code.\nCOUNTRY=\"kr\"\nSHOW_CASES_TODAY_BESIDE_ICON=true\n# ===========================================================================\n\n\n\n# ==============================DEPENDENCIES=================================\n# This script requires jq for manipulating JSON data.\n# Requires: https://stedolan.github.io/jq/\n# Install via brew:  `brew install jq`\n# ===========================================================================\n\n# ===============================DATA SOURCE=================================\n# This script curls JSON data from disease.sh, the Open Disease API:\n# https://disease.sh/\n# GitHub: https://github.com/disease-sh/api\n# ===========================================================================\n\n# ================================PRIOR ART==================================\n# This script is a modified version of:\n# covid-bitbar\n# https://github.com/wilsongoode/covid-bitbar\n# by Wilson Good\n# Check there for a version with detailed stats for the US.\n# Many thanks!\n# ===========================================================================\n\n\n\n# Setting my Bitbar path to include /usr/local/bin. Systems may vary\n# jq fails without this\nPATH=/usr/local/bin:${PATH}\nexport PATH\nLANG=en_US.UTF-8 # needed in BitBar env for awk to format numbers\nexport LANG\n\n\n\n# Test for jq\n\nJSON_PARSER=\"jq\"\nif [ ! $(command -v $JSON_PARSER) ]; then\n    echo \"⚠\"\n    echo \"---\"\n    echo \"$JSON_PARSER Not Installed\"\n    echo \"Install ${JSON_PARSER}… | href=https://stedolan.github.io/${JSON_PARSER}/download/\"\n    echo \"---\"\n    echo \"Refresh | refresh=true\"\n    exit\nfi\n\n\n\n# Methods\n\n# Return the singular or plural form of a word based on some count\n# Usage:\n# COUNT=15\n# echo \"I have $COUNT $(plural $COUNT 'bee' 'bees')\"\n# Output: I have 15 bees\nplural() {\n    COUNT=$1\n    SINGULAR=$2\n    PLURAL=$3\n    if [ $COUNT = 1 ]; then\n        echo $SINGULAR\n    else\n        echo $PLURAL\n    fi\n}\n\n# Return number with comma as thousands place separator\n# Usage:\n# BIG_NUM=1500\n# echo \"I have $(commas $BIG_NUM) bees\"\n# Output: I have 1,500 bees\ncommas() {\n    echo $(awk 'BEGIN{printf \"%\\047d\\n\", '$1'}')\n}\n\n\n\n# Get the three-letter country code to link to a detailed graph\n\nCOUNTRY_DATA=$(curl -s https://disease.sh/v3/covid-19/countries/$COUNTRY)\n\n# Maybe the server is down?\nif [ -z \"$COUNTRY_DATA\" ]; then\n    echo \"⚠\"\n    echo \"---\"\n    echo \"No Information\"\n    echo \"Refresh | refresh=true\"\n    exit\nfi\n\nCOUNTRY_CODE=$(echo $COUNTRY_DATA |\n    jq '.countryInfo.iso3' |\n    sed -E 's/\"//g'\n    )\n\n# If there's no country code, there's a problem with the data\n# jq returns a literal string \"null\", NOT a null value\nif [ $COUNTRY_CODE = \"null\" ]; then\n    echo \"⚠\"\n    echo \"---\"\n    echo \"Invalid Country Code\"\n    echo \"Use a two- or three-letter code in the script\"\n    echo \"Open Plugin Folder… | href=file://${0%/*}/\"\n    echo \"---\"\n    echo \"Refresh | refresh=true\"\n    exit\nfi\n\n    \n\n# Fetch various numbers\n# Somehow this data seems more reliable than the data above.\n# Namely, it often reports zero new cases when that simply isn't true.\n\nHISTORICAL_DATA=$(curl -s https://disease.sh/v3/covid-19/historical/$COUNTRY\\?lastdays=3)\nCOUNTRY_NAME=$(echo $HISTORICAL_DATA |\n    jq '.country' |\n    # Remove quotation marks\n    sed -E 's/\"//g'\n    )\n\nCASES_TODAY=$(echo $HISTORICAL_DATA |\n    jq '[.timeline.cases[]] | sort | .[-1] - .[-2]'\n    )\n    \nCASES_YESTERDAY=$(echo $HISTORICAL_DATA |\n    jq '[.timeline.cases[]] | sort | .[-2] - .[-3]'\n    )\n    \nTOTAL_CASES=$(\n    echo $HISTORICAL_DATA |\n    jq '[.timeline.cases[]] | sort | .[-1]'\n    )\n   \n   \n    \n# Calculate daily stats\n\nTODAY=$(date +%s)\n# Data begins at 2020-01-22\n# Mac-specific formatting; Linux would require a change\nDAY_ONE=$(date -jf \"%Y-%m-%d\" \"2020-01-22\" +%s)\nTOTAL_DAYS=$((($TODAY-$DAY_ONE)/(3600*24)))\nDAILY_AVERAGE=$(($TOTAL_CASES/$TOTAL_DAYS))\n\nTODAY_VS_YESTERDAY=$(($CASES_TODAY-$CASES_YESTERDAY))\nTODAY_VS_AVERAGE=$(($CASES_TODAY-$DAILY_AVERAGE))\n\n\n\n# Determine differences and format strings\n\n# Absolute value of difference between new cases today and yesterday\nif [ $TODAY_VS_YESTERDAY = 0 ]; then\n    DAILY_DIFFERENCE=\"▶ No more\" # —\nelif [ $TODAY_VS_YESTERDAY -lt 0 ]; then\n    DAILY_DIFFERENCE=$((-$TODAY_VS_YESTERDAY))\n    # awk prints numbers with comma as thousands place separators\n    DAILY_DIFFERENCE=$(commas $DAILY_DIFFERENCE)\n    DAILY_DIFFERENCE=\"▼ $DAILY_DIFFERENCE fewer\"\nelse\n    DAILY_DIFFERENCE=$(commas $TODAY_VS_YESTERDAY)\n    DAILY_DIFFERENCE=\"▲ $DAILY_DIFFERENCE more\"\nfi\n\n# Absolute value of difference between total cases today and daily average\nif [ $TODAY_VS_AVERAGE = 0 ]; then\n    AVERAGE_DIFFERENCE=\"⦵ No more\" # —⃝\nelif [ $TODAY_VS_AVERAGE -lt 0 ]; then\n    AVERAGE_DIFFERENCE=$((-$TODAY_VS_AVERAGE))\n    AVERAGE_DIFFERENCE=$(commas $AVERAGE_DIFFERENCE)\n    AVERAGE_DIFFERENCE=\"—̥ $AVERAGE_DIFFERENCE fewer\" # ⏁—̥⃝\nelse\n    AVERAGE_DIFFERENCE=$(commas $TODAY_VS_AVERAGE)\n    AVERAGE_DIFFERENCE=\"—̊ $AVERAGE_DIFFERENCE more\" # ⏂—̊⃝\nfi\n\n\n\n# Show menu bar item\n# TODO: What about \"break even\" icons??\n\n# ⤉⤈⤒⤓ ▼̅▼̲▲̅▲̲ ⤉⃝⤈⃝⤒⃝⤓⃝ ▼̅⃝▼̲⃝▲̅⃝▲̲⃝\nif [ $TODAY_VS_YESTERDAY = 0 ]; then\n    if [ $TODAY_VS_AVERAGE = 0 ]; then\n        ICON=\"⦵\"\n    elif [ $TODAY_VS_AVERAGE -lt 0 ]; then\n        ICON=\"—̥\"\n    else\n        ICON=\"—̊\"\n    fi\nelif [ $TODAY_VS_YESTERDAY -lt 0 ]; then\n    if [ $TODAY_VS_AVERAGE = 0 ]; then\n        # This and its upward equivalent render without strikethrough without other text\n        # i.e. If not showing daily count, only the triangle appears\n        ICON=\"▽̶\"\n    elif [ $TODAY_VS_AVERAGE -lt 0 ]; then\n        ICON=\"⤈\"\n    else\n        ICON=\"⤓\"\n    fi\nelse\n    if [ $TODAY_VS_AVERAGE = 0 ]; then\n        ICON=\"△̶\"\n    elif [ $TODAY_VS_AVERAGE -lt 0 ]; then\n        ICON=\"⤒\"\n    else\n        ICON=\"⤉\"\n    fi\nfi\n\nCASES_TODAY_FORMATTED=$(commas $CASES_TODAY)\nif [ $SHOW_CASES_TODAY_BESIDE_ICON = true ]; then\n    ICON=\"$ICON $CASES_TODAY_FORMATTED\"\nfi\n\necho $ICON\necho \"---\"\n\n\n\n# Show dropdown details\n\n# Total new cases today\n# Add \"s\" for plural, if plural\necho \"$CASES_TODAY_FORMATTED new $(plural $CASES_TODAY 'case' 'cases') today in $COUNTRY_NAME | href=https://ourworldindata.org/coronavirus-data-explorer?interval=daily\u0026country=$COUNTRY_CODE\"\n\necho $DAILY_DIFFERENCE\" new $(plural $TODAY_VS_YESTERDAY 'case' 'cases') than yesterday\"\necho $AVERAGE_DIFFERENCE\" daily $(plural $TODAY_VS_AVERAGE 'case' 'cases') than average\"\n\n\n\n# Options\n\necho \"---\"\necho \"Update | refresh=true\"\necho \"Settings\"\necho \"-- Edit the plugin directly to:\"\necho \"-- • Change the country\"\necho \"-- • Show or hide daily cases beside icon\"\necho \"-----\"\necho \"-- Open Plugin Folder… | href=file://${0%/*}/\"\n"
				}
			],
			"path": "Environment/covid-19_today.15m.sh",
			"filename": "covid-19_today.15m.sh",
			"dir": "Environment",
			"docsPlugin": "Environment/covid-19_today.15m.sh.html",
			"docsCategory": "Environment.html",
			"pathSegments": [
				"Environment"
			],
			"categoryPathSegments": [
				{
					"path": "Environment",
					"text": "Environment",
					"isLast": true
				}
			],
			"title": "COVID-19 Today",
			"version": "v1.0.0",
			"author": "CartoonChess",
			"authors": [
				{
					"name": "CartoonChess",
					"githubUsername": "cartoonchess",
					"imageURL": "https://avatars.githubusercontent.com/u/43363630?v=4",
					"bio": "",
					"primary": true
				}
			],
			"desc": "Displays changes in daily and average COVID-19 cases for a given country.",
			"imageURL": "https://user-images.githubusercontent.com/43363630/93694795-da7d0700-fb4a-11ea-875b-02f29152e929.png",
			"dependencies": [
				"bash",
				"jq"
			],
			"aboutURL": "https://github.com/cartoonchess/bitbar-covid-19-today",
			"lastUpdated": "2021-03-08T15:21:53.251459Z",
			"vars": null
		}
	]
}