{
	"person": {
		"name": "makoto abe",
		"githubUsername": "m0a",
		"imageURL": "https://avatars.githubusercontent.com/u/1158410?v=4",
		"bio": "",
		"primary": true
	},
	"plugins": [
		{
			"files": [
				{
					"path": "Tools/octoprint.1m.sh",
					"filename": "octoprint.1m.sh",
					"content": "#!/bin/bash\n# \u003cbitbar.title\u003eOctoprint\u003c/bitbar.title\u003e\n# \u003cbitbar.author\u003em0a\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003em0a\u003c/bitbar.author.github\u003e\n# \u003cbitbar.version\u003ev1.1\u003c/bitbar.version\u003e\n# \u003cbitbar.desc\u003e3dprinter control with octoprint api\u003c/bitbar.desc\u003e\n# \u003cbitbar.image\u003ehttp://i.imgur.com/biN2ISe.png\u003c/bitbar.image\u003e\n# \u003cbitbar.dependencies\u003e\u003c/bitbar.dependencies\u003e\n\n# please setup \nAPIKEY=\"222626A0B0794703A203D5E976BE0AEC\"\nENDPOINT=\"http://192.168.11.111:5000\"\nSNAPSHOTURL=\"http://192.168.11.111:8080/?action=snapshot\"\nIMAGEWIDTH=300x\n\nJQ=/usr/local/bin/jq\nCONVERT=/usr/local/bin/convert\n\n\nif [ ! -e $JQ ]; then \n\t\techo \"expect 'brew install jq'\" \n\t\texit 1\nfi\nif [ ! -e $CONVERT ]; then \n\t\techo \"expect 'brew install imagemagick'\" \n\t\texit 1\nfi\n\n\nDEBUG=false\nHEADER=\"x-api-key:$APIKEY\"\n\n\nfunction runapi {\n\tcurl -s -gH \"$HEADER\" \"$ENDPOINT/api/$1\"\n\treturn 0\n}\n\nfunction displaybytes {\n    local bytes=$1;\n    if [[ $bytes -lt 1048576 ]]; then\n        echo \"$(( (bytes + 1023)/1024 ))KiB\"\n    else\n        echo \"$(( (bytes + 1048575)/1048576 ))MiB\"\n    fi\n}\n\n\nfunction displaytime {\n\tlocal T=$1\n\tlocal D=$((T/60/60/24))\n\tlocal H=$((T/60/60%24))\n\tlocal M=$((T/60%60))\n\tlocal S=$((T%60))\n\t\n\t(( D \u003e 0 )) \u0026\u0026 printf '%dd' $D\n\t(( H \u003e 0 )) \u0026\u0026 printf '%dh' $H\n\t(( M \u003e 0 )) \u0026\u0026 printf '%dm' $M\n\t(( D \u003e 0 || H \u003e 0 || M \u003e 0 )) \u0026\u0026 printf '%ds | color=black\\n' $S\n\treturn 0\n}\n\nfunction displaysnapshot {\n\t\tlocal snapshot\n\t\tif ! curl -s \"$SNAPSHOTURL\" \u003e /dev/null\n\t\tthen\n\t\t\techo \"webcam don't enable\"\n\t\t\treturn 1\n\t\tfi\n\t\tsnapshot=$(curl -s \"$SNAPSHOTURL\" | $CONVERT - -quiet -resize $IMAGEWIDTH - |base64)\n\t\techo \"| image=$snapshot refresh=true\"\n\t\treturn 0\n}\n\n\n# menu functions\nfunction printcmd {\n\t\tcurl -s -H $HEADER -H Accept:application/json -H Content-type:application/json -X POST -d '{\"command\":\"select\",\"print\":true}' \"$ENDPOINT/api/files/local/$1\"\n}\nfunction printstopcmd {\n\t\tcurl -s -H $HEADER -H Accept:application/json -H Content-type:application/json -X POST -d '{\"command\":\"cancel\"}' $ENDPOINT/api/job\n}\nfunction deletecmd {\n\t\tcurl -s -H $HEADER  -X DELETE  \"$ENDPOINT/api/files/local/$1\"\n}\n\n# task switch if parameter count = 0 then print menu\nif [ $# -ne 0 ]; then\n\t\tcmd=$1\n\t\techo \"run $cmd $2\"\n\t\tstatus=$($cmd \"$2\")\n\t\techo \"$status\"\n\t\texit 0\nfi\n\n\n# env check\njob=$(runapi job)\nif [ \"$job\" = '' ]; then\n\t\techo \"err | color=red\"\n\t\techo \"---\"\n\t\techo \"please edit this file and change ENDPOINT.\"\n\t\texit 1;\nfi\n\nif [ \"$job\" = 'Invalid API key' ]; then\n\t\techo \"err | color=red\"\n\t\techo \"---\"\n\t\techo \"please edit this file and change APIKEY.\"\n\t\texit 1;\nfi\n\nseconds=$(echo \"$job\" | $JQ .progress.printTimeLeft)\nfilename=$(echo \"$job\" |$JQ .job.file.name -r)\nstate=$(echo \"$job\" |$JQ .state -r)\n\nif [ \"$state\" = Printing ]; then\nprintf 'ETE ' \u0026\u0026 displaytime \"$seconds\" \n\necho \"$filename | color=black\"\nelse \necho \"$state | color=black\"\nfi\n\n\necho \"---\"\nprinter=$(runapi printer)\ntemp0=$(echo \"$printer\" |$JQ .temperature.tool0.actual -r)\nbed=$(echo \"$printer\" |$JQ .temperature.bed.actual -r)\necho \"hotend:$temp0°C  bed:$bed°C | color=black\"\n\nif [ \"$DEBUG\" = true ]; then echo \"Refresh | refresh=true\" ; fi\n\nversion=$(runapi version)\nocto_ver=$(echo \"$version\" |$JQ -r .server)\napi_ver=$(echo \"$version\" |$JQ -r .api)\necho \"octoprint:$octo_ver api:$api_ver | color=green href=$ENDPOINT\"\n\ndisplaysnapshot\n\n# control job\nif [ \"$state\" = Printing ]; then\necho \"---\"\necho \"print cancel  | color=red bash=$0 param1=printstopcmd  terminal=$DEBUG\"\nfi\n\necho \"---\"\nfiles=$(runapi files)\nfilenames=$(echo \"$files\" |$JQ -r '.files | sort_by(.date)| reverse | .[].name')\n\n# echo \"$files\" | pbcopy\n\n\nfunction filesubmenu {\n\t\tlocal filename=$1\n\t\tlocal onefile\n\t\tlocal filesize\n\t\tlocal filedate\n\t\t\n\t\t# shellcheck disable=SC2016\n\t\tonefile=$(echo \"$files\" |$JQ  --arg filename \"$filename\" '.files | map(select(.name == $filename ))' )\n\t\t\n\t\tfilesize=$(echo \"$onefile\" |$JQ .[0].size)\n\t\tfilesize=$(displaybytes \"$filesize\")\n\t\t\n\t\tfiledate=$(echo \"$onefile\" |$JQ .[0].date)\n\t\tfiledate=$(date -r \"$filedate\" +\"%Y-%m-%d %H:%M:%S\" )\n\n\t\t# print submenu\n\t\techo \"$filename\"\n\t\t\n\t\tif [ \"$state\" != \"Printing\" ]; then\n\t\t\t\techo \"--start print | color=green bash=$0 param1=printcmd param2=$filename refresh=true terminal=$DEBUG\"\n\t\tfi\n\t\techo \"--uploaded: $filedate\"\n\t\techo \"--size: $filesize\"\n\t\techo \"--delete | color=green bash=$0 param1=deletecmd param2=$filename refresh=true terminal=$DEBUG \"\n\t\treturn 0\n}\n\n# show file submenu\nfor f in $filenames;do\n\t\tfilesubmenu \"$f\"\ndone\n"
				}
			],
			"path": "Tools/octoprint.1m.sh",
			"filename": "octoprint.1m.sh",
			"dir": "Tools",
			"docsPlugin": "Tools/octoprint.1m.sh.html",
			"docsCategory": "Tools.html",
			"pathSegments": [
				"Tools"
			],
			"categoryPathSegments": [
				{
					"path": "Tools",
					"text": "Tools",
					"isLast": true
				}
			],
			"title": "Octoprint",
			"version": "v1.1",
			"author": "m0a",
			"authors": [
				{
					"name": "makoto abe",
					"githubUsername": "m0a",
					"imageURL": "https://avatars.githubusercontent.com/u/1158410?v=4",
					"bio": "",
					"primary": true
				}
			],
			"desc": "3dprinter control with octoprint api",
			"imageURL": "http://i.imgur.com/biN2ISe.png",
			"dependencies": [],
			"aboutURL": "",
			"lastUpdated": "2021-03-08T15:22:07.613472Z",
			"vars": null
		}
	]
}