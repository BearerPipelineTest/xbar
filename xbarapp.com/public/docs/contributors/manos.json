{
	"person": {
		"name": "Charlie Schluting",
		"githubUsername": "manos",
		"imageURL": "https://avatars.githubusercontent.com/u/132518?v=4",
		"bio": "",
		"primary": true
	},
	"plugins": [
		{
			"files": [
				{
					"path": "Cryptocurrency/Ethereum/eth_wallet_balances.1m.py",
					"filename": "eth_wallet_balances.1m.py",
					"content": "#!/usr/local/homebrew/bin/python3\n\"\"\"Loads Ethereum wallet address (configured below) and all tokens associated with\n   each address. Then displays current $USD value in the bitbar title, with a drop-down\n   showing each total value for owned ETH and each token.\n\"\"\"\nimport time\nfrom collections import defaultdict\n\nimport requests\n\n#\n# Enter your wallets here:\n#\nWALLET_ADDRESSES = [\n    '0x88752Bd600928b902EDAd9afFaaFCE1367Ae3461',\n    '0x418091020F2A909479C4058E32BE08464A45DA8A',\n]\n\n# Tickers to display at the bottom:\nTICKERS = ['BTC', 'ETH', 'LTC']\n\n# \u003cbitbar.title\u003eEtherum Wallet (and token) Balances\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev1.0\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eCharlie Schluting\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003emanos\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eDisplays a $USD total across all configured wallets, with drop-down showing the value of your ETH and all tokens held.\u003c/bitbar.desc\u003e\n# \u003cbitbar.image\u003ehttps://schluting.com/temp/bitbar-eth-bal.png\u003c/bitbar.image\u003e\n# \u003cbitbar.dependencies\u003epython3\u003c/bitbar.dependencies\u003e\n# \u003cbitbar.abouturl\u003ehttps://github.com/manos/bitbar_ethereum_wallet_balances\u003c/bitbar.abouturl\u003e\n\nETHEXPLORER_API_KEY = 'freekey'\nEE_URL = 'http://api.ethplorer.io/'\nEE_QS = '?apiKey=%s' % ETHEXPLORER_API_KEY\nCMC_LISTINGS = []\n\ndef get_json(url):\n    \"\"\"Fetches URL and returns JSON. \"\"\"\n    res = requests.get(url)\n    res.raise_for_status()\n    return res.json()\n\ndef get_ticker_price(ticker):\n    \"\"\"Returns current price (from coinmarketcap.com) for given symbol. \"\"\"\n    ticker_id = [x['id'] for x in CMC_LISTINGS['data'] if x['symbol'] == ticker][0]\n\n    resp = get_json('https://api.coinmarketcap.com/v2/ticker/%s/' % ticker_id)\n    return resp['data']['quotes']['USD']['price']\n\n\nif __name__ == '__main__':\n    eth_sum = 0\n    my_tokens = defaultdict(lambda: 0)\n\n    # Load up coinmarketcap.com listings:\n    CMC_LISTINGS = get_json('https://api.coinmarketcap.com/v2/listings/')\n\n    for addr in WALLET_ADDRESSES:\n        resp = get_json(EE_URL + 'getAddressInfo/' + addr + EE_QS)\n\n        eth_sum += resp.get('ETH', {}).get('balance', 0)\n\n        if 'tokens' in resp and resp['tokens']:\n            for token in resp['tokens']:\n                if not token['balance']:\n                    continue\n                if int(token['tokenInfo']['decimals']):\n                    # update the balance with proper decimal shift:\n                    token['balance'] = token['balance'] * 10**-int(token['tokenInfo']['decimals'])\n                # convert balance to USD now:\n                if token['tokenInfo']['price']:\n                    token_price = float(token['tokenInfo']['price']['rate'])\n                else:\n                    token_price = 0\n                my_tokens[token['tokenInfo']['symbol']] = defaultdict(float)\n                my_tokens[token['tokenInfo']['symbol']]['price'] = token_price\n                my_tokens[token['tokenInfo']['symbol']]['count'] += float(token['balance'])\n                my_tokens[token['tokenInfo']['symbol']]['usd'] += float(token['balance']) * token_price\n        time.sleep(1)\n\n    eth_price = get_ticker_price('ETH')\n    my_eth_bal = float(eth_price) * float(eth_sum)\n\n    # total $USD amount:\n    total_bal = sum(x['usd'] for x in my_tokens.values()) + my_eth_bal\n    print(\"%.2f\" % total_bal)\n    print('---')\n    print('Balances:')\n    print(\"ETH %.2f|color=green\" % my_eth_bal)\n    print('-- Tokens: %f|color=black' % eth_sum)\n    print('-- Price: %f|color=black' % eth_price)\n\n    for token in sorted((x for x in my_tokens.items()), key=lambda x: x[1]['usd'], reverse=True):\n        print(token[0], \"%.2f|color=green\" % token[1]['usd'])\n        print('-- Tokens: %f|color=black' % token[1]['count'])\n        print('-- Price: %f|color=black' % token[1]['price'])\n\n    # links to wallet addresses on etherscan.io:\n    print('Wallets:')\n    for wallet in WALLET_ADDRESSES:\n        print(\"Etherscan: %s\" % wallet[:6] + \"|href=https://etherscan.io/address/\" + wallet + \" color=blue\")\n\n    print(\"Prices:\")\n    for ticker in TICKERS:\n        print(\"%s: %s|color=green\" % (ticker, str(get_ticker_price(ticker))))\n"
				}
			],
			"path": "Cryptocurrency/Ethereum/eth_wallet_balances.1m.py",
			"filename": "eth_wallet_balances.1m.py",
			"dir": "Cryptocurrency/Ethereum",
			"docsPlugin": "Cryptocurrency/Ethereum/eth_wallet_balances.1m.py.html",
			"docsCategory": "Cryptocurrency/Ethereum.html",
			"pathSegments": [
				"Cryptocurrency",
				"Ethereum"
			],
			"categoryPathSegments": [
				{
					"path": "Cryptocurrency",
					"text": "Cryptocurrency",
					"isLast": false
				},
				{
					"path": "Cryptocurrency/Ethereum",
					"text": "Ethereum",
					"isLast": true
				}
			],
			"title": "Etherum Wallet (and token) Balances",
			"version": "v1.0",
			"author": "Charlie Schluting",
			"authors": [
				{
					"name": "Charlie Schluting",
					"githubUsername": "manos",
					"imageURL": "https://avatars.githubusercontent.com/u/132518?v=4",
					"bio": "",
					"primary": true
				}
			],
			"desc": "Displays a $USD total across all configured wallets, with drop-down showing the value of your ETH and all tokens held.",
			"imageURL": "https://schluting.com/temp/bitbar-eth-bal.png",
			"dependencies": [
				"python3"
			],
			"aboutURL": "https://github.com/manos/bitbar_ethereum_wallet_balances",
			"lastUpdated": "2021-03-08T15:21:46.186415Z",
			"vars": null
		}
	]
}