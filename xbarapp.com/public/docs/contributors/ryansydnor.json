{
	"person": {
		"name": "Ryan Sydnor",
		"githubUsername": "ryansydnor",
		"imageURL": "https://avatars.githubusercontent.com/u/1832096?v=4",
		"bio": "",
		"primary": true
	},
	"plugins": [
		{
			"files": [
				{
					"path": "Dev/buildbot9_status.py",
					"filename": "buildbot9_status.py",
					"content": "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\n# \u003cbitbar.title\u003eBuildbot 9 Status\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev1.0\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eRyan Sydnor\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003eryansydnor\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eDisplays most recent build status on configurable list of builders.\u003c/bitbar.desc\u003e\n# \u003cbitbar.dependencies\u003epython\u003c/bitbar.dependencies\u003e\n\nimport os\nimport sys\nimport json\nimport urllib2\nfrom urllib2 import URLError, HTTPError\n\nbitbar_header = ['BB', '---']\nbuildbot_url = 'http://nine.buildbot.net'\nbuilders = ['db-postgres', 'py27-tw1020', 'db-mysql']\n\n\ndef parse_buildbot_status(url, status):\n    return {\n        'success': status['results'] == 0,\n        'url': url + '#/builders/' + str(status['builderid']) + '/builds/' + str(status['number'])\n    }\n\n\ndef get_buildbot_status(url, builder):\n    builders_url = url + 'api/v2/builders'\n    most_recent_build_url = builders_url + '/%s/builds?complete=true\u0026order=-complete_at\u0026limit=1'\n    try:\n        builder_id_results = json.loads(urllib2.urlopen(builders_url).read()).get('builders', None)\n        builder_id = (b['builderid'] for b in builder_id_results if b[\"name\"] == builder).next()\n        builds = json.loads(urllib2.urlopen(most_recent_build_url % builder_id).read())\n        return builds['builds'][0]\n    except (URLError, HTTPError):\n        bitbar_header.append(\"Could not connect to buildbot.\")\n        print '\\n'.join(bitbar_header)\n        sys.exit(0)\n    except IndexError:\n        bitbar_header.append(\"No recent builds.\")\n        print '\\n'.join(bitbar_header)\n        sys.exit(0)\n\n\ndef main():\n    # add trailing slash if it doesn't already exist\n    url = os.path.join(buildbot_url, '')\n    for builder in builders:\n        status = get_buildbot_status(url, builder)\n        result = parse_buildbot_status(url, status)\n        bitbar_header.append(\"%s | color=%s href=%s\" % (builder, 'green' if result['success'] else 'red', result['url']))\n    print '\\n'.join(bitbar_header)\n\n\nmain()\n"
				}
			],
			"path": "Dev/buildbot9_status.py",
			"filename": "buildbot9_status.py",
			"dir": "Dev",
			"docsPlugin": "Dev/buildbot9_status.py.html",
			"docsCategory": "Dev.html",
			"pathSegments": [
				"Dev"
			],
			"categoryPathSegments": [
				{
					"path": "Dev",
					"text": "Dev",
					"isLast": true
				}
			],
			"title": "Buildbot 9 Status",
			"version": "v1.0",
			"author": "Ryan Sydnor",
			"authors": [
				{
					"name": "Ryan Sydnor",
					"githubUsername": "ryansydnor",
					"imageURL": "https://avatars.githubusercontent.com/u/1832096?v=4",
					"bio": "",
					"primary": true
				}
			],
			"desc": "Displays most recent build status on configurable list of builders.",
			"imageURL": "https://xbarapp.com/public/img/xbar-2048.png",
			"dependencies": [
				"python"
			],
			"aboutURL": "",
			"lastUpdated": "2021-03-08T15:21:50.973856Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "Dev/gerrit_incoming_crs.5m.py",
					"filename": "gerrit_incoming_crs.5m.py",
					"content": "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\n# \u003cbitbar.title\u003eGerrit Incoming Code Reviews\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev1.0\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eRyan Sydnor\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003eryansydnor\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eDisplays your incoming code reviews.\u003c/bitbar.desc\u003e\n# \u003cbitbar.dependencies\u003epython\u003c/bitbar.dependencies\u003e\n\nimport sys\nimport json\nimport subprocess\n\ngerrit_user = 'my-gerrit-user'\ngerrit_host = 'gerrit.example.com'\ngerrit_port = '29418'\n\n\ndef query_gerrit():\n    gerrit_query = ['ssh', '%s@%s' % (gerrit_user, gerrit_host), '-p', gerrit_port,\n                    'gerrit', 'query', '--format=JSON', '--all-approvals',\n                    'status:open', 'reviewer:\"%s\"' % gerrit_user]\n    try:\n        results = subprocess.check_output(\n            gerrit_query, stderr=subprocess.STDOUT)\n        return strip_unused_results(results)\n    except:\n        print 'Unable to query gerrit'\n        print '---'\n        print \"Ensure you've uploaded your SSH key to gerrit\"\n        sys.exit(1)\n\n\ndef strip_unused_results(results):\n    # last line is blank\n    # second to last line is an aggregate\n    results = results.split('\\n')\n    results = results[:-2] if len(results) \u003e 2 else []\n    return [json.loads(x) for x in results]\n\n\ndef is_self(result):\n    return result.get('owner', {}).get('username', '') == gerrit_user\n\n\ndef filter_self(results):\n    return [x for x in results if not is_self(x)]\n\n\ndef print_results(results):\n    print '%s CRs' % len(results)\n    print '---'\n    for r in results:\n        subj = r.get('subject')\n        url = r.get('url')\n        print '%s | href=%s' % (subj, url)\n\n\ndef main():\n    all_incoming = filter_self(query_gerrit())\n    print_results(all_incoming)\n\n\nif __name__ == \"__main__\":\n    main()\n"
				}
			],
			"path": "Dev/gerrit_incoming_crs.5m.py",
			"filename": "gerrit_incoming_crs.5m.py",
			"dir": "Dev",
			"docsPlugin": "Dev/gerrit_incoming_crs.5m.py.html",
			"docsCategory": "Dev.html",
			"pathSegments": [
				"Dev"
			],
			"categoryPathSegments": [
				{
					"path": "Dev",
					"text": "Dev",
					"isLast": true
				}
			],
			"title": "Gerrit Incoming Code Reviews",
			"version": "v1.0",
			"author": "Ryan Sydnor",
			"authors": [
				{
					"name": "Ryan Sydnor",
					"githubUsername": "ryansydnor",
					"imageURL": "https://avatars.githubusercontent.com/u/1832096?v=4",
					"bio": "",
					"primary": true
				}
			],
			"desc": "Displays your incoming code reviews.",
			"imageURL": "https://xbarapp.com/public/img/xbar-2048.png",
			"dependencies": [
				"python"
			],
			"aboutURL": "",
			"lastUpdated": "2021-03-08T15:21:51.310729Z",
			"vars": null
		}
	]
}