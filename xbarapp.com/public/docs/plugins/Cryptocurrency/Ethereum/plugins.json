{
	"plugins": [
		{
			"files": [
				{
					"path": "Cryptocurrency/Ethereum/gasnow.10s.sh",
					"filename": "gasnow.10s.sh",
					"content": "#!/bin/bash\n#\n# \u003cbitbar.title\u003eETH Gas Price\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev1.0.1\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eBiran Yucel\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003ebiranyucel\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eETH GasPrice forecast system.\u003c/bitbar.desc\u003e\n# \u003cbitbar.image\u003ehttps://i.imgur.com/f1hPKO2.png\u003c/bitbar.image\u003e\n# \u003cbitbar.abouturl\u003ehttps://www.gasnow.org/\u003c/bitbar.abouturl\u003e\n#\n#ETH GasPrice forecast system based on SparkPool Pending Transaction Mempool\n\nresponse=$(curl -s https://www.gasnow.org/api/v3/gas/price)\nread code rapid fast standard slow timestamp \u003c\u003c\u003c${response//[^0-9]/ }\necho \"ùöµ Rapid ${rapid:0:((${#rapid} - 9))} | color=green\" \necho \"ùöµ Fast ${fast:0:((${#fast} - 9))} | color=orange\"\necho \"ùöµ Standard ${standard:0:((${#standard} - 9))} | color=blue\"\necho \"ùöµ Slow ${slow:0:((${#slow} - 9))} | color=purple\"\n"
				}
			],
			"path": "Cryptocurrency/Ethereum/gasnow.10s.sh",
			"filename": "gasnow.10s.sh",
			"dir": "Cryptocurrency/Ethereum",
			"docsPlugin": "Cryptocurrency/Ethereum/gasnow.10s.sh.html",
			"docsCategory": "Cryptocurrency/Ethereum.html",
			"pathSegments": [
				"Cryptocurrency",
				"Ethereum"
			],
			"categoryPathSegments": [
				{
					"path": "Cryptocurrency",
					"text": "Cryptocurrency",
					"isLast": false
				},
				{
					"path": "Cryptocurrency/Ethereum",
					"text": "Ethereum",
					"isLast": true
				}
			],
			"title": "ETH Gas Price",
			"version": "v1.0.1",
			"author": "Biran Yucel",
			"authors": [
				{
					"name": "Biran",
					"githubUsername": "biranyucel",
					"imageURL": "https://avatars.githubusercontent.com/u/39130180?v=4",
					"bio": "Data Science | Machine Learning\r\nPython",
					"primary": true
				}
			],
			"desc": "ETH GasPrice forecast system.",
			"imageURL": "https://i.imgur.com/f1hPKO2.png",
			"dependencies": null,
			"aboutURL": "https://www.gasnow.org/",
			"lastUpdated": "2021-03-08T15:21:46.302797Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "Cryptocurrency/Ethereum/ethminer.5s.py",
					"filename": "ethminer.5s.py",
					"content": "#!/usr/local/bin/python3\n\n# \u003cbitbar.title\u003eEthMiner\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev1.0\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eC√©dric Foellmi\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003eonekiloparsec\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eStart and stop the ethminer.\u003c/bitbar.desc\u003e\n# \u003cbitbar.image\u003ehttps://i.imgur.com/DeWnKKf.png\u003c/bitbar.image\u003e\n# \u003cbitbar.dependencies\u003epython3,psutil,ethminer\u003c/bitbar.dependencies\u003e\n\n##############################################################################\n### SETUP ###\n# 0. Install the ethminer executable.\n#    For instance from https://github.com/ArtSabintsev/Ethminer-for-macOS\n#\n# 1. Create a shell script with the full ethminer command, using the executable above.\n#    For instance 'ethmining.sh', with the ethminer executable inside \"~/bin\":\n#    Note also the last part '\u003e\u0026 /tmp/ethmining.log':\n#\n# #!/bin/bash\n# /Users/\u003cYourName\u003e/bin/ethminer -G -t 2 -v 2 -S \u003cPoolAddress\u003e -u \u003cUserName\u003e \u003e\u0026 /tmp/ethmining.log\n#\n# 2. Make the script executable: chmod 755 ethmining.sh\n#\n# 3. Fill the MINING_SCRIPT_FULL_PATH variable below. It is important to provide\n# the full path of the script. No ~, no ./... etc.\n#\n# 4. Make sure MINING_LOG_FULL_PATH points to the same file as the last part of the script above.\n#\n# 5. Consider a small tip, thanks! :-) ETH: 0x1Dd0e805a5DC21e40B28D4763c6Af790cd6bcd33\n##############################################################################\n\nimport os\n\n##############################################################################\n# Customize your variables here\nMINING_SCRIPT_NAME = \"ethmining.sh\"\nMINING_SCRIPT_FULL_PATH = \"{}/bin/{}\".format(os.environ['HOME'], MINING_SCRIPT_NAME)\nMINING_LOG_FULL_PATH = \"/tmp/ethmining.log\"\nMINING_LOG_LINES_NUMBER = \"10\" # MUST BE LARGER THAN 0\n##############################################################################\n\nimport re\nimport psutil\nimport subprocess\n\nstarted = 'ethminer' in [ p.name() for p in psutil.process_iter(attrs=['name']) ]\nansi_escape = re.compile(r'\\x1B\\[[0-?]*[ -/]*[@-~]')\n\nprint(\"| templateImage=iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAAlwSFlzAAALEwAACxMBAJqcGAAAAVlpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IlhNUCBDb3JlIDUuNC4wIj4KICAgPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4KICAgICAgPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIKICAgICAgICAgICAgeG1sbnM6dGlmZj0iaHR0cDovL25zLmFkb2JlLmNvbS90aWZmLzEuMC8iPgogICAgICAgICA8dGlmZjpPcmllbnRhdGlvbj4xPC90aWZmOk9yaWVudGF0aW9uPgogICAgICA8L3JkZjpEZXNjcmlwdGlvbj4KICAgPC9yZGY6UkRGPgo8L3g6eG1wbWV0YT4KTMInWQAAAoRJREFUOBF9Uk2IUlEUfvf9+JMS5K7nyORALRqwYdyW4+CiWUSLSNsEUQPKgERTIRQ2WplTMs2ihWDtpJUStRNy43YCZ5EIFUQOikoIo4HO0/fXOa+eORkdeLx7zz3fd8/3nUtR/4h4PE5jOhKJzITDYSeu9RyuJ4Od3OjrUqmEBArLGV/UG1+OwXq5Wq0S/fy/f7hJI02ltpcePU6oS95l1eVyXUSQ2+3m/gZrrU4kCRBIuBclYZvQNCXLsCVkK5PJcOVyWYSjQ50cIoAi7fZEMnmLMxgXxdFIIoSIqqqezGazUSSGLg7JHhP4/X4mFAqJ0AGvyMpDRZYphmHwnFUUhToQhHs+n+8UdoG1SIYxJvi1pSiLxfrUbDYf7XQ6YqVSoev1OgEClMX1+/0trMvn86perzGhcel0Wo5Go5f7g0Fid7c8go9tt5vkR69H9bpdagRBM8zpE3NzzWajUfZ6vWytVlN0PQoyQqK382HnI3ThMplMlMFgkPb3u+AhYQVBMLZbrc8Oh+M71sKoNYwmIRaLaS15PJ691Rur9wf9flgUxR54wILlLE3TB1ar9e78/Pxtp9P5FQn00EeCfyQhT5Kb7ziWa+7tfXv1vli8CZMw8Tz/HHy4AtM4Y7PZLhQKhSHWIkY3Uc3lcuiHesRsuiYMhdBx3l4Mra0VZ2Zn38AE3oqSdAfA1xGM+rEWvj9TCAQCMj6W9fX1LmPgfOCBbSQMXzOE5GRFtlstlksAboAMA+jXHhsSTEUwGNSe6+bmsxTIUc+e86gLiwsvfxfqpk/hxgnQqftCPdjY+HR+ZaUFhxoQxq1LHtdPJWBkuh/UUBCu2nneD9US6gYCbXRjNCx+ArWREQKYptF1AAAAAElFTkSuQmCC\")\nprint(\"---\")\n\nif started is True:\n    print(\"Stop ethminer | terminal=false bash=/usr/bin/killall param1=ethminer\")\nelse:\n    print(\"Start ethminer | terminal=false bash=\\\"{}\\\"\".format(MINING_SCRIPT_FULL_PATH))\n\nprint(\"---\")\n\nif started is True:\n    print(\"Running !\")\n\nproc = subprocess.run(['tail', '-'+MINING_LOG_LINES_NUMBER, MINING_LOG_FULL_PATH], stdout=subprocess.PIPE, stderr=subprocess.PIPE)\nif proc.returncode == 0:\n    if not started:\n        print(\"Last log lines of the previous session:\")\n\n    for line in proc.stdout.split(b'\\n'):\n        s = line.replace(b'|', b' ').replace(b'\\xe2\\x84\\xb9', b' ')\n        print(s.decode('utf8'))\n"
				}
			],
			"path": "Cryptocurrency/Ethereum/ethminer.5s.py",
			"filename": "ethminer.5s.py",
			"dir": "Cryptocurrency/Ethereum",
			"docsPlugin": "Cryptocurrency/Ethereum/ethminer.5s.py.html",
			"docsCategory": "Cryptocurrency/Ethereum.html",
			"pathSegments": [
				"Cryptocurrency",
				"Ethereum"
			],
			"categoryPathSegments": [
				{
					"path": "Cryptocurrency",
					"text": "Cryptocurrency",
					"isLast": false
				},
				{
					"path": "Cryptocurrency/Ethereum",
					"text": "Ethereum",
					"isLast": true
				}
			],
			"title": "EthMiner",
			"version": "v1.0",
			"author": "C√©dric Foellmi",
			"authors": [
				{
					"name": "C√©dric Foellmi",
					"githubUsername": "onekiloparsec",
					"imageURL": "https://avatars.githubusercontent.com/u/226224?v=4",
					"bio": "   ... ‚Üí Ph.D: astrophysicist ‚Üí Chile:¬†researcher ‚Üí¬†France: scientist ‚Üí !¬†‚Üí developer ‚Üí¬†french ‚Üí¬†(GVA) ‚Üí Grenoble ‚Üí head of software ‚Üí freelance -\u003e Tech Lead",
					"primary": true
				}
			],
			"desc": "Start and stop the ethminer.",
			"imageURL": "https://i.imgur.com/DeWnKKf.png",
			"dependencies": [
				"python3",
				"psutil",
				"ethminer"
			],
			"aboutURL": "",
			"lastUpdated": "2021-03-08T15:21:46.231621Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "Cryptocurrency/Ethereum/ethbtc.sh",
					"filename": "ethbtc.sh",
					"content": "#!/bin/bash\n\n# Shows last Ethereum price on Bitfinex in BTC.\n#\n# \u003cbitbar.title\u003eEthereum BFX price\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003e0.1\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eCorvin Wimmer\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003ecorv89\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eShows last Ethereum price on Bitfinex in BTC.\u003c/bitbar.desc\u003e\n# \u003cbitbar.image\u003ehttp://i.imgur.com/w6D7HHe.png\u003c/bitbar.image\u003e\n\necho -n \"ETH \"; curl -s \"https://api.bitfinex.com/v1/pubticker/ETHBTC\" | grep -Eo 'last_price\":\"[0-9]+\\.[0-9]+' | sed 's/last_price\":\"//'"
				}
			],
			"path": "Cryptocurrency/Ethereum/ethbtc.sh",
			"filename": "ethbtc.sh",
			"dir": "Cryptocurrency/Ethereum",
			"docsPlugin": "Cryptocurrency/Ethereum/ethbtc.sh.html",
			"docsCategory": "Cryptocurrency/Ethereum.html",
			"pathSegments": [
				"Cryptocurrency",
				"Ethereum"
			],
			"categoryPathSegments": [
				{
					"path": "Cryptocurrency",
					"text": "Cryptocurrency",
					"isLast": false
				},
				{
					"path": "Cryptocurrency/Ethereum",
					"text": "Ethereum",
					"isLast": true
				}
			],
			"title": "Ethereum BFX price",
			"version": "0.1",
			"author": "Corvin Wimmer",
			"authors": [
				{
					"name": "Corvin Wimmer",
					"githubUsername": "corv89",
					"imageURL": "https://avatars.githubusercontent.com/u/7198687?v=4",
					"bio": "",
					"primary": true
				}
			],
			"desc": "Shows last Ethereum price on Bitfinex in BTC.",
			"imageURL": "http://i.imgur.com/w6D7HHe.png",
			"dependencies": null,
			"aboutURL": "",
			"lastUpdated": "2021-03-08T15:21:46.193158Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "Cryptocurrency/Ethereum/eth-usd.1s.py",
					"filename": "eth-usd.1s.py",
					"content": "#!/usr/bin/env python\n# coding=utf-8\n#\n# \u003cbitbar.title\u003eEthereum USD Tracker\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev2.0\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003emgjo5899\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003emgjo5899\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eIt tracks Ethereum price in USD\u003c/bitbar.desc\u003e\n# \u003cbitbar.image\u003ehttps://i.imgur.com/YEn5Cnk.png\u003c/bitbar.image\u003e\n# \u003cbitbar.dependencies\u003epython\u003c/bitbar.dependencies\u003e\n#\n# by mgjo5899\n\ntry:\n  import requests\nexcept ImportError:\n  print(\"Need to install requests module\")\n  print(\"Type the following:\")\n  print(\"pip install requests\")\n\nimport json\n\nurl = 'https://www.worldcoinindex.com/apiservice/json?key=zQ5ePYHCeRw211NEeQ8DrZMbI'\nr = requests.get(url)\nj = json.loads(r.text)\n\nfor market in j['Markets']:\n  if 'ethereum' == market['Name'].lower():\n    price = market['Price_usd']\n\nprice = \"%.2f\" % price\n\nprint(str(price) + \" | image=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\")\n"
				}
			],
			"path": "Cryptocurrency/Ethereum/eth-usd.1s.py",
			"filename": "eth-usd.1s.py",
			"dir": "Cryptocurrency/Ethereum",
			"docsPlugin": "Cryptocurrency/Ethereum/eth-usd.1s.py.html",
			"docsCategory": "Cryptocurrency/Ethereum.html",
			"pathSegments": [
				"Cryptocurrency",
				"Ethereum"
			],
			"categoryPathSegments": [
				{
					"path": "Cryptocurrency",
					"text": "Cryptocurrency",
					"isLast": false
				},
				{
					"path": "Cryptocurrency/Ethereum",
					"text": "Ethereum",
					"isLast": true
				}
			],
			"title": "Ethereum USD Tracker",
			"version": "v2.0",
			"author": "mgjo5899",
			"authors": [
				{
					"name": "Joseph",
					"githubUsername": "mgjo5899",
					"imageURL": "https://avatars.githubusercontent.com/u/17048946?v=4",
					"bio": "Listening to Yiruma songs helps me to focus when coding :)",
					"primary": true
				}
			],
			"desc": "It tracks Ethereum price in USD",
			"imageURL": "https://i.imgur.com/YEn5Cnk.png",
			"dependencies": [
				"python"
			],
			"aboutURL": "",
			"lastUpdated": "2021-03-08T15:21:46.079314Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "Cryptocurrency/Ethereum/ethusd.1m.sh",
					"filename": "ethusd.1m.sh",
					"content": "#!/bin/bash\n\n# Shows last Ethereum price in USD.\n#\n# \u003cbitbar.title\u003eEthereum last price\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003e0.1B\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eNikita Zhavoronkov\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003eHar01d\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eShows last Ethereum price in USD.\u003c/bitbar.desc\u003e\n# \u003cbitbar.image\u003ehttp://i.imgur.com/lF2AA7o.png\u003c/bitbar.image\u003e\n#\n# by Nikita Zhavoronkov\n# Based on Coinbase bitbar plugin by Mat Ryer\n\necho -n \"ùöµ \"; curl -s \"https://api.coinbase.com/v2/prices/ETH-USD/spot\" | egrep -o '\"amount\":\"[0-9]+(\\.)?' | sed 's/\"amount\"://'  | sed 's:^.\\(.*\\).$:\\1:'"
				}
			],
			"path": "Cryptocurrency/Ethereum/ethusd.1m.sh",
			"filename": "ethusd.1m.sh",
			"dir": "Cryptocurrency/Ethereum",
			"docsPlugin": "Cryptocurrency/Ethereum/ethusd.1m.sh.html",
			"docsCategory": "Cryptocurrency/Ethereum.html",
			"pathSegments": [
				"Cryptocurrency",
				"Ethereum"
			],
			"categoryPathSegments": [
				{
					"path": "Cryptocurrency",
					"text": "Cryptocurrency",
					"isLast": false
				},
				{
					"path": "Cryptocurrency/Ethereum",
					"text": "Ethereum",
					"isLast": true
				}
			],
			"title": "Ethereum last price",
			"version": "0.1B",
			"author": "Nikita Zhavoronkov",
			"authors": [
				{
					"name": "Nikita Zhavoronkov",
					"githubUsername": "Har01d",
					"imageURL": "https://avatars.githubusercontent.com/u/14060856?v=4",
					"bio": "Russian Bitcoin and blockchain enthusiast. Information security and AML/CFT specialist. Lead developer @Blockchair. Lecturer at NRNU MEPhI.",
					"primary": true
				}
			],
			"desc": "Shows last Ethereum price in USD.",
			"imageURL": "http://i.imgur.com/lF2AA7o.png",
			"dependencies": null,
			"aboutURL": "",
			"lastUpdated": "2021-03-08T15:21:46.292419Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "Cryptocurrency/Ethereum/eth-gbp.py",
					"filename": "eth-gbp.py",
					"content": "#!/usr/bin/python\n# coding=utf-8\n#\n# \u003cbitbar.title\u003eEtherium Ticker (¬£1GBP)\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev1.0\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eimpshum\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003eimpshum\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eDisplays current Etherium price for ¬£1 from Coinmarketcap\u003c/bitbar.desc\u003e\n# \u003cbitbar.image\u003ehttps://i.imgur.com/3NK6mXt.jpg\u003c/bitbar.image\u003e\n#\n# by impshum\n\nfrom urllib import urlopen\nurl = urlopen('https://coinmarketcap-nexuist.rhcloud.com/api/eth').read()\n\nimport json\nresult = json.loads(url)\n\ndef flow():\n    if result ['change'] \u003e '0':\n        print (' ¬£%.4f | image=iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QAyQACAALwzISXAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH4AQHACkSBTjB+AAAALNJREFUOMvVk70NAjEMhb87WYiGBZAQU7ABNSVSWpZgEEagsJDoKBELUCEKFuBuCKTw0xyQC0lICe5i+/k9/wT+3opUUJQhcAUqa8I5ZQT4tANwioGTCkQZA9vmOQE2oUJFhL0DXBz33RpKUfCLfLTQJMx9IlEWuQr6QB3prGtNS1lwiMvEYo7ekNsKRBkB+y+rH1hDFVOwy7ids+gbVzrsM6CXeYDTF85xroB1ZoHb73ymB5RhJkpZTihGAAAAAElFTkSuQmCC color=#000000'% float(result['price']['gbp']))\n    else:\n        print (' ¬£%.4f | image=iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QABACnAADQ9FZaAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH4AQHACQ1FZwK3gAAAMRJREFUOMvNkjEKAjEQRZ+jKNjYKh5AbzCdjVcQj+BFPIKlp7EMeAJrUbASQVCEr80uG9cNbqe/Cgn/5WUI/DqNfBHM+kCzbs+lPUAr2pwBq5qABbB+M8gszkDvS/kOdAG5VBgEM4ApsP0CGLukjxlEoA0wSZR3Lo0qhxhZDIBDAmDA0wsBLD51CZeOwLKivHbprZx6AkAHuEXbD5fawYwywMqAzOKeDTTPvKqcTGZBMLsGs0utn5gADYEHcKp9e9ni//MCDtNCE3qjsIwAAAAASUVORK5CYII= color=#000000'% float(result['price']['gbp']))\n\nflow()\n"
				}
			],
			"path": "Cryptocurrency/Ethereum/eth-gbp.py",
			"filename": "eth-gbp.py",
			"dir": "Cryptocurrency/Ethereum",
			"docsPlugin": "Cryptocurrency/Ethereum/eth-gbp.py.html",
			"docsCategory": "Cryptocurrency/Ethereum.html",
			"pathSegments": [
				"Cryptocurrency",
				"Ethereum"
			],
			"categoryPathSegments": [
				{
					"path": "Cryptocurrency",
					"text": "Cryptocurrency",
					"isLast": false
				},
				{
					"path": "Cryptocurrency/Ethereum",
					"text": "Ethereum",
					"isLast": true
				}
			],
			"title": "Etherium Ticker (¬£1GBP)",
			"version": "v1.0",
			"author": "impshum",
			"authors": [
				{
					"name": "impshum",
					"githubUsername": "impshum",
					"imageURL": "https://avatars.githubusercontent.com/u/3229127?v=4",
					"bio": "If it wasn't for those damn whelks!",
					"primary": true
				}
			],
			"desc": "Displays current Etherium price for ¬£1 from Coinmarketcap",
			"imageURL": "https://i.imgur.com/3NK6mXt.jpg",
			"dependencies": null,
			"aboutURL": "",
			"lastUpdated": "2021-03-08T15:21:45.973647Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "Cryptocurrency/Ethereum/eth_wallet_balances.1m.py",
					"filename": "eth_wallet_balances.1m.py",
					"content": "#!/usr/local/homebrew/bin/python3\n\"\"\"Loads Ethereum wallet address (configured below) and all tokens associated with\n   each address. Then displays current $USD value in the bitbar title, with a drop-down\n   showing each total value for owned ETH and each token.\n\"\"\"\nimport time\nfrom collections import defaultdict\n\nimport requests\n\n#\n# Enter your wallets here:\n#\nWALLET_ADDRESSES = [\n    '0x88752Bd600928b902EDAd9afFaaFCE1367Ae3461',\n    '0x418091020F2A909479C4058E32BE08464A45DA8A',\n]\n\n# Tickers to display at the bottom:\nTICKERS = ['BTC', 'ETH', 'LTC']\n\n# \u003cbitbar.title\u003eEtherum Wallet (and token) Balances\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev1.0\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eCharlie Schluting\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003emanos\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eDisplays a $USD total across all configured wallets, with drop-down showing the value of your ETH and all tokens held.\u003c/bitbar.desc\u003e\n# \u003cbitbar.image\u003ehttps://schluting.com/temp/bitbar-eth-bal.png\u003c/bitbar.image\u003e\n# \u003cbitbar.dependencies\u003epython3\u003c/bitbar.dependencies\u003e\n# \u003cbitbar.abouturl\u003ehttps://github.com/manos/bitbar_ethereum_wallet_balances\u003c/bitbar.abouturl\u003e\n\nETHEXPLORER_API_KEY = 'freekey'\nEE_URL = 'http://api.ethplorer.io/'\nEE_QS = '?apiKey=%s' % ETHEXPLORER_API_KEY\nCMC_LISTINGS = []\n\ndef get_json(url):\n    \"\"\"Fetches URL and returns JSON. \"\"\"\n    res = requests.get(url)\n    res.raise_for_status()\n    return res.json()\n\ndef get_ticker_price(ticker):\n    \"\"\"Returns current price (from coinmarketcap.com) for given symbol. \"\"\"\n    ticker_id = [x['id'] for x in CMC_LISTINGS['data'] if x['symbol'] == ticker][0]\n\n    resp = get_json('https://api.coinmarketcap.com/v2/ticker/%s/' % ticker_id)\n    return resp['data']['quotes']['USD']['price']\n\n\nif __name__ == '__main__':\n    eth_sum = 0\n    my_tokens = defaultdict(lambda: 0)\n\n    # Load up coinmarketcap.com listings:\n    CMC_LISTINGS = get_json('https://api.coinmarketcap.com/v2/listings/')\n\n    for addr in WALLET_ADDRESSES:\n        resp = get_json(EE_URL + 'getAddressInfo/' + addr + EE_QS)\n\n        eth_sum += resp.get('ETH', {}).get('balance', 0)\n\n        if 'tokens' in resp and resp['tokens']:\n            for token in resp['tokens']:\n                if not token['balance']:\n                    continue\n                if int(token['tokenInfo']['decimals']):\n                    # update the balance with proper decimal shift:\n                    token['balance'] = token['balance'] * 10**-int(token['tokenInfo']['decimals'])\n                # convert balance to USD now:\n                if token['tokenInfo']['price']:\n                    token_price = float(token['tokenInfo']['price']['rate'])\n                else:\n                    token_price = 0\n                my_tokens[token['tokenInfo']['symbol']] = defaultdict(float)\n                my_tokens[token['tokenInfo']['symbol']]['price'] = token_price\n                my_tokens[token['tokenInfo']['symbol']]['count'] += float(token['balance'])\n                my_tokens[token['tokenInfo']['symbol']]['usd'] += float(token['balance']) * token_price\n        time.sleep(1)\n\n    eth_price = get_ticker_price('ETH')\n    my_eth_bal = float(eth_price) * float(eth_sum)\n\n    # total $USD amount:\n    total_bal = sum(x['usd'] for x in my_tokens.values()) + my_eth_bal\n    print(\"%.2f\" % total_bal)\n    print('---')\n    print('Balances:')\n    print(\"ETH %.2f|color=green\" % my_eth_bal)\n    print('-- Tokens: %f|color=black' % eth_sum)\n    print('-- Price: %f|color=black' % eth_price)\n\n    for token in sorted((x for x in my_tokens.items()), key=lambda x: x[1]['usd'], reverse=True):\n        print(token[0], \"%.2f|color=green\" % token[1]['usd'])\n        print('-- Tokens: %f|color=black' % token[1]['count'])\n        print('-- Price: %f|color=black' % token[1]['price'])\n\n    # links to wallet addresses on etherscan.io:\n    print('Wallets:')\n    for wallet in WALLET_ADDRESSES:\n        print(\"Etherscan: %s\" % wallet[:6] + \"|href=https://etherscan.io/address/\" + wallet + \" color=blue\")\n\n    print(\"Prices:\")\n    for ticker in TICKERS:\n        print(\"%s: %s|color=green\" % (ticker, str(get_ticker_price(ticker))))\n"
				}
			],
			"path": "Cryptocurrency/Ethereum/eth_wallet_balances.1m.py",
			"filename": "eth_wallet_balances.1m.py",
			"dir": "Cryptocurrency/Ethereum",
			"docsPlugin": "Cryptocurrency/Ethereum/eth_wallet_balances.1m.py.html",
			"docsCategory": "Cryptocurrency/Ethereum.html",
			"pathSegments": [
				"Cryptocurrency",
				"Ethereum"
			],
			"categoryPathSegments": [
				{
					"path": "Cryptocurrency",
					"text": "Cryptocurrency",
					"isLast": false
				},
				{
					"path": "Cryptocurrency/Ethereum",
					"text": "Ethereum",
					"isLast": true
				}
			],
			"title": "Etherum Wallet (and token) Balances",
			"version": "v1.0",
			"author": "Charlie Schluting",
			"authors": [
				{
					"name": "Charlie Schluting",
					"githubUsername": "manos",
					"imageURL": "https://avatars.githubusercontent.com/u/132518?v=4",
					"bio": "",
					"primary": true
				}
			],
			"desc": "Displays a $USD total across all configured wallets, with drop-down showing the value of your ETH and all tokens held.",
			"imageURL": "https://schluting.com/temp/bitbar-eth-bal.png",
			"dependencies": [
				"python3"
			],
			"aboutURL": "https://github.com/manos/bitbar_ethereum_wallet_balances",
			"lastUpdated": "2021-03-08T15:21:46.186415Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "Cryptocurrency/Ethereum/ether-eur-kraken.30s.sh",
					"filename": "ether-eur-kraken.30s.sh",
					"content": "#!/bin/bash\n\n# \u003cbitbar.title\u003eKraken.com ETHEUR last price\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev1.0\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eG.G.\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003eggrelet\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eGives the last price of ether to euro from Kraken.com\u003c/bitbar.desc\u003e\n# \u003cbitbar.image\u003ehttps://i.imgur.com/iGX2yjR.png\u003c/bitbar.image\u003e\n# \u003cbitbar.dependencies\u003ebash\u003c/bitbar.dependencies\u003e\n\nval=$(curl -s \"https://api.kraken.com/0/public/Ticker?pair=ETHEUR\" | tr -d '{}\"[]' | tr ':,' '\\n' | grep -A1 \"^c$\" | tail -1)\n\necho \"$(printf \"ùöµ %.3f \\n\" \"$val\") | size=13\"\necho \"---\"\necho \"Kraken.com | href=\\\"https://www.kraken.com/\\\"\"\n"
				}
			],
			"path": "Cryptocurrency/Ethereum/ether-eur-kraken.30s.sh",
			"filename": "ether-eur-kraken.30s.sh",
			"dir": "Cryptocurrency/Ethereum",
			"docsPlugin": "Cryptocurrency/Ethereum/ether-eur-kraken.30s.sh.html",
			"docsCategory": "Cryptocurrency/Ethereum.html",
			"pathSegments": [
				"Cryptocurrency",
				"Ethereum"
			],
			"categoryPathSegments": [
				{
					"path": "Cryptocurrency",
					"text": "Cryptocurrency",
					"isLast": false
				},
				{
					"path": "Cryptocurrency/Ethereum",
					"text": "Ethereum",
					"isLast": true
				}
			],
			"title": "Kraken.com ETHEUR last price",
			"version": "v1.0",
			"author": "G.G.",
			"authors": [
				{
					"name": "G.G.",
					"githubUsername": "ggrelet",
					"imageURL": "https://avatars.githubusercontent.com/u/10114131?v=4",
					"bio": "",
					"primary": true
				}
			],
			"desc": "Gives the last price of ether to euro from Kraken.com",
			"imageURL": "https://i.imgur.com/iGX2yjR.png",
			"dependencies": [
				"bash"
			],
			"aboutURL": "",
			"lastUpdated": "2021-03-08T15:21:46.217457Z",
			"vars": null
		}
	]
}