{
	"plugins": [
		{
			"files": [
				{
					"path": "Cryptocurrency/btcmarkets.10s.sh",
					"filename": "btcmarkets.10s.sh",
					"content": "#!/bin/bash\n#\n# \u003cbitbar.title\u003eBTC Markets ETH \u0026 BTC Ticker\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev1.0\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eFred Wu\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003efredwu\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eDisplays the latest Etherium and Bitcoin prices in AUD and their 24h trade volumes from BTC Markets.\u003c/bitbar.desc\u003e\n# \u003cbitbar.image\u003ehttp://i.imgur.com/7UwilDM.png\u003c/bitbar.image\u003e\n\necho -n \"ETH \"; curl -s https://api.btcmarkets.net/market/ETH/AUD/tick | \\\n  grep -Eo 'lastPrice\":[0-9\\.]+' | sed 's/lastPrice\"://' | tr -d '\\n'; \\\n  echo -n \" BTC \"; curl -s https://api.btcmarkets.net/market/BTC/AUD/tick | \\\n  grep -Eo 'lastPrice\":[0-9\\.]+' | sed 's/lastPrice\"://'\n\necho '---'\necho 'Volume 24h'\n\nfor COIN_TYPE in 'ETH' 'BTC'\ndo\n  echo -n \"$COIN_TYPE \"; \\\n    curl -s \"https://api.btcmarkets.net/market/$COIN_TYPE/AUD/tick\" | \\\n    grep -Eo 'volume24h\":[0-9\\.]+' | sed 's/volume24h\"://' | tr -d '\\n'; \\\n    echo '| href=https://www.btcmarkets.net/'\ndone\n"
				}
			],
			"path": "Cryptocurrency/btcmarkets.10s.sh",
			"filename": "btcmarkets.10s.sh",
			"dir": "Cryptocurrency",
			"docsPlugin": "Cryptocurrency/btcmarkets.10s.sh.html",
			"docsCategory": "Cryptocurrency.html",
			"pathSegments": [
				"Cryptocurrency"
			],
			"categoryPathSegments": [
				{
					"path": "Cryptocurrency",
					"text": "Cryptocurrency",
					"isLast": true
				}
			],
			"title": "BTC Markets ETH \u0026 BTC Ticker",
			"version": "v1.0",
			"author": "Fred Wu",
			"authors": [
				{
					"name": "Fred Wu",
					"githubUsername": "fredwu",
					"imageURL": "https://avatars.githubusercontent.com/u/31945?v=4",
					"bio": "Ruby, Rails, Elixir, Phoenix, JS, UX, Design, Photography, Gadgets. Creativity + Engineering, Art + Science.",
					"primary": true
				}
			],
			"desc": "Displays the latest Etherium and Bitcoin prices in AUD and their 24h trade volumes from BTC Markets.",
			"imageURL": "http://i.imgur.com/7UwilDM.png",
			"dependencies": null,
			"aboutURL": "",
			"lastUpdated": "2021-03-08T15:21:47.268894Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "Cryptocurrency/Bitcoin/tr-markets.1m.py",
					"filename": "tr-markets.1m.py",
					"content": "#!/usr/bin/env PYTHONIOENCODING=UTF-8 /usr/local/bin/python3\n# \u003cbitbar.title\u003eBTC Ticker for TR Markets\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev1.0\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eErhan BÜTE\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003eerhan\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eTC Ticker for TR Markets(btcturk.com, koinim.com, paribu.com)\u003c/bitbar.desc\u003e\n# \u003cbitbar.image\u003ehttps://i.imgur.com/MUj8Bkb.png\u003c/bitbar.image\u003e\n# \u003cbitbar.dependencies\u003epython3\u003c/bitbar.dependencies\u003e\n\nimport json\nimport http.client\n\n\ndef get_btcturk_price():\n    try:\n        conn = http.client.HTTPSConnection(\"www.btcturk.com\")\n        conn.request(\"GET\", \"/api/ticker\")\n        res = conn.getresponse()\n        data = json.loads(res.read().decode(\"utf-8\"))\n        for item in data:\n            if item[\"pair\"] == \"BTCTRY\":\n                return item[\"ask\"]\n    except:\n        return 0\n    return 0\n\n\ndef get_koinim_price():\n    try:\n        conn = http.client.HTTPSConnection(\"koinim.com\")\n        conn.request(\"GET\", \"/ticker/\")\n        res = conn.getresponse()\n        data = json.loads(res.read().decode(\"utf-8\"))\n        return data[\"ask\"]\n    except:\n        return 0\n\ndef get_paribu_price():\n    try:\n        conn = http.client.HTTPSConnection(\"www.paribu.com\")\n        conn.request(\"GET\", \"/ticker\")\n        res = conn.getresponse()\n        data = json.loads(res.read().decode(\"utf-8\"))\n        return data[\"BTC_TL\"][\"last\"]\n    except:\n        return 0\n\n\nprint(\"BTCTURK : \" + \"{0:.2f}\".format(get_btcturk_price()) +\" TRY\")\nprint(\"---\")\nprint(\"KOINIM : \" + \"{0:.2f}\".format(get_koinim_price()) +\" TRY\")\nprint(\"PARIBU : \" + \"{0:.2f}\".format(get_paribu_price()) +\" TRY\")\n"
				}
			],
			"path": "Cryptocurrency/Bitcoin/tr-markets.1m.py",
			"filename": "tr-markets.1m.py",
			"dir": "Cryptocurrency/Bitcoin",
			"docsPlugin": "Cryptocurrency/Bitcoin/tr-markets.1m.py.html",
			"docsCategory": "Cryptocurrency/Bitcoin.html",
			"pathSegments": [
				"Cryptocurrency",
				"Bitcoin"
			],
			"categoryPathSegments": [
				{
					"path": "Cryptocurrency",
					"text": "Cryptocurrency",
					"isLast": false
				},
				{
					"path": "Cryptocurrency/Bitcoin",
					"text": "Bitcoin",
					"isLast": true
				}
			],
			"title": "BTC Ticker for TR Markets",
			"version": "v1.0",
			"author": "Erhan BÜTE",
			"authors": [
				{
					"name": "Erhan BÜTE",
					"githubUsername": "erhan",
					"imageURL": "https://avatars.githubusercontent.com/u/3872888?v=4",
					"bio": "Python - Flask",
					"primary": true
				}
			],
			"desc": "TC Ticker for TR Markets(btcturk.com, koinim.com, paribu.com)",
			"imageURL": "https://i.imgur.com/MUj8Bkb.png",
			"dependencies": [
				"python3"
			],
			"aboutURL": "",
			"lastUpdated": "2021-03-08T15:21:45.575873Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "Cryptocurrency/binance-ticker.6s.py",
					"filename": "binance-ticker.6s.py",
					"content": "#!/usr/bin/python\n# coding=utf-8\n\n# \u003cbitbar.title\u003eBinance Price Ticker\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev1.0\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eGabriel Age\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003eagezao\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eDisplays Binance's ticker price for configured coin pairs\u003c/bitbar.desc\u003e\n# \u003cbitbar.image\u003ehttps://i.imgur.com/zJsoTl8.jpg\u003c/bitbar.image\u003e\n# \u003cbitbar.dependencies\u003epython\u003c/bitbar.dependencies\u003e\n\nimport json\nfrom urllib import urlopen\n\nbitcoin_icon='iVBORw0KGgoAAAANSUhEUgAAACQAAAAkCAQAAABLCVATAAAACXBIWXMAABYlAAAWJQFJUiTwAAABY0lEQVRIx2P4z0AdyEBzg1DAdIYfQJgCZHmCWdsYMAFRBs0BC2UAWT5g1p6hbZAggwIcrgALVQNZSWDWAQY24g3qwRtJ/xgeMqxkCGJgotQgGLzAoEUdg/4zvGQQIxzYLAyODF/gQv0MlgwWDK4MOQxbgV5DKG0nLtZ2wIUykII2EMmoU8QZtAWrQQwMB+HiDygzaDNc/CQlBskwfIKLN5JrkAxDFsMTuOh9BiFSDXoHDI2HDB9RlJ1kECc2r20hkI5OMXhQxyAQzCTNoDJgaAgAvaLLEMkwn+EbkuLvDBLkR78yUoD/Z0gn3yAGhnwk5V2UGBRGLYNmICkvIGzQLqwG8TA0oJQAVvgMymcoYehg+AUXWgoM0kygWC/DbpQ4+89wjYERt0FiRNeNX4GlFJ505EykMacZDPGn7HwCBnxiOMcwjcGJcOEvzqADh2vBQk1AVhaYdZCBc7TKpqJBA9ZiAwDMH49EXcmY2QAAAABJRU5ErkJggg=='\n\n#List here the symbols you want to keep track:\ncoin_symbols=['BNBBTC', 'ETHBTC']\n#To get a list of available symbols check all the \"symbol\" attributes here:\n#https://api.binance.com/api/v1/ticker/24hr\n\nfor coin_symbol in coin_symbols:\n    url=\"https://api.binance.com/api/v1/ticker/24hr?symbol={}\".format(coin_symbol)\n    payload=urlopen(url)\n\n    data = json.load(payload)\n\n    last_price=data['lastPrice']\n    price_variation=str(data['priceChangePercent']) + '%'\n\n    print('{} - {} : {} | templateImage={}'.format(coin_symbol, last_price, price_variation, bitcoin_icon))\n"
				}
			],
			"path": "Cryptocurrency/binance-ticker.6s.py",
			"filename": "binance-ticker.6s.py",
			"dir": "Cryptocurrency",
			"docsPlugin": "Cryptocurrency/binance-ticker.6s.py.html",
			"docsCategory": "Cryptocurrency.html",
			"pathSegments": [
				"Cryptocurrency"
			],
			"categoryPathSegments": [
				{
					"path": "Cryptocurrency",
					"text": "Cryptocurrency",
					"isLast": true
				}
			],
			"title": "Binance Price Ticker",
			"version": "v1.0",
			"author": "Gabriel Age",
			"authors": [
				{
					"name": "Gabriel Age",
					"githubUsername": "agezao",
					"imageURL": "https://avatars.githubusercontent.com/u/7091570?v=4",
					"bio": "I'm a passionated Web Developer concerned about making the web a great place.",
					"primary": true
				}
			],
			"desc": "Displays Binance's ticker price for configured coin pairs",
			"imageURL": "https://i.imgur.com/zJsoTl8.jpg",
			"dependencies": [
				"python"
			],
			"aboutURL": "",
			"lastUpdated": "2021-03-08T15:21:47.11272Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "Cryptocurrency/Bitcoin/bitx.co/buy-and-sell.1m.py",
					"filename": "buy-and-sell.1m.py",
					"content": "#!/usr/bin/env python\n# \u003cbitbar.title\u003eBitX Buy and Sell\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev1.0\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eKonrad Blum\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003ekblum\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eShows latest buy and sell values (in ZAR) for Bitcoins on the BitX exchange.\u003c/bitbar.desc\u003e\n# \u003cbitbar.image\u003ehttps://cloud.githubusercontent.com/assets/868608/24828465/e257fc20-1c5d-11e7-9641-5abed32bcb9b.png\u003c/bitbar.image\u003e\n# \u003cbitbar.dependencies\u003epython\u003c/bitbar.dependencies\u003e\n\n\nimport urllib2\nimport json\nfrom datetime import datetime\n\n\ndef run():\n    base_api_url = 'https://api.mybitx.com'\n\n    currency_pair = 'XBTZAR'\n    url = '{0}/api/1/ticker?pair={1}'.format(base_api_url, currency_pair)\n    \n    response = urllib2.urlopen(url).read()\n    data = json.loads(response)\n\n    timestamp = datetime.fromtimestamp(int(data['timestamp'])/1000.0)\n\n    # lines below will cycle through in menu bar\n    print('Buy: R{0:,}'.format(float(data['ask'])))\n    print('Sell: R{0:,}'.format(float(data['bid'])))\n\n    print('---')\n\n    # lines below will only appear when opening menu\n    print('BitX Market Data - XBT/ZAR')\n    print('Updated: {0:%Y-%m-%d %H:%M:%S}'.format(timestamp))\n    \n\nif __name__ == '__main__':\n    run()\n"
				}
			],
			"path": "Cryptocurrency/Bitcoin/bitx.co/buy-and-sell.1m.py",
			"filename": "buy-and-sell.1m.py",
			"dir": "Cryptocurrency/Bitcoin/bitx.co",
			"docsPlugin": "Cryptocurrency/Bitcoin/bitx.co/buy-and-sell.1m.py.html",
			"docsCategory": "Cryptocurrency/Bitcoin/bitx.co.html",
			"pathSegments": [
				"Cryptocurrency",
				"Bitcoin",
				"bitx.co"
			],
			"categoryPathSegments": [
				{
					"path": "Cryptocurrency",
					"text": "Cryptocurrency",
					"isLast": false
				},
				{
					"path": "Cryptocurrency/Bitcoin",
					"text": "Bitcoin",
					"isLast": false
				},
				{
					"path": "Cryptocurrency/Bitcoin/bitx.co",
					"text": "bitx.co",
					"isLast": true
				}
			],
			"title": "BitX Buy and Sell",
			"version": "v1.0",
			"author": "Konrad Blum",
			"authors": [
				{
					"name": "Konrad Blum",
					"githubUsername": "kblum",
					"imageURL": "https://avatars.githubusercontent.com/u/868608?v=4",
					"bio": "",
					"primary": true
				}
			],
			"desc": "Shows latest buy and sell values (in ZAR) for Bitcoins on the BitX exchange.",
			"imageURL": "https://cloud.githubusercontent.com/assets/868608/24828465/e257fc20-1c5d-11e7-9641-5abed32bcb9b.png",
			"dependencies": [
				"python"
			],
			"aboutURL": "",
			"lastUpdated": "2021-03-08T15:21:44.780852Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "Cryptocurrency/Bitcoin/coinmarketcap.com/btc-usd.py",
					"filename": "btc-usd.py",
					"content": "#!/usr/bin/python\n# coding=utf-8\n#\n# \u003cbitbar.title\u003eBitcoin coin Ticker ($1USD)\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev1.0\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eimpshum\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003eimpshum\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eDisplays current Bitcoin price for $1 from Coinmarketcap\u003c/bitbar.desc\u003e\n# \u003cbitbar.image\u003ehttps://i.imgur.com/CyCMvOT.jpg\u003c/bitbar.image\u003e\n#\n# by impshum\n\nfrom urllib import urlopen\nurl = urlopen('https://coinmarketcap-nexuist.rhcloud.com/api/btc').read()\n\nimport json\nresult = json.loads(url)\n\ndef flow():\n    if result ['change'] \u003e '0':\n        print (' $%.4f | image=iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QAyQACAALwzISXAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH4AQHACkSBTjB+AAAALNJREFUOMvVk70NAjEMhb87WYiGBZAQU7ABNSVSWpZgEEagsJDoKBELUCEKFuBuCKTw0xyQC0lICe5i+/k9/wT+3opUUJQhcAUqa8I5ZQT4tANwioGTCkQZA9vmOQE2oUJFhL0DXBz33RpKUfCLfLTQJMx9IlEWuQr6QB3prGtNS1lwiMvEYo7ekNsKRBkB+y+rH1hDFVOwy7ids+gbVzrsM6CXeYDTF85xroB1ZoHb73ymB5RhJkpZTihGAAAAAElFTkSuQmCC color=#000000'% float(result['price']['usd']))\n    else:\n        print (' $%.4f | image=iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QABACnAADQ9FZaAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH4AQHACQ1FZwK3gAAAMRJREFUOMvNkjEKAjEQRZ+jKNjYKh5AbzCdjVcQj+BFPIKlp7EMeAJrUbASQVCEr80uG9cNbqe/Cgn/5WUI/DqNfBHM+kCzbs+lPUAr2pwBq5qABbB+M8gszkDvS/kOdAG5VBgEM4ApsP0CGLukjxlEoA0wSZR3Lo0qhxhZDIBDAmDA0wsBLD51CZeOwLKivHbprZx6AkAHuEXbD5fawYwywMqAzOKeDTTPvKqcTGZBMLsGs0utn5gADYEHcKp9e9ni//MCDtNCE3qjsIwAAAAASUVORK5CYII= color=#000000'% float(result['price']['usd']))\n\nflow()\n"
				}
			],
			"path": "Cryptocurrency/Bitcoin/coinmarketcap.com/btc-usd.py",
			"filename": "btc-usd.py",
			"dir": "Cryptocurrency/Bitcoin/coinmarketcap.com",
			"docsPlugin": "Cryptocurrency/Bitcoin/coinmarketcap.com/btc-usd.py.html",
			"docsCategory": "Cryptocurrency/Bitcoin/coinmarketcap.com.html",
			"pathSegments": [
				"Cryptocurrency",
				"Bitcoin",
				"coinmarketcap.com"
			],
			"categoryPathSegments": [
				{
					"path": "Cryptocurrency",
					"text": "Cryptocurrency",
					"isLast": false
				},
				{
					"path": "Cryptocurrency/Bitcoin",
					"text": "Bitcoin",
					"isLast": false
				},
				{
					"path": "Cryptocurrency/Bitcoin/coinmarketcap.com",
					"text": "coinmarketcap.com",
					"isLast": true
				}
			],
			"title": "Bitcoin coin Ticker ($1USD)",
			"version": "v1.0",
			"author": "impshum",
			"authors": [
				{
					"name": "impshum",
					"githubUsername": "impshum",
					"imageURL": "https://avatars.githubusercontent.com/u/3229127?v=4",
					"bio": "If it wasn't for those damn whelks!",
					"primary": true
				}
			],
			"desc": "Displays current Bitcoin price for $1 from Coinmarketcap",
			"imageURL": "https://i.imgur.com/CyCMvOT.jpg",
			"dependencies": null,
			"aboutURL": "",
			"lastUpdated": "2021-03-08T15:21:45.439675Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "Cryptocurrency/Bitcoin/coinmarketcap.com/btc-gbp.py",
					"filename": "btc-gbp.py",
					"content": "#!/usr/bin/python\n# coding=utf-8\n#\n# \u003cbitbar.title\u003eBitcoin coin Ticker (£1GBP)\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev1.0\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eimpshum\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003eimpshum\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eDisplays current Bitcoin price for £1 from Coinmarketcap\u003c/bitbar.desc\u003e\n# \u003cbitbar.image\u003ehttps://i.imgur.com/oXZWn0I.jpg\u003c/bitbar.image\u003e\n#\n# by impshum\n\nfrom urllib import urlopen\nurl = urlopen('https://coinmarketcap-nexuist.rhcloud.com/api/btc').read()\n\nimport json\nresult = json.loads(url)\n\ndef flow():\n    if result ['change'] \u003e '0':\n        print (' £%.4f | image=iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QAyQACAALwzISXAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH4AQHACkSBTjB+AAAALNJREFUOMvVk70NAjEMhb87WYiGBZAQU7ABNSVSWpZgEEagsJDoKBELUCEKFuBuCKTw0xyQC0lICe5i+/k9/wT+3opUUJQhcAUqa8I5ZQT4tANwioGTCkQZA9vmOQE2oUJFhL0DXBz33RpKUfCLfLTQJMx9IlEWuQr6QB3prGtNS1lwiMvEYo7ekNsKRBkB+y+rH1hDFVOwy7ids+gbVzrsM6CXeYDTF85xroB1ZoHb73ymB5RhJkpZTihGAAAAAElFTkSuQmCC color=#000000'% float(result['price']['gbp']))\n    else:\n        print (' £%.4f | image=iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QABACnAADQ9FZaAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH4AQHACQ1FZwK3gAAAMRJREFUOMvNkjEKAjEQRZ+jKNjYKh5AbzCdjVcQj+BFPIKlp7EMeAJrUbASQVCEr80uG9cNbqe/Cgn/5WUI/DqNfBHM+kCzbs+lPUAr2pwBq5qABbB+M8gszkDvS/kOdAG5VBgEM4ApsP0CGLukjxlEoA0wSZR3Lo0qhxhZDIBDAmDA0wsBLD51CZeOwLKivHbprZx6AkAHuEXbD5fawYwywMqAzOKeDTTPvKqcTGZBMLsGs0utn5gADYEHcKp9e9ni//MCDtNCE3qjsIwAAAAASUVORK5CYII= color=#000000'% float(result['price']['gbp']))\n\nflow()\n"
				}
			],
			"path": "Cryptocurrency/Bitcoin/coinmarketcap.com/btc-gbp.py",
			"filename": "btc-gbp.py",
			"dir": "Cryptocurrency/Bitcoin/coinmarketcap.com",
			"docsPlugin": "Cryptocurrency/Bitcoin/coinmarketcap.com/btc-gbp.py.html",
			"docsCategory": "Cryptocurrency/Bitcoin/coinmarketcap.com.html",
			"pathSegments": [
				"Cryptocurrency",
				"Bitcoin",
				"coinmarketcap.com"
			],
			"categoryPathSegments": [
				{
					"path": "Cryptocurrency",
					"text": "Cryptocurrency",
					"isLast": false
				},
				{
					"path": "Cryptocurrency/Bitcoin",
					"text": "Bitcoin",
					"isLast": false
				},
				{
					"path": "Cryptocurrency/Bitcoin/coinmarketcap.com",
					"text": "coinmarketcap.com",
					"isLast": true
				}
			],
			"title": "Bitcoin coin Ticker (£1GBP)",
			"version": "v1.0",
			"author": "impshum",
			"authors": [
				{
					"name": "impshum",
					"githubUsername": "impshum",
					"imageURL": "https://avatars.githubusercontent.com/u/3229127?v=4",
					"bio": "If it wasn't for those damn whelks!",
					"primary": true
				}
			],
			"desc": "Displays current Bitcoin price for £1 from Coinmarketcap",
			"imageURL": "https://i.imgur.com/oXZWn0I.jpg",
			"dependencies": null,
			"aboutURL": "",
			"lastUpdated": "2021-03-08T15:21:45.194491Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "Cryptocurrency/Bitcoin/Bitcurex.10s.sh",
					"filename": "Bitcurex.10s.sh",
					"content": "#!/bin/bash\n\n# \u003cbitbar.title\u003eBitcurex stats\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev1.0\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eTomasz Wierzbicki tomaszwierzbicki@icloud.com\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003eBicki\u003c/bitbar.author.github\u003e\n\nbitcoin_icon='iVBORw0KGgoAAAANSUhEUgAAABIAAAASCAYAAABWzo5XAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAA3NpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+IDx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IkFkb2JlIFhNUCBDb3JlIDUuNS1jMDE0IDc5LjE1MTQ4MSwgMjAxMy8wMy8xMy0xMjowOToxNSAgICAgICAgIj4gPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4gPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6eG1wTU09Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9tbS8iIHhtbG5zOnN0UmVmPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvc1R5cGUvUmVzb3VyY2VSZWYjIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iIHhtcE1NOk9yaWdpbmFsRG9jdW1lbnRJRD0ieG1wLmRpZDpmMDk3ZWJmYS0yODA4LTRkNDUtOTYxMC01YTkzNzU4YzY4YmEiIHhtcE1NOkRvY3VtZW50SUQ9InhtcC5kaWQ6REMzOTkzNzA0OEZGMTFFNkJCNTNCODBEODQ4N0M2NzgiIHhtcE1NOkluc3RhbmNlSUQ9InhtcC5paWQ6REMzOTkzNkY0OEZGMTFFNkJCNTNCODBEODQ4N0M2NzgiIHhtcDpDcmVhdG9yVG9vbD0iQWRvYmUgUGhvdG9zaG9wIENDIChNYWNpbnRvc2gpIj4gPHhtcE1NOkRlcml2ZWRGcm9tIHN0UmVmOmluc3RhbmNlSUQ9InhtcC5paWQ6NDcyMGI2M2QtZjlmNS00MDlmLWE0NGMtYjExZTc3NTZmOWRjIiBzdFJlZjpkb2N1bWVudElEPSJ4bXAuZGlkOmYwOTdlYmZhLTI4MDgtNGQ0NS05NjEwLTVhOTM3NThjNjhiYSIvPiA8L3JkZjpEZXNjcmlwdGlvbj4gPC9yZGY6UkRGPiA8L3g6eG1wbWV0YT4gPD94cGFja2V0IGVuZD0iciI/Pokm66sAAAFeSURBVHjatJQ/SwNBEMXvQtRKI6KdFlaWQgqLFFG00EII4geQq2wtkvscdmqhBGxiYaGopBANVkkaSytBsbCIgmITxX9v5R2Mw6ymycDv7nZn9u3dzOyFgW3DYAHMgTEQgltwBqrgIejA8uAEfBl80pf/TyQWi55AGTyCLdBSorFPpKgCL0GGAj3g2njDohbJCuceWAZLYBDkGLMIjg2xbCIyAGrC4T5nXGwyBQpivK6EatQIIk9infWLcVWIvanYKO2pQJsl/wAvfK7Tt8KcSZtOs0+0uR2HWLEJzt3zPmnEj7rLqfFZz6CXHIALFiHZtKLincZPcn05yqi5Vc6vqfmylexXsM8FfeAINMA2x84OdbKt8lf+6HyXtw1f+XVD3oAm2OTh3QUpsGOU/VdDJlZSAVdghpXLcQMtUurk0DreeeLbhkjcld9I6BEbAfNgVvTOHTjnUWnpBd8CDAClYp90pzf2twAAAABJRU5ErkJggg=='\n\ntrades=$(curl -s \"https://bitcurex.com/api/pln/trades.json\")\nprice=$(echo -n \"$trades\" | egrep -m 1 -o '\"price\": [0-9]+' | sed 's/\"price\": //' | sed -n '1 p')\namount=$(echo \"$trades\" | egrep -m 1 -o '\"amount\": [0-9]+(\\.)?([0-9]{0,2})?' | sed 's/\"amount\": //' | sed -e 's/$/ BTC/' | sed -n '1 p')\ntimestamp=$(echo \"$trades\" | egrep -m 1 -o '\"date\": [0-9]+' | sed 's/\"date\": //' | sed 's/\\\"//g' | sed -n '1 p')\nlastbuy=$(TZ=GMT-1 date -r \"$timestamp\" +\"%T - %d.%m.%Y\")\n\necho \"$price zł | templateImage=$bitcoin_icon\"\n\necho \"---\"\n\necho \"↳ $amount - $lastbuy\"\n\nticker=$(curl -s \"https://bitcurex.com/api/pln/ticker.json\")\nhigh=$(echo -n \"$ticker\" | egrep -m 1 -o '\"highest_tx_price_h\": \"[0-9]+\"?' | sed 's/\"highest_tx_price_h\": //' | sed 's/\\\"//g' )\nlow=$(echo -n \"$ticker\" | egrep -m 1 -o '\"lowest_tx_price_h\": \"[0-9]+\"?' | sed 's/\"lowest_tx_price_h\": //' | sed 's/\\\"//g')\n\nlet range=high-low\nlet current=price-low\n\nif [ $range -ne 0 ]\nthen result=$(echo $current $range 100 | awk '{ print $1/$2*$3 }')\n\tresult=$(printf '%.*f\\n' 0 \"$result\");\nelse\n\tresult=50;\nfi\n\nprev_price=$(echo -n \"$trades\" | egrep -m 1 -o '\"price\": [0-9]+' | sed 's/\"price\": //' | sed -n '2 p')\n\nif [ \"$price\" -gt \"$prev_price\" ]\nthen symbol=\"\u003e\"; fi\nif [ \"$price\" -lt \"$prev_price\" ]\nthen symbol=\"\u003c\"; fi\nif [ \"$price\" = \"$prev_price\" ]\nthen symbol=\"●\"; fi\n\ncase \"$result\" in\n\t0) echo \"$low zł  ◉ ————————— $high zł\" ;;\n\t?) echo \"$low zł  $symbol ————————— $high zł\" ;;\n\t1?) echo \"$low zł — $symbol ———————— $high zł\" ;;\n\t2?) echo \"$low zł —— $symbol ——————— $high zł\" ;;\n\t3?) echo \"$low zł ——— $symbol —————— $high zł\" ;;\n\t4?) echo \"$low zł ———— $symbol ————— $high zł\" ;;\n\t5?) echo \"$low zł ————— $symbol ———— $high zł\" ;;\n\t6?) echo \"$low zł —————— $symbol ——— $high zł\" ;;\n\t7?) echo \"$low zł ——————— $symbol —— $high zł\" ;;\n\t8?) echo \"$low zł ———————— $symbol — $high zł\" ;;\n\t9?) echo \"$low zł ————————— $symbol  $high zł\" ;;\n\t100) echo \"$low zł ————————— ◉  $high zł\" ;;\nesac\n"
				}
			],
			"path": "Cryptocurrency/Bitcoin/Bitcurex.10s.sh",
			"filename": "Bitcurex.10s.sh",
			"dir": "Cryptocurrency/Bitcoin",
			"docsPlugin": "Cryptocurrency/Bitcoin/Bitcurex.10s.sh.html",
			"docsCategory": "Cryptocurrency/Bitcoin.html",
			"pathSegments": [
				"Cryptocurrency",
				"Bitcoin"
			],
			"categoryPathSegments": [
				{
					"path": "Cryptocurrency",
					"text": "Cryptocurrency",
					"isLast": false
				},
				{
					"path": "Cryptocurrency/Bitcoin",
					"text": "Bitcoin",
					"isLast": true
				}
			],
			"title": "Bitcurex stats",
			"version": "v1.0",
			"author": "Tomasz Wierzbicki tomaszwierzbicki@icloud.com",
			"authors": [
				{
					"name": "Tomasz Wierzbicki tomaszwierzbicki@icloud.com",
					"githubUsername": "Bicki",
					"imageURL": "https://avatars.githubusercontent.com/u/20737785?v=4",
					"bio": "",
					"primary": true
				}
			],
			"desc": "",
			"imageURL": "https://xbarapp.com/public/img/xbar-2048.png",
			"dependencies": null,
			"aboutURL": "",
			"lastUpdated": "2021-03-08T15:21:44.613326Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "Cryptocurrency/Bitcoin/bitfinex.com/bitfinex_btcusd.sh",
					"filename": "bitfinex_btcusd.sh",
					"content": "#!/bin/bash\n\n# Shows last BTC price (in USD) on Bitfinex BTCUSD Order Book.\n#\n# \u003cbitbar.title\u003eBitfinex BTCUSD last price\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev1.0\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eRoberto Santacroce Martins\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003emileschet\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eShows last BTC price (in USD) on Bitfinex BTCUSD Order Book.\u003c/bitbar.desc\u003e\n# \u003cbitbar.image\u003ehttp://i.imgur.com/AJU4wmc.png\u003c/bitbar.image\u003e\n#\n# by Roberto Santacroce Martins\n# Based on Coinbase bitbar plugin by Mat Ryer\n\necho -n \"Ƀ$\"; curl -s \"https://api.bitfinex.com/v1/pubticker/BTCUSD\" | egrep -o '\"last_price\":\"[0-9]+(\\.)?([0-9]{0,2}\")?' | sed 's/\"last_price\"://' | sed 's/\\\"//g'"
				}
			],
			"path": "Cryptocurrency/Bitcoin/bitfinex.com/bitfinex_btcusd.sh",
			"filename": "bitfinex_btcusd.sh",
			"dir": "Cryptocurrency/Bitcoin/bitfinex.com",
			"docsPlugin": "Cryptocurrency/Bitcoin/bitfinex.com/bitfinex_btcusd.sh.html",
			"docsCategory": "Cryptocurrency/Bitcoin/bitfinex.com.html",
			"pathSegments": [
				"Cryptocurrency",
				"Bitcoin",
				"bitfinex.com"
			],
			"categoryPathSegments": [
				{
					"path": "Cryptocurrency",
					"text": "Cryptocurrency",
					"isLast": false
				},
				{
					"path": "Cryptocurrency/Bitcoin",
					"text": "Bitcoin",
					"isLast": false
				},
				{
					"path": "Cryptocurrency/Bitcoin/bitfinex.com",
					"text": "bitfinex.com",
					"isLast": true
				}
			],
			"title": "Bitfinex BTCUSD last price",
			"version": "v1.0",
			"author": "Roberto Santacroce Martins",
			"authors": [
				{
					"name": "Roberto Santacroce Martins",
					"githubUsername": "mileschet",
					"imageURL": "https://avatars.githubusercontent.com/u/76659029?v=4",
					"bio": "",
					"primary": true
				}
			],
			"desc": "Shows last BTC price (in USD) on Bitfinex BTCUSD Order Book.",
			"imageURL": "http://i.imgur.com/AJU4wmc.png",
			"dependencies": null,
			"aboutURL": "",
			"lastUpdated": "2021-03-08T15:21:44.780421Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "Cryptocurrency/Bitcoin/bitfinex.com/bitfinex_all.sh",
					"filename": "bitfinex_all.sh",
					"content": "#!/bin/bash\n\n# Shows (Ask, Bid, Mid, High, Low, Volume and Timestamp from Bitfinex REST API Ticker BTCUSD \n#\n# \u003cbitbar.title\u003eBitfinex REST API Ticker BTCUSD plugin\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev1.0\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eRoberto Santacroce Martins\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003emileschet\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eShows (Ask, Bid, Mid, High, Low, Volume and Timestamp from Bitfinex REST API Ticker BTCUSD \u003c/bitbar.desc\u003e\n# \u003cbitbar.image\u003ehttp://i.imgur.com/V8dABjz.png\u003c/bitbar.image\u003e\n#\n# by Roberto Santacroce Martins\n# Based on Coinbase bitbar plugin by Mat Ryer\n\n#echo -n \"Ƀ$\"; \nRESULT=$(curl -s \"https://api.bitfinex.com/v1/pubticker/BTCUSD\") \necho -n \"Ƀ$ \"; echo \"$RESULT\" | egrep -o '\"last_price\":\"[0-9]+(\\.)?([0-9]{0,2}\")?' | sed 's/\"last_price\"://' | sed 's/\\\"//g'\necho -n \"Ask \"; echo \"$RESULT\" | egrep -o '\"ask\":\"[0-9]+(\\.)?([0-9]{0,2}\")?' | sed 's/\"ask\"://' | sed 's/\\\"//g'\necho -n \"Bid \"; echo \"$RESULT\" | egrep -o '\"bid\":\"[0-9]+(\\.)?([0-9]{0,2}\")?' | sed 's/\"bid\"://' | sed 's/\\\"//g'\necho -n \"Low \"; echo \"$RESULT\" | egrep -o '\"low\":\"[0-9]+(\\.)?([0-9]{0,2}\")?' | sed 's/\"low\"://' | sed 's/\\\"//g'\necho -n \"Mid \"; echo \"$RESULT\" | egrep -o '\"mid\":\"[0-9]+(\\.)?([0-9]{0,2}\")?' | sed 's/\"mid\"://' | sed 's/\\\"//g'\necho -n \"High \"; echo \"$RESULT\" | egrep -o '\"high\":\"[0-9]+(\\.)?([0-9]{0,2}\")?' | sed 's/\"high\"://' | sed 's/\\\"//g'\necho -n \"Vol \"; echo \"$RESULT\" | egrep -o '\"volume\":\"[0-9]+(\\.)?([0-9]{0,8}\")?' | sed 's/\"volume\"://' | sed 's/\\\"//g'\nTIMESTAMP=$(echo \"$RESULT\" | egrep -o '\"timestamp\":\"[0-9]+' | sed 's/\"timestamp\"://' | sed 's/\\\"//g')\necho -n \"Updated At \"; date -r \"$TIMESTAMP\" +\"%F %T\"\n"
				}
			],
			"path": "Cryptocurrency/Bitcoin/bitfinex.com/bitfinex_all.sh",
			"filename": "bitfinex_all.sh",
			"dir": "Cryptocurrency/Bitcoin/bitfinex.com",
			"docsPlugin": "Cryptocurrency/Bitcoin/bitfinex.com/bitfinex_all.sh.html",
			"docsCategory": "Cryptocurrency/Bitcoin/bitfinex.com.html",
			"pathSegments": [
				"Cryptocurrency",
				"Bitcoin",
				"bitfinex.com"
			],
			"categoryPathSegments": [
				{
					"path": "Cryptocurrency",
					"text": "Cryptocurrency",
					"isLast": false
				},
				{
					"path": "Cryptocurrency/Bitcoin",
					"text": "Bitcoin",
					"isLast": false
				},
				{
					"path": "Cryptocurrency/Bitcoin/bitfinex.com",
					"text": "bitfinex.com",
					"isLast": true
				}
			],
			"title": "Bitfinex REST API Ticker BTCUSD plugin",
			"version": "v1.0",
			"author": "Roberto Santacroce Martins",
			"authors": [
				{
					"name": "Roberto Santacroce Martins",
					"githubUsername": "mileschet",
					"imageURL": "https://avatars.githubusercontent.com/u/76659029?v=4",
					"bio": "",
					"primary": true
				}
			],
			"desc": "Shows (Ask, Bid, Mid, High, Low, Volume and Timestamp from Bitfinex REST API Ticker BTCUSD ",
			"imageURL": "http://i.imgur.com/V8dABjz.png",
			"dependencies": null,
			"aboutURL": "",
			"lastUpdated": "2021-03-08T15:21:44.760249Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "Cryptocurrency/Bitcoin/bitoex.com/bitoex-buy-and-sell.10s.sh",
					"filename": "bitoex-buy-and-sell.10s.sh",
					"content": "#!/bin/bash\n# \u003cbitbar.title\u003eBitoEX Buy and Sell\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev1.0\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eRyan Chen\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003eryanchentw\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eShow latest buy and seller values in TWD from BitoEX. BitoEX is a popular BTC exchange in TW https://www.bitoex.com\u003c/bitbar.desc\u003e\n\n\nregexp='\"([0-9,]+)\",\"([0-9,]+)\"'\nresp=$(curl -s https://www.bitoex.com/sync/dashboard_fixed/\"$(date +%s)\")\n\nif [[ $resp =~ $regexp ]]; then\n    echo Buy: NT$ \"${BASH_REMATCH[1]}\"\n    echo Sell: NT$ \"${BASH_REMATCH[2]}\"\n    echo '---'\n    echo 'Go chart | href=https://www.bitoex.com/charts?locale=zh-tw'\nfi\n"
				}
			],
			"path": "Cryptocurrency/Bitcoin/bitoex.com/bitoex-buy-and-sell.10s.sh",
			"filename": "bitoex-buy-and-sell.10s.sh",
			"dir": "Cryptocurrency/Bitcoin/bitoex.com",
			"docsPlugin": "Cryptocurrency/Bitcoin/bitoex.com/bitoex-buy-and-sell.10s.sh.html",
			"docsCategory": "Cryptocurrency/Bitcoin/bitoex.com.html",
			"pathSegments": [
				"Cryptocurrency",
				"Bitcoin",
				"bitoex.com"
			],
			"categoryPathSegments": [
				{
					"path": "Cryptocurrency",
					"text": "Cryptocurrency",
					"isLast": false
				},
				{
					"path": "Cryptocurrency/Bitcoin",
					"text": "Bitcoin",
					"isLast": false
				},
				{
					"path": "Cryptocurrency/Bitcoin/bitoex.com",
					"text": "bitoex.com",
					"isLast": true
				}
			],
			"title": "BitoEX Buy and Sell",
			"version": "v1.0",
			"author": "Ryan Chen",
			"authors": [
				{
					"name": "Ryan",
					"githubUsername": "ryanchentw",
					"imageURL": "https://avatars.githubusercontent.com/u/13937810?v=4",
					"bio": "Web developer and keyboard lover live in Taiwan.",
					"primary": true
				}
			],
			"desc": "Show latest buy and seller values in TWD from BitoEX. BitoEX is a popular BTC exchange in TW https://www.bitoex.com",
			"imageURL": "https://xbarapp.com/public/img/xbar-2048.png",
			"dependencies": null,
			"aboutURL": "",
			"lastUpdated": "2021-03-08T15:21:44.758752Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "Cryptocurrency/bitso-btc-eth-xrp.30s.sh",
					"filename": "bitso-btc-eth-xrp.30s.sh",
					"content": "#!/bin/bash\n\n# \u003cbitbar.title\u003eBitso buys price\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev1.0\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eErick Madrid\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003eNeovirxp\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eDisplays Bitso buy prices of Bitcoin, Ethereum, Ripple in MXN\u003c/bitbar.desc\u003e\n# \u003cbitbar.image\u003ehttps://image.ibb.co/h9mWFG/Screen_Shot_2017_11_28_at_7_59_08_PM.png\u003c/bitbar.image\u003e\n# \u003cbitbar.dependencies\u003ebash, jq\u003c/bitbar.dependencies\u003e\n\n# If you feel this little tool gives you some value, tips are always welcome at the following addresses!\n# Bitcoin: 19sFQuSb1cwGA9Cb5XYVMHeYUVW8ME6ki8\n# Ethereum: 0xF8D3C6dd50536eC8FF61CCE5C47F8191f55c9B81\n\nexport LANG='en_US.UTF-8'\nexport LC_NUMERIC='en_US'\n\nexport PATH=\"/usr/local/bin/:$PATH\"\n\nBTC_MXN=$(curl -s 'https://api.bitso.com/v3/ticker/?book=btc_mxn')\nETH_MXN=$(curl -s 'https://api.bitso.com/v3/ticker/?book=eth_mxn')\nXRP_MXN=$(curl -s 'https://api.bitso.com/v3/ticker/?book=xrp_mxn')\n\nBTC_NOW=$(echo \"$BTC_MXN\" | jq '.payload.last' | tr -d \\\")\nETH_NOW=$(echo \"$ETH_MXN\" | jq '.payload.last' | tr -d \\\")\nXRP_NOW=$(echo \"$XRP_MXN\" | jq '.payload.last' | tr -d \\\")\n\nprintf \"BTC: %'.0f ETH: %'.0f XRP: %'.2f | color=green \\n\" \"$BTC_NOW\" \"$ETH_NOW\" \"$XRP_NOW\"\n\necho '---'\n\necho \"$BTC_NOW\" | xargs printf \"1 BTC = %'.2f MXN  | color=green \\n\"\n\necho '---'\n\n# last 24 hours price high\necho \"$BTC_MXN\" | jq '.payload.high' | tr -d \\\" | xargs printf \"HIGH\\t$%'.2f MXN\\n\"\n# last 24 hours price low\necho \"$BTC_MXN\" | jq '.payload.low' | tr -d \\\"  | xargs printf \"LOW \\t$%'.2f MXN\\n\"\n\necho '---'\n\n# lowest sell order\necho \"$BTC_MXN\" | jq '.payload.ask' | tr -d \\\" | xargs printf \"ASK\\t\\t$%'.2f MXN\\n\"\n# highest buy order\necho \"$BTC_MXN\" | jq '.payload.bid' | tr -d \\\" | xargs printf \"BID\\t\\t$%'.2f MXN\\n\"\n\necho '---'\n\necho \"$ETH_NOW\" | xargs printf \"1 ETH = %'.2f MXN | color=blue \\n\"\n\necho '---'\n\n# last 24 hours price high\necho \"$ETH_MXN\" | jq '.payload.high' | tr -d \\\" | xargs printf \"HIGH\\t$%'.2f MXN\\n\"\n# last 24 hours price low\necho \"$ETH_MXN\" | jq '.payload.low' | tr -d \\\"  | xargs printf \"LOW \\t$%'.2f MXN\\n\"\n\necho '---'\n\n# lowest sell order\necho \"$ETH_MXN\" | jq '.payload.ask' | tr -d \\\" | xargs printf \"ASK\\t\\t$%'.2f MXN\\n\"\n# highest buy order\necho \"$ETH_MXN\" | jq '.payload.bid' | tr -d \\\" | xargs printf \"BID\\t\\t$%'.2f MXN\\n\"\n\necho '---'\n\necho \"$XRP_NOW\" | xargs printf \"1 XRP = %'.2f MXN | color=red \\n\"\n\necho '---'\n\n# last 24 hours price high\necho \"$XRP_MXN\" | jq '.payload.high' | tr -d \\\" | xargs printf \"HIGH\\t$%'.2f MXN\\n\"\n# last 24 hours price low\necho \"$XRP_MXN\" | jq '.payload.low' | tr -d \\\"  | xargs printf \"LOW \\t$%'.2f MXN\\n\"\n\necho '---'\n\n# lowest sell order\necho \"$XRP_MXN\" | jq '.payload.ask' | tr -d \\\" | xargs printf \"ASK\\t\\t$%'.2f MXN\\n\"\n# highest buy order\necho \"$XRP_MXN\" | jq '.payload.bid' | tr -d \\\" | xargs printf \"BID\\t\\t$%'.2f MXN\\n\"\n\n"
				}
			],
			"path": "Cryptocurrency/bitso-btc-eth-xrp.30s.sh",
			"filename": "bitso-btc-eth-xrp.30s.sh",
			"dir": "Cryptocurrency",
			"docsPlugin": "Cryptocurrency/bitso-btc-eth-xrp.30s.sh.html",
			"docsCategory": "Cryptocurrency.html",
			"pathSegments": [
				"Cryptocurrency"
			],
			"categoryPathSegments": [
				{
					"path": "Cryptocurrency",
					"text": "Cryptocurrency",
					"isLast": true
				}
			],
			"title": "Bitso buys price",
			"version": "v1.0",
			"author": "Erick Madrid",
			"authors": [
				{
					"name": "Erick Madrid",
					"githubUsername": "Neovirxp",
					"imageURL": "https://avatars.githubusercontent.com/u/33076777?v=4",
					"bio": "",
					"primary": true
				}
			],
			"desc": "Displays Bitso buy prices of Bitcoin, Ethereum, Ripple in MXN",
			"imageURL": "https://image.ibb.co/h9mWFG/Screen_Shot_2017_11_28_at_7_59_08_PM.png",
			"dependencies": [
				"bash",
				"jq"
			],
			"aboutURL": "",
			"lastUpdated": "2021-03-08T15:21:47.150033Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "Cryptocurrency/Bitcoin/bitstamp.net/last.10s.sh",
					"filename": "last.10s.sh",
					"content": "#!/bin/bash\n\n# Shows last BTC price (in USD) on Bitstamp exchange.\n#\n# \u003cbitbar.title\u003eBitstamp last price\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev1.0\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eDamien Lajarretie\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003edlajarretie\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eShows last BTC price (in USD) on Bitstamp exchange.\u003c/bitbar.desc\u003e\n# \u003cbitbar.image\u003ehttp://i.imgur.com/aQCqOW6.png\u003c/bitbar.image\u003e\n#\n# by Damien Lajarretie\n# Based on Coinbase bitbar plugin by Mat Ryer\n\necho -n \"Bitstamp: $\"; curl -s \"https://www.bitstamp.net/api/ticker/\" | egrep -o '\"last\": \"[0-9]+(\\.)?([0-9]{0,2}\")?' | sed 's/\"last\": //' | sed 's/\\\"//g'"
				}
			],
			"path": "Cryptocurrency/Bitcoin/bitstamp.net/last.10s.sh",
			"filename": "last.10s.sh",
			"dir": "Cryptocurrency/Bitcoin/bitstamp.net",
			"docsPlugin": "Cryptocurrency/Bitcoin/bitstamp.net/last.10s.sh.html",
			"docsCategory": "Cryptocurrency/Bitcoin/bitstamp.net.html",
			"pathSegments": [
				"Cryptocurrency",
				"Bitcoin",
				"bitstamp.net"
			],
			"categoryPathSegments": [
				{
					"path": "Cryptocurrency",
					"text": "Cryptocurrency",
					"isLast": false
				},
				{
					"path": "Cryptocurrency/Bitcoin",
					"text": "Bitcoin",
					"isLast": false
				},
				{
					"path": "Cryptocurrency/Bitcoin/bitstamp.net",
					"text": "bitstamp.net",
					"isLast": true
				}
			],
			"title": "Bitstamp last price",
			"version": "v1.0",
			"author": "Damien Lajarretie",
			"authors": [
				{
					"name": "Damien Lajarretie",
					"githubUsername": "dlajarretie",
					"imageURL": "https://avatars.githubusercontent.com/u/5681392?v=4",
					"bio": "Lead developer @AirIntServices. Fiddling with JS, mostly. Cryptocurrencies enthusiast.",
					"primary": true
				}
			],
			"desc": "Shows last BTC price (in USD) on Bitstamp exchange.",
			"imageURL": "http://i.imgur.com/aQCqOW6.png",
			"dependencies": null,
			"aboutURL": "",
			"lastUpdated": "2021-03-08T15:21:44.78792Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "Cryptocurrency/Blackcoin/blk-usd.py",
					"filename": "blk-usd.py",
					"content": "#!/usr/bin/python\n# coding=utf-8\n#\n# \u003cbitbar.title\u003eBlackcoin Ticker ($1USD)\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev1.0\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eimpshum\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003eimpshum\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eDisplays current Blackcoin price for $1 from Coinmarketcap\u003c/bitbar.desc\u003e\n# \u003cbitbar.image\u003ehttps://i.imgur.com/PjuyXQd.jpg\u003c/bitbar.image\u003e\n#\n# by impshum\n\nfrom urllib import urlopen\nurl = urlopen('https://coinmarketcap-nexuist.rhcloud.com/api/blk').read()\n\nimport json\nresult = json.loads(url)\n\ndef flow():\n    if result ['change'] \u003e '0':\n        print (' $%.4f | image=iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QAyQACAALwzISXAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH4AQHACkSBTjB+AAAALNJREFUOMvVk70NAjEMhb87WYiGBZAQU7ABNSVSWpZgEEagsJDoKBELUCEKFuBuCKTw0xyQC0lICe5i+/k9/wT+3opUUJQhcAUqa8I5ZQT4tANwioGTCkQZA9vmOQE2oUJFhL0DXBz33RpKUfCLfLTQJMx9IlEWuQr6QB3prGtNS1lwiMvEYo7ekNsKRBkB+y+rH1hDFVOwy7ids+gbVzrsM6CXeYDTF85xroB1ZoHb73ymB5RhJkpZTihGAAAAAElFTkSuQmCC color=#000000'% float(result['price']['usd']))\n    else:\n        print (' $%.4f | image=iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QABACnAADQ9FZaAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH4AQHACQ1FZwK3gAAAMRJREFUOMvNkjEKAjEQRZ+jKNjYKh5AbzCdjVcQj+BFPIKlp7EMeAJrUbASQVCEr80uG9cNbqe/Cgn/5WUI/DqNfBHM+kCzbs+lPUAr2pwBq5qABbB+M8gszkDvS/kOdAG5VBgEM4ApsP0CGLukjxlEoA0wSZR3Lo0qhxhZDIBDAmDA0wsBLD51CZeOwLKivHbprZx6AkAHuEXbD5fawYwywMqAzOKeDTTPvKqcTGZBMLsGs0utn5gADYEHcKp9e9ni//MCDtNCE3qjsIwAAAAASUVORK5CYII= color=#000000'% float(result['price']['usd']))\n\nflow()\n"
				}
			],
			"path": "Cryptocurrency/Blackcoin/blk-usd.py",
			"filename": "blk-usd.py",
			"dir": "Cryptocurrency/Blackcoin",
			"docsPlugin": "Cryptocurrency/Blackcoin/blk-usd.py.html",
			"docsCategory": "Cryptocurrency/Blackcoin.html",
			"pathSegments": [
				"Cryptocurrency",
				"Blackcoin"
			],
			"categoryPathSegments": [
				{
					"path": "Cryptocurrency",
					"text": "Cryptocurrency",
					"isLast": false
				},
				{
					"path": "Cryptocurrency/Blackcoin",
					"text": "Blackcoin",
					"isLast": true
				}
			],
			"title": "Blackcoin Ticker ($1USD)",
			"version": "v1.0",
			"author": "impshum",
			"authors": [
				{
					"name": "impshum",
					"githubUsername": "impshum",
					"imageURL": "https://avatars.githubusercontent.com/u/3229127?v=4",
					"bio": "If it wasn't for those damn whelks!",
					"primary": true
				}
			],
			"desc": "Displays current Blackcoin price for $1 from Coinmarketcap",
			"imageURL": "https://i.imgur.com/PjuyXQd.jpg",
			"dependencies": null,
			"aboutURL": "",
			"lastUpdated": "2021-03-08T15:21:45.585492Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "Cryptocurrency/Blackcoin/blk-gbp.py",
					"filename": "blk-gbp.py",
					"content": "#!/usr/bin/python\n# coding=utf-8\n#\n# \u003cbitbar.title\u003eBlackcoin Ticker (£1GBP)\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev1.0\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eimpshum\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003eimpshum\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eDisplays current Blackcoin price for £1 from Coinmarketcap\u003c/bitbar.desc\u003e\n# \u003cbitbar.image\u003ehttps://i.imgur.com/guazVdD.jpg\u003c/bitbar.image\u003e\n#\n# by impshum\n\nfrom urllib import urlopen\nurl = urlopen('https://coinmarketcap-nexuist.rhcloud.com/api/blk').read()\n\nimport json\nresult = json.loads(url)\n\ndef flow():\n    if result ['change'] \u003e '0':\n        print (' £%.4f | image=iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QAyQACAALwzISXAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH4AQHACkSBTjB+AAAALNJREFUOMvVk70NAjEMhb87WYiGBZAQU7ABNSVSWpZgEEagsJDoKBELUCEKFuBuCKTw0xyQC0lICe5i+/k9/wT+3opUUJQhcAUqa8I5ZQT4tANwioGTCkQZA9vmOQE2oUJFhL0DXBz33RpKUfCLfLTQJMx9IlEWuQr6QB3prGtNS1lwiMvEYo7ekNsKRBkB+y+rH1hDFVOwy7ids+gbVzrsM6CXeYDTF85xroB1ZoHb73ymB5RhJkpZTihGAAAAAElFTkSuQmCC color=#000000'% float(result['price']['gbp']))\n    else:\n        print (' £%.4f | image=iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QABACnAADQ9FZaAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH4AQHACQ1FZwK3gAAAMRJREFUOMvNkjEKAjEQRZ+jKNjYKh5AbzCdjVcQj+BFPIKlp7EMeAJrUbASQVCEr80uG9cNbqe/Cgn/5WUI/DqNfBHM+kCzbs+lPUAr2pwBq5qABbB+M8gszkDvS/kOdAG5VBgEM4ApsP0CGLukjxlEoA0wSZR3Lo0qhxhZDIBDAmDA0wsBLD51CZeOwLKivHbprZx6AkAHuEXbD5fawYwywMqAzOKeDTTPvKqcTGZBMLsGs0utn5gADYEHcKp9e9ni//MCDtNCE3qjsIwAAAAASUVORK5CYII= color=#000000'% float(result['price']['gbp']))\n\nflow()\n"
				}
			],
			"path": "Cryptocurrency/Blackcoin/blk-gbp.py",
			"filename": "blk-gbp.py",
			"dir": "Cryptocurrency/Blackcoin",
			"docsPlugin": "Cryptocurrency/Blackcoin/blk-gbp.py.html",
			"docsCategory": "Cryptocurrency/Blackcoin.html",
			"pathSegments": [
				"Cryptocurrency",
				"Blackcoin"
			],
			"categoryPathSegments": [
				{
					"path": "Cryptocurrency",
					"text": "Cryptocurrency",
					"isLast": false
				},
				{
					"path": "Cryptocurrency/Blackcoin",
					"text": "Blackcoin",
					"isLast": true
				}
			],
			"title": "Blackcoin Ticker (£1GBP)",
			"version": "v1.0",
			"author": "impshum",
			"authors": [
				{
					"name": "impshum",
					"githubUsername": "impshum",
					"imageURL": "https://avatars.githubusercontent.com/u/3229127?v=4",
					"bio": "If it wasn't for those damn whelks!",
					"primary": true
				}
			],
			"desc": "Displays current Blackcoin price for £1 from Coinmarketcap",
			"imageURL": "https://i.imgur.com/guazVdD.jpg",
			"dependencies": null,
			"aboutURL": "",
			"lastUpdated": "2021-03-08T15:21:45.575854Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "Cryptocurrency/cardano.10s.py",
					"filename": "cardano.10s.py",
					"content": "#!/usr/bin/env /usr/local/bin/python3\n# coding=utf-8\n\n\"\"\"\n# \u003cbitbar.title\u003eCardano (ADA) Price Monitor\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev0.1\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eErol Soyöz\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003esoyoz\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eYou can monitor Cardano (ADA)'s latest price via CoinRanking.com API\u003c/bitbar.desc\u003e\n# \u003cbitbar.image\u003ehttps://s15.postimg.cc/4yheazrln/ada.png\u003c/bitbar.image\u003e\n# \u003cbitbar.dependencies\u003epython3\u003c/bitbar.dependencies\u003e\n# \u003cbitbar.abouturl\u003ehttp://soyoz.com/\u003c/bitbar.abouturl\u003e\n\"\"\"\n\nimport json\nimport textwrap\nfrom urllib.request import urlopen\n\n\"\"\n\"\"\n\nCOLORS = {\n    'red': '#b50000',\n    'green': '#03a600'\n}\n\n\"\"\"\n\"\"\"\n\n\nclass BitBarAPI:\n    @staticmethod\n    def seperate():\n        seperate = '---'\n        return seperate\n\n    @staticmethod\n    def color(hex):\n        color = 'color=' + hex\n        return color\n\n    @staticmethod\n    def font(font):\n        font = 'font=' + font\n        return font\n\n    @staticmethod\n    def refresh(status):\n        refresh = 'refresh=' + status\n        return refresh\n\n\n\"\"\"\n\"\"\"\n\n\nclass CoinRankingAPI:\n    @staticmethod\n    def getCoin(base, coinId):\n        try:\n            connect = urlopen(\n                'https://api.coinranking.com/v1/public/coin/' + coinId + '?base=' + base).read()\n        except:\n            return False\n\n        return connect\n\n\n\"\"\"\n\"\"\"\n\n\nclass Cardano:\n    @staticmethod\n    def main():\n        currency = 'USD'\n        coinId = '9'\n        getCoin = CoinRankingAPI.getCoin(currency, coinId)\n        if (getCoin):\n            result = json.loads(getCoin)\n\n            baseSign = result['data']['base']['sign']\n            symbol = result['data']['coin']['symbol']\n            price = float(result['data']['coin']['price'])\n            description = result['data']['coin']['description']\n            percentChange24h = result['data']['coin']['change']\n\n            if (percentChange24h \u003e= 0):\n                color = COLORS['green']\n            else:\n                color = COLORS['red']\n\n            outputPrice = '{} ' + baseSign + '{:.3f} | ' + \\\n                BitBarAPI.font('HelveticaNeue-Light') + \\\n                ' ' + BitBarAPI.color(color)\n            outputPrice = outputPrice.format(\n                symbol,\n                price\n            )\n            print(outputPrice)\n            print(BitBarAPI.seperate())\n\n            outputPercentChange = '24H CHANGE: {}%'\n            outputPercentChange = outputPercentChange.format(\n                percentChange24h,\n            )\n            print(outputPercentChange)\n            print(BitBarAPI.seperate())\n\n            print(textwrap.fill(description, 30))\n        else:\n            print('ERROR! | ' + BitBarAPI.color(COLORS['red']))\n            print(BitBarAPI.seperate())\n            print('Failed to connect! | ' + BitBarAPI.color(COLORS['red']))\n\n        print(BitBarAPI.seperate())\n        print('Refresh | ' + BitBarAPI.refresh('true'))\n\n\n\"\"\"\nRun!\n\"\"\"\nCardano.main()\n"
				}
			],
			"path": "Cryptocurrency/cardano.10s.py",
			"filename": "cardano.10s.py",
			"dir": "Cryptocurrency",
			"docsPlugin": "Cryptocurrency/cardano.10s.py.html",
			"docsCategory": "Cryptocurrency.html",
			"pathSegments": [
				"Cryptocurrency"
			],
			"categoryPathSegments": [
				{
					"path": "Cryptocurrency",
					"text": "Cryptocurrency",
					"isLast": true
				}
			],
			"title": "Cardano (ADA) Price Monitor",
			"version": "v0.1",
			"author": "Erol Soyöz",
			"authors": [
				{
					"name": "Erol Soyöz",
					"githubUsername": "soyoz",
					"imageURL": "https://avatars.githubusercontent.com/u/1260475?v=4",
					"bio": "amele",
					"primary": true
				}
			],
			"desc": "You can monitor Cardano (ADA)'s latest price via CoinRanking.com API",
			"imageURL": "https://s15.postimg.cc/4yheazrln/ada.png",
			"dependencies": [
				"python3"
			],
			"aboutURL": "http://soyoz.com/",
			"lastUpdated": "2021-03-08T15:21:47.449641Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "Cryptocurrency/coin-alert.5s.sh",
					"filename": "coin-alert.5s.sh",
					"content": "#!/bin/bash\n#\n# \u003cbitbar.title\u003eCoin Alert\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev1.0\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eCarlson Orozco\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003ecarlsonorozco\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eCoin Alert is a plugin for BitBar that notifies and make a sound when less than or greater than cryptocurrency price from CoinMarketCap.\u003c/bitbar.desc\u003e\n# \u003cbitbar.image\u003ehttps://raw.githubusercontent.com/carlsonorozco/coin-alert/master/image.png\u003c/bitbar.image\u003e\n# \u003cbitbar.abouturl\u003ehttps://github.com/carlsonorozco/coin-alert\u003c/bitbar.abouturl\u003e\n\nbitcoin_icon='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'\ntimestamp=$(date +%s)\n\nget_cointmarketcap_cache() {\n    curl -s \"https://api.coinmarketcap.com/v1/ticker/?limit=10\" -o '/tmp/coinmarketcap-ticker.json'\n}\n\n# Check cache\nif [ ! -f '/tmp/coinmarketcap-ticker.json' ]; then\n    get_cointmarketcap_cache\nelse\n    file_created=$(date -r /tmp/coinmarketcap-ticker.json +%s)\n    if [[ $((timestamp - file_created)) -gt 300 ]]; then\n        get_cointmarketcap_cache\n    fi\nfi\n\n# Set Alert\nif [ \"$1\" = 'set' ]; then\n    crpto=\"$(osascript -l JavaScript -e '\n        const app = Application.currentApplication()\n        app.includeStandardAdditions = true\n        const data = JSON.parse(app.read(Path(\"/tmp/coinmarketcap-ticker.json\")))\n        const ids = data.map(crypto =\u003e crypto.id)\n        const selectedId = app.chooseFromList(ids, {\n            withPrompt: \"Select CryptoCurrency:\"\n        })\n        selectedId\n    ')\"\n    if [ \"$crpto\" = 'false' ]; then exit; fi\n\n    operation=\"$(osascript -l JavaScript -e '\n        const app = Application.currentApplication()\n        app.includeStandardAdditions = true\n        const operation = app.chooseFromList([\"↑\", \"↓\"], {\n            withPrompt: \"When to alert:\"\n        })\n        operation\n    ')\"\n    if [ \"$operation\" = 'false' ]; then exit; fi\n\n    amount=\"$(osascript -l JavaScript -e '\n        const app = Application.currentApplication()\n        app.includeStandardAdditions = true\n        const response = app.displayDialog(\"At what $ amount?\", {\n            defaultAnswer: \"\",\n            withIcon: \"note\",\n            buttons: [\"Cancel\", \"Set\"],\n            defaultButton: \"Set\"\n        })\n        response.textReturned\n    ')\"\n\n    re='^[0-9]+([.][0-9]+)?$'\n    if ! [[ $amount =~ $re ]] ; then exit; fi\n\n    echo \"$crpto $operation $amount\" \u003e\u003e /tmp/coin-alert.data\n    exit\nfi\n\n# Remove Alert\nif [ \"$1\" = 'remove' ]; then\n    touch /tmp/coin-alert-tmp.data\n    while IFS= read -r line; do\n        if [ \"$2\" != \"$line\" ]; then\n            echo \"$line\" \u003e\u003e /tmp/coin-alert-tmp.data\n        fi\n    done \u003c/tmp/coin-alert.data\n    mv /tmp/coin-alert-tmp.data /tmp/coin-alert.data\n    exit\nfi\n\n# Refresh Alert\nif [ \"$1\" = 'refresh' ]; then\n    rm /tmp/coinmarketcap-ticker.json\n    exit\nfi\n\n# Create coin-alert.data if not exist\nif [ ! -f '/tmp/coin-alert.data' ]; then\n    touch '/tmp/coin-alert.data'\nfi\n\n# Count all alerts\ntotal_alerts=$(grep -c ' ↓ \\| ↑ ' /tmp/coin-alert.data)\n\n# Header Display\nif [ $((total_alerts)) -gt 0 ]; then\n    if [ ! -f '/tmp/coin-alert-trigger.data' ] ; then\n        echo \"$total_alerts | templateImage=$bitcoin_icon\"\n    else\n        echo \"$total_alerts | color=red templateImage=$bitcoin_icon\"\n    fi\n    echo '---'\nelse\n    echo \"| templateImage=$bitcoin_icon\"\nfi\n\n# Parse alerts\nwhile IFS= read -r line; do\n    echo \"$line | color=red bash='$0' param1=remove param2=\\\"$line\\\" terminal=false\"\ndone \u003c/tmp/coin-alert.data\n\n# Remove existing trigger data\nif [ -f '/tmp/coin-alert-trigger.data' ]; then\n    rm /tmp/coin-alert-trigger.data\nfi\n\n# Process alerts\nosascript -l JavaScript -e \"\n    var app = Application.currentApplication()\n    app.includeStandardAdditions = true\n\n    function writeTextToFile(text, file, overwriteExistingContent) {\n        try {\n            // Convert the file to a string\n            const fileString = file.toString()\n\n            // Open the file for writing\n            const openedFile = app.openForAccess(Path(fileString), { writePermission: true })\n\n            // Clear the file if content should be overwritten\n            if (overwriteExistingContent) {\n                app.setEof(openedFile, { to: 0 })\n            }\n\n            // Write the new content to the file\n            app.write(text, { to: openedFile, startingAt: app.getEof(openedFile) })\n\n            // Close the file\n            app.closeAccess(openedFile)\n\n            // Return a boolean indicating that writing was successful\n            return true\n        } catch(error) {\n            try {\n                // Close the file\n                app.closeAccess(file)\n            } catch(error) {\n                // Report the error is closing failed\n                console.log('Could not close file: ' + error)\n            }\n\n            // Return a boolean indicating that writing was successful\n            return false\n        }\n    }\n    try {\n        const alerts = (app.read(Path('/tmp/coin-alert.data'), { usingDelimiter: \\\"\\\\n\\\" })).map(value =\u003e value.split(' '))\n        const data = (alerts.length \u003e 0) ? JSON.parse(app.read(Path('/tmp/coinmarketcap-ticker.json'))) : []\n        for (let value of alerts) {\n            let operator = (value[1] === '‚Üë') ? '\u003e' : '\u003c'\n            let operators = {\n                '\u003e': (a, b) =\u003e a \u003e b,\n                '\u003c': (a, b) =\u003e a \u003c b,\n            }\n            let isMatch = data.some(crypto =\u003e {\n                if (value[0] === crypto.id) {\n                    return operators[operator](parseFloat(crypto.price_usd), parseFloat(value[2]))\n                }\n            })\n            if (isMatch) {\n                writeTextToFile(value[0] + ' ' + value[1] + ' ' + value[2].toString() + \\\"\\\\n\\\\n\\\", '/tmp/coin-alert-trigger.data')\n            }\n        }\n    } catch (error) {}\n\" \u003e/dev/null\n\n# Set new alert\necho '---'\necho \"Set Price Alert | color=green bash='$0' param1=set terminal=false\"\n\n# Refresh\necho '---'\necho \"Clear Cache Data | color=blue bash='$0' param1=refresh terminal=false\"\n\n# Trigger alert\nif [ -f '/tmp/coin-alert-trigger.data' ]; then\n    alert_message=$(cat /tmp/coin-alert-trigger.data)\n    osascript -e \"display notification \\\"$alert_message\\\" with title \\\"Coin Alert\\\" sound name \\\"Tink\\\"\"\nfi\n"
				}
			],
			"path": "Cryptocurrency/coin-alert.5s.sh",
			"filename": "coin-alert.5s.sh",
			"dir": "Cryptocurrency",
			"docsPlugin": "Cryptocurrency/coin-alert.5s.sh.html",
			"docsCategory": "Cryptocurrency.html",
			"pathSegments": [
				"Cryptocurrency"
			],
			"categoryPathSegments": [
				{
					"path": "Cryptocurrency",
					"text": "Cryptocurrency",
					"isLast": true
				}
			],
			"title": "Coin Alert",
			"version": "v1.0",
			"author": "Carlson Orozco",
			"authors": [
				{
					"name": "Carlson Orozco",
					"githubUsername": "carlsonorozco",
					"imageURL": "https://avatars.githubusercontent.com/u/2333279?v=4",
					"bio": "Christianprenuer • Running Makinilya.com • Dad",
					"primary": true
				}
			],
			"desc": "Coin Alert is a plugin for BitBar that notifies and make a sound when less than or greater than cryptocurrency price from CoinMarketCap.",
			"imageURL": "https://raw.githubusercontent.com/carlsonorozco/coin-alert/master/image.png",
			"dependencies": null,
			"aboutURL": "https://github.com/carlsonorozco/coin-alert",
			"lastUpdated": "2021-03-08T15:21:47.487407Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "Cryptocurrency/coincap.1m.py",
					"filename": "coincap.1m.py",
					"content": "#!/usr/bin/env PYTHONIOENCODING=UTF-8 /usr/local/bin/python3\n\n# \u003cbitbar.title\u003eCoinCap\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev1.0\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003ePeter Stenger\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003ereteps\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eRetrieves trading information about a coin on cryptocompare and coinmarketcap. High \u0026 low not available on CMC.\u003c/bitbar.desc\u003e\n# \u003cbitbar.image\u003ehttps://i.imgur.com/a584lGl.png\u003c/bitbar.image\u003e\n# \u003cbitbar.dependencies\u003epython3,requests\u003c/bitbar.dependencies\u003e\n\ncoins_usd = ['bitcoin','ethereum','litecoin'] #USD\n\ncoins_btc = ['neo','walton','stellar','monero'] #BTC\n\ncoins_cmcbtc = ['raiblocks'] #Coinmarketcap BTC\n\ncoins_cmcusd = ['iota'] #CoinmarketCap USD\n\n#------------------------------BEGIN CODE------------------------------#\nimport requests\nprint('Ƀ')\nprint('---')\ncoin_data_usd = {}\ncoin_data_btc = {}\nstandard = \"|href='https://coinmarketcap.com/currencies/{}' font='Menlo'\"\nusd = \"{: \u003c5} {:0\u003c9.3f} {:0\u003c+6.2f}% {:0\u003c9.3f} {:0\u003c9.3f} {:0\u003c9.3f}  {:0\u003e3}\" + standard\nbtc = \"{: \u003c5} {:0\u003c9.7f} {:0\u003c+6.2f}% {:0\u003c9.7f} {:0\u003c9.7f} {:0\u003c9.7f}  {:0\u003e3}\" + standard\n#----DATA----#\nfor coin in coins_usd:\n    data = requests.get(\"https://api.coinmarketcap.com/v1/ticker/{}\".format(coin)).json()[0]\n    coin_data_usd[data[\"symbol\"]] = data['rank']\nfor coin in coins_btc:\n    data = requests.get(\"https://api.coinmarketcap.com/v1/ticker/{}\".format(coin)).json()[0]\n    coin_data_btc[data[\"symbol\"]] = data['rank'] \nraw_usd = requests.get('https://min-api.cryptocompare.com/data/pricemultifull?fsyms={}\u0026tsyms=USD'.format(','.join(coin_data_usd.keys()))).json()['RAW']\nraw_btc = requests.get('https://min-api.cryptocompare.com/data/pricemultifull?fsyms={}\u0026tsyms=BTC'.format(','.join(coin_data_btc.keys()))).json()['RAW']\nraw_cmcbtc = [requests.get('https://api.coinmarketcap.com/v1/ticker/{}'.format(coin)).json()[0] for coin in coins_cmcbtc]\nraw_cmcusd = [requests.get('https://api.coinmarketcap.com/v1/ticker/{}'.format(coin)).json()[0] for coin in coins_cmcusd]\n#---HELPER---#\ndef f(x):\n    return float(x)\n\n#----DISPLAY----#\nprint('COIN     USD     CHANGE   OPEN      HIGH       LOW    RANK|font=\"Menlo\"')\n#---USD---#\nfor i, coin in enumerate(coin_data_usd.keys()):\n    data = raw_usd[coin][\"USD\"]\n    print(usd.format(coin,data[\"PRICE\"],data['CHANGEPCT24HOUR'],data['OPEN24HOUR'],data['HIGH24HOUR'],data['LOW24HOUR'],coin_data_usd[coin],coins_usd[i]))\nfor i, coin in enumerate(coins_cmcusd):\n    data = raw_cmcusd[i]\n    print(usd.format(data[\"symbol\"],f(data[\"price_usd\"]),f(data['percent_change_24h']),f(data[\"price_usd\"])*((100-f(data['percent_change_24h']))/100),0.000,0.000,data['rank'],coin))\n#---BTC---#\nprint('COIN     BTC     CHANGE   OPEN      HIGH       LOW    RANK|font=\"Menlo\"')\nfor i, coin in enumerate(coin_data_btc.keys()):\n    data = raw_btc[coin][\"BTC\"]\n    print(btc.format(coin,data[\"PRICE\"],data['CHANGEPCT24HOUR'],data['OPEN24HOUR'],data['HIGH24HOUR'],data['LOW24HOUR'],coin_data_btc[coin],coins_btc[i]))\nfor i, coin in enumerate(coins_cmcbtc):\n    data = raw_cmcbtc[i]\n    print(btc.format(data[\"symbol\"],f(data[\"price_btc\"]),f(data['percent_change_24h']),f(data[\"price_btc\"])*((100-f(data['percent_change_24h']))/100),0.000,0.000,data['rank'],coin))\n"
				}
			],
			"path": "Cryptocurrency/coincap.1m.py",
			"filename": "coincap.1m.py",
			"dir": "Cryptocurrency",
			"docsPlugin": "Cryptocurrency/coincap.1m.py.html",
			"docsCategory": "Cryptocurrency.html",
			"pathSegments": [
				"Cryptocurrency"
			],
			"categoryPathSegments": [
				{
					"path": "Cryptocurrency",
					"text": "Cryptocurrency",
					"isLast": true
				}
			],
			"title": "CoinCap",
			"version": "v1.0",
			"author": "Peter Stenger",
			"authors": [
				{
					"name": "Peter Stenger",
					"githubUsername": "reteps",
					"imageURL": "https://avatars.githubusercontent.com/u/13869303?v=4",
					"bio": "17",
					"primary": true
				}
			],
			"desc": "Retrieves trading information about a coin on cryptocompare and coinmarketcap. High \u0026 low not available on CMC.",
			"imageURL": "https://i.imgur.com/a584lGl.png",
			"dependencies": [
				"python3",
				"requests"
			],
			"aboutURL": "",
			"lastUpdated": "2021-03-08T15:21:47.483997Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "Cryptocurrency/CoinbasePrices.sh",
					"filename": "CoinbasePrices.sh",
					"content": "#!/bin/bash\n\n# \u003cbitbar.title\u003eCoinbase Prices\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev1.1\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eMustafa Türksavaş, UdjinM6\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003emustafaturksavas\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eDisplays Coinbase buy prices of Bitcoin, Ethereum, Litecoin, Dash.\u003c/bitbar.desc\u003e\n# \u003cbitbar.image\u003ehttps://media.giphy.com/media/3oEhmKvAlkJHoqalFK/giphy.gif\u003c/bitbar.image\u003e\n# \u003cbitbar.dependencies\u003ebash, python\u003c/bitbar.dependencies\u003e\n#\n# Based on Cryptocurrency Prices plugin by viiraj (github.com/viiraj).\n#\n# I hope this plugin provides value for you and if you feel like it, tips are always appreciated.\n# Bitcoin: 1MYkRDn8KtGeeQSoiafymPPB3mncVi2rKN\n# Ethereum: 0x2F0138E7035d0dB3D5e0B5b3008D8E0746641E09\n# Litecoin: LVYrJcvdBmhazNoAtJhBvaSsyY2kWHwraJ\n\nbitcoin_icon='iVBORw0KGgoAAAANSUhEUgAAACQAAAAkCAQAAABLCVATAAAACXBIWXMAABYlAAAWJQFJUiTwAAABY0lEQVRIx2P4z0AdyEBzg1DAdIYfQJgCZHmCWdsYMAFRBs0BC2UAWT5g1p6hbZAggwIcrgALVQNZSWDWAQY24g3qwRtJ/xgeMqxkCGJgotQgGLzAoEUdg/4zvGQQIxzYLAyODF/gQv0MlgwWDK4MOQxbgV5DKG0nLtZ2wIUykII2EMmoU8QZtAWrQQwMB+HiDygzaDNc/CQlBskwfIKLN5JrkAxDFsMTuOh9BiFSDXoHDI2HDB9RlJ1kECc2r20hkI5OMXhQxyAQzCTNoDJgaAgAvaLLEMkwn+EbkuLvDBLkR78yUoD/Z0gn3yAGhnwk5V2UGBRGLYNmICkvIGzQLqwG8TA0oJQAVvgMymcoYehg+AUXWgoM0kygWC/DbpQ4+89wjYERt0FiRNeNX4GlFJ505EykMacZDPGn7HwCBnxiOMcwjcGJcOEvzqADh2vBQk1AVhaYdZCBc7TKpqJBA9ZiAwDMH49EXcmY2QAAAABJRU5ErkJggg=='\neth_icon='iVBORw0KGgoAAAANSUhEUgAAACQAAAAkCAYAAADhAJiYAAAACXBIWXMAABYlAAAWJQFJUiTwAAAC/UlEQVRYw+WYX6gMcRTH997158GD/7Z7mzm/8/vN7KZNN1ohL+vBG+GmyN8Hrrh0S3nQxQPPIg9S8i9SJEUePVGKuOF6Q0qkkD9JQv6M7xmzzO6dXcvO7JJbp+bOTr/zmXO+55zfb1Ke56X+Jkv980D1/GnS8zXRPFy21/N8okDGmEnG5luOUjsN8/qWAznERx2bHgqQo/jl5M7O8S0DcpWaBYivISDPKHWoVUDtABgQiDCQAGaZZzYdCJHYEABUAokN1BJ47ECiE9FLDSBPK9XbNCA4Oxh2HgUEe5XryE1IHMjYZjqcfakDCPf5SNJAbYbo2lDHVYAgcKnExIBcorURTmsBedrmm5UCjwWIiMZiPDyPdEp8Drpajut3kcBEm2IHMor3l785fQTEcehkAaLTD1ukLLUM9/phjyu09Np13YmxAWWVmoqFPwfpeSrpQbQWoxdd8AUeThnR3Sxxn8O8GjPu6s8o8bG4gNqw4BV/gGrdA0frAHD7lxpCVAC8G88vBMwpiShgZzcMlCPSkg7YLjh+9ruilsgC7IxjYQ3mpQ0DyRvi7T5UcVYPUNhOgifdsIZc5iLCPfinQBD5W6R8az6fH9F4hBzHDrSYRpPbWDbD6miMSNcJtIwOf+8UrNUQkCyGijoPmGmymGVZ4yDSAz+qriqQulHq0thVjsb/+1zSK2Mpe7xlt5S3DNXSwNRad2GMXBoCBOHjuTVSnWJyHRTD2bgb4+HSFEeE+iSFfhpsXgKwywDaZoj3SDT83oVNGu5d/76L5CcS2ViBujKZUXBwL5SSO7A58lsxVRwmFkQuI03Q39oGOsKpZG4iwxXOZiAFn8JakR6DqFChUBgOwC1oEW/Kfifem+x+iHhHRFnfB8z2iKE6iBk2MukdY1pGSR2j472xzJSmbGGVUlyWmgggpHJzU08dEO6q6kDqYlD2zT0oomGergTSil+UOnPTgZC6MYB6VHFy7W7t2R69CFF54H9sQPNs+ceG4JzWi0itkOaZONB/9wXtG+MF7xgwhWr8AAAAAElFTkSuQmCC'\nltc_icon='iVBORw0KGgoAAAANSUhEUgAAACQAAAAkCAQAAABLCVATAAAACXBIWXMAABYlAAAWJQFJUiTwAAABVklEQVRIx2P8z0AdwMRALfAfC8QA3ijSW8l3kRkK7xT5BpkSNog4r71GkRYh1yBFFMl75McaESFEnEGoIXQahZfAYEC81w6hSNrCxUUZ1jP8YeAm1iBmhi9IUgiNAQwvgfxLxAe2LooURCMfwwIofw5MGQsZacgRaIwcRtATdNEMFKl8hgkM/+C8VQwCxBt0FkXqA5z1jiGSlATJwfALq5IdDFKkpWwLLNJfGDJIzyJ5GJJHGJTJyWuLUSR+MpTjzAsEDLqJImFFXgkpwrAWRfg1eUWtH8MLNOFt5BjUh0W4kXSDGBk+YhH2Jt0gRazCoqTXa/pA/IahAEXsIf7Axm6QHsMmBh2Gx8QUsfiLkVUMTRhl9XlgvsMN/uFLR3uxSmKHq3EX/owMJiTU/KdxG6QBLFCJB6eYiKzN8IN/DGepY9BNhs+4C39Dhr9EG3QSGKSDrsUGAN8MmUJvvpOgAAAAAElFTkSuQmCC'\ndash_icon='iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAABYlAAAWJQFJUiTwAAAAB3RJTUUH4wsdAAwGzHGX5gAAAg5JREFUWMPt1z1oVEEQB/DfhRON+JXCmGKDIoiKmEIhIIhKCmsLwSKihb0EXikWChYi1ykIQggIFjaCglUghWJhLCwUFItYPPwKQvBiJDEhFnkHIu/d7TsuscnAcTA7uzPz35n/7GNd/rNUoqxq6QhGSpw7i3f4hQk8lYQveYbVyAMPYHfJ5A5l/+ezJF5mSUxKwmLDqCsi+y3Y2wG0B/ECd9XS7jIIbMbODl77JWxqINMVsWE79uB3i98CliKDGFZLT8Yi8B1J5qCZLKMbIauXY9if6fOK/RYGK6vSW7W0msF8EbebJLavsuqNXkuv42rOSh1DXWvANfcxV0ABfWsRwCymCmpmvvoXVGcwip4Sh8/jsCR8aMG2eVe9hB/VzPkRPGoju0lMR7Rxf45+AVONK7jcJrxvJGGmhU0PtuboFyXhWyOAC204r+NhhN2JAv3blUqspf34mrFZzPSs4xNGJWEiYs/ZAv3jRit8xkBWlTGyhAVJ+BnBAf04WrA6uhLAymicXqUWHCvQP5eEeuwwapcBb2CoYPVK2QdJGccHcQenCizG8ap5ALV0Q3ZAb4TLZWzEcZzOpmEzVrwpCXOtEOjDvTaeYa3kmiSMx7wJd2Bbh50PS8KDf5VFRdhbciY0kxTn8pw3Q2CgA46f4QnGJKGwzYsC2IX3JdhxJqvs1/iY7a1Lwuz6p9e6tJI/DAh9aD+iV7oAAAAASUVORK5CYII='\n\nbit_price=$(curl -s -H \"CB-Version: 2015-04-08\" \"https://api.coinbase.com/v2/prices/BTC-USD/buy\" | python -c \"import sys, json; print(json.load(sys.stdin)['data']['amount'])\")\neth_price=$(curl -s -H \"CB-Version: 2015-04-08\" \"https://api.coinbase.com/v2/prices/ETH-USD/buy\" | python -c \"import sys, json; print(json.load(sys.stdin)['data']['amount'])\")\nltc_price=$(curl -s -H \"CB-Version: 2015-04-08\" \"https://api.coinbase.com/v2/prices/LTC-USD/buy\" | python -c \"import sys, json; print(json.load(sys.stdin)['data']['amount'])\")\ndash_price=$(curl -s -H \"CB-Version: 2015-04-08\" \"https://api.coinbase.com/v2/prices/DASH-USD/buy\" | python -c \"import sys, json; print(json.load(sys.stdin)['data']['amount'])\")\n\necho \"$bit_price | templateImage=$bitcoin_icon\"\necho \"$eth_price | templateImage=$eth_icon\"\necho \"$ltc_price | templateImage=$ltc_icon\"\necho \"$dash_price | templateImage=$dash_icon\"\n"
				}
			],
			"path": "Cryptocurrency/CoinbasePrices.sh",
			"filename": "CoinbasePrices.sh",
			"dir": "Cryptocurrency",
			"docsPlugin": "Cryptocurrency/CoinbasePrices.sh.html",
			"docsCategory": "Cryptocurrency.html",
			"pathSegments": [
				"Cryptocurrency"
			],
			"categoryPathSegments": [
				{
					"path": "Cryptocurrency",
					"text": "Cryptocurrency",
					"isLast": true
				}
			],
			"title": "Coinbase Prices",
			"version": "v1.1",
			"author": "Mustafa Türksavaş,  UdjinM6",
			"authors": [
				{
					"name": "Mustafa Türksavaş",
					"githubUsername": "mustafaturksavas",
					"imageURL": "https://avatars.githubusercontent.com/u/6232697?v=4",
					"bio": "",
					"primary": true
				},
				{
					"name": "UdjinM6",
					"githubUsername": "",
					"imageURL": "",
					"bio": "",
					"primary": false
				}
			],
			"desc": "Displays Coinbase buy prices of Bitcoin, Ethereum, Litecoin, Dash.",
			"imageURL": "https://media.giphy.com/media/3oEhmKvAlkJHoqalFK/giphy.gif",
			"dependencies": [
				"bash",
				"python"
			],
			"aboutURL": "",
			"lastUpdated": "2021-03-08T15:21:45.815121Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "Cryptocurrency/CoinbaseBuy.1m.rkt",
					"filename": "CoinbaseBuy.1m.rkt",
					"content": "#!/usr/local/bin/racket\n#lang rackjure\n\n; \u003cbitbar.title\u003eCoinbase buy prices\u003c/bitbar.title\u003e\n; \u003cbitbar.version\u003ev1.0\u003c/bitbar.version\u003e\n; \u003cbitbar.author\u003eDaniel Kvasnicka\u003c/bitbar.author\u003e\n; \u003cbitbar.author.github\u003edkvasnicka\u003c/bitbar.author.github\u003e\n; \u003cbitbar.desc\u003eFetches BUY proces for cryptocurrencies traded at Coinbase\u003c/bitbar.desc\u003e\n; \u003cbitbar.dependencies\u003eracket, rackjure package\u003c/bitbar.dependencies\u003e\n \n(require net/url\n         json)\n\n(define currencies '(BTC ETH LTC)) ; change to set watched coins\n(define url-template \"https://api.coinbase.com/v2/prices/~s-USD/buy\") \n\n(define get-json \n  (compose bytes-\u003ejsexpr \n           port-\u003ebytes \n           get-pure-port \n           string-\u003eurl))\n\n(displayln\n  (string-join\n    (map\n      (compose\n        (λ~\u003e 'data 'amount)\n        get-json\n        (curry format url-template))\n      currencies)\n    \" • \"))\n"
				}
			],
			"path": "Cryptocurrency/CoinbaseBuy.1m.rkt",
			"filename": "CoinbaseBuy.1m.rkt",
			"dir": "Cryptocurrency",
			"docsPlugin": "Cryptocurrency/CoinbaseBuy.1m.rkt.html",
			"docsCategory": "Cryptocurrency.html",
			"pathSegments": [
				"Cryptocurrency"
			],
			"categoryPathSegments": [
				{
					"path": "Cryptocurrency",
					"text": "Cryptocurrency",
					"isLast": true
				}
			],
			"title": "Coinbase buy prices",
			"version": "v1.0",
			"author": "Daniel Kvasnicka",
			"authors": [
				{
					"name": "Daniel Kvasnička",
					"githubUsername": "dkvasnicka",
					"imageURL": "https://avatars.githubusercontent.com/u/708118?v=4",
					"bio": "",
					"primary": true
				}
			],
			"desc": "Fetches BUY proces for cryptocurrencies traded at Coinbase",
			"imageURL": "https://xbarapp.com/public/img/xbar-2048.png",
			"dependencies": [
				"racket",
				"rackjure package"
			],
			"aboutURL": "",
			"lastUpdated": "2021-03-08T15:21:45.681491Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "Cryptocurrency/Bitcoin/coinbase.com/accounts.1h.rb",
					"filename": "accounts.1h.rb",
					"content": "#!/usr/bin/env ruby\n# \u003cbitbar.title\u003eCoinbase.com Account Balances\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev1.0\u003c/bitbar.version\u003e\n# \u003cbitbar.dependencies\u003eruby\u003c/bitbar.dependencies\u003e\n# \u003cbitbar.author\u003eBryan Stone\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003eaegixx\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eShows your balances in BTC \u0026 USD.  Be sure you add you API key \u0026 secret.\u003c/bitbar.desc\u003e\n\nrequire 'coinbase/wallet'\n\nAPI_KEY = 'YOUR_API_KEY'\nAPI_SECRET = 'YOUR_SECRET_KEY'\nLAST_BTC_FILE = '~/.bitbar_last_btc_rate'\n\ndef getDelta(current, last)\n  if current != last\n    delta = current - last\n    if delta.positive?\n      { color: 'green', symbol: '▲', amount: delta.abs }\n    else\n      { color: 'red', symbol: '▼', amount: delta.abs }\n    end\n  end\nend\n\ndef printPrimary\n  usd_total = @client.accounts.collect {|a| a.native_balance.amount}.inject(:+)\n  btc_total = @client.accounts.collect {|a| a.balance.amount}.inject(:+)\n  if @delta\n    printf \"1Ƀ = %.2f (#{@delta[:symbol]}%.2f) | color=#{@delta[:color]}\\n\", @current_btc_rate, @delta[:amount]\n    printf \"∑ $%.2f (#{@delta[:symbol]}%.2f) | color=#{@delta[:color]}\\n\", usd_total, (@delta[:amount] * btc_total)\n  else\n    printf \"1Ƀ = %.2f\\n\", @current_btc_rate\n    printf \"∑ $%.2f\\n\", usd_total\n  end\nend\n\ndef printBalance(account)\n  if @delta\n    printf \"%s: $%.2f (#{@delta[:symbol]}%.2f) | color=#{@delta[:color]}\\n\", account.name, account.native_balance.amount, (@delta[:amount] * account.balance.amount)\n  else\n    printf \"%s: $%.2f\\n\", account.name, account.native_balance.amount\n  end\nend\n\n@client = Coinbase::Wallet::Client.new(api_key: API_KEY, api_secret: API_SECRET)\n\nlast_path = File.expand_path(LAST_BTC_FILE)\n@last_btc_rate = BigDecimal.new(File.read(last_path)) if File.exist?(last_path)\n@current_btc_rate = @client.spot_price.amount\n@delta = getDelta(@current_btc_rate, @last_btc_rate)\nFile.open(last_path, 'w') {|f| f.write(@current_btc_rate) }\n\nprintPrimary\nputs '---'\n@client.accounts.each do |account|\n  printBalance(account)\nend\n"
				}
			],
			"path": "Cryptocurrency/Bitcoin/coinbase.com/accounts.1h.rb",
			"filename": "accounts.1h.rb",
			"dir": "Cryptocurrency/Bitcoin/coinbase.com",
			"docsPlugin": "Cryptocurrency/Bitcoin/coinbase.com/accounts.1h.rb.html",
			"docsCategory": "Cryptocurrency/Bitcoin/coinbase.com.html",
			"pathSegments": [
				"Cryptocurrency",
				"Bitcoin",
				"coinbase.com"
			],
			"categoryPathSegments": [
				{
					"path": "Cryptocurrency",
					"text": "Cryptocurrency",
					"isLast": false
				},
				{
					"path": "Cryptocurrency/Bitcoin",
					"text": "Bitcoin",
					"isLast": false
				},
				{
					"path": "Cryptocurrency/Bitcoin/coinbase.com",
					"text": "coinbase.com",
					"isLast": true
				}
			],
			"title": "Coinbase.com Account Balances",
			"version": "v1.0",
			"author": "Bryan Stone",
			"authors": [
				{
					"name": "Bryan Stone",
					"githubUsername": "aegixx",
					"imageURL": "https://avatars.githubusercontent.com/u/7032283?v=4",
					"bio": "Cloud Architect / Platform Engineer / Sr. Software Engineer\r\n\r\nLove bleeding edge and challenges!",
					"primary": true
				}
			],
			"desc": "Shows your balances in BTC \u0026 USD.  Be sure you add you API key \u0026 secret.",
			"imageURL": "https://xbarapp.com/public/img/xbar-2048.png",
			"dependencies": [
				"ruby"
			],
			"aboutURL": "",
			"lastUpdated": "2021-03-08T15:21:45.034624Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "Cryptocurrency/Bitcoin/coinbase.com/buy.10s.sh",
					"filename": "buy.10s.sh",
					"content": "#!/bin/bash\n# \u003cbitbar.title\u003eCoinbase.com Buy\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev1.0\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eMat Ryer\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003ematryer\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eShows latest buy values (in USD) for Bitcoins in the Coinbase exchange.\u003c/bitbar.desc\u003e\n\necho -n \"Buy: $\"; curl -s \"https://coinbase.com/api/v1/prices/buy?currency=USD\" | egrep -o ',\"amount\":\"[0-9]+(\\.)?([0-9]{0,2}\")?' | sed 's/,\"amount\"://'  | sed 's:^.\\(.*\\).$:\\1:'\n"
				}
			],
			"path": "Cryptocurrency/Bitcoin/coinbase.com/buy.10s.sh",
			"filename": "buy.10s.sh",
			"dir": "Cryptocurrency/Bitcoin/coinbase.com",
			"docsPlugin": "Cryptocurrency/Bitcoin/coinbase.com/buy.10s.sh.html",
			"docsCategory": "Cryptocurrency/Bitcoin/coinbase.com.html",
			"pathSegments": [
				"Cryptocurrency",
				"Bitcoin",
				"coinbase.com"
			],
			"categoryPathSegments": [
				{
					"path": "Cryptocurrency",
					"text": "Cryptocurrency",
					"isLast": false
				},
				{
					"path": "Cryptocurrency/Bitcoin",
					"text": "Bitcoin",
					"isLast": false
				},
				{
					"path": "Cryptocurrency/Bitcoin/coinbase.com",
					"text": "coinbase.com",
					"isLast": true
				}
			],
			"title": "Coinbase.com Buy",
			"version": "v1.0",
			"author": "Mat Ryer",
			"authors": [
				{
					"name": "Mat Ryer",
					"githubUsername": "matryer",
					"imageURL": "https://avatars.githubusercontent.com/u/101659?v=4",
					"bio": "Building pace.dev and firesearch.dev - Gopher, developer, speaker, author (Go Programming Blueprints) - BitBar app getbitbar.com - Co-creator Gopherize.me",
					"primary": true
				}
			],
			"desc": "Shows latest buy values (in USD) for Bitcoins in the Coinbase exchange.",
			"imageURL": "https://xbarapp.com/public/img/xbar-2048.png",
			"dependencies": null,
			"aboutURL": "",
			"lastUpdated": "2021-03-08T15:21:45.161509Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "Cryptocurrency/Bitcoin/coinbase.com/sell.10s.sh",
					"filename": "sell.10s.sh",
					"content": "#!/bin/bash\n# \u003cbitbar.title\u003eCoinbase.com Buy\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev1.0\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eMat Ryer\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003ematryer\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eShows latest sell values (in USD) for Bitcoins in the Coinbase exchange.\u003c/bitbar.desc\u003e\n\necho -n \"Sell: $\"; curl -s \"https://coinbase.com/api/v1/prices/sell?currency=USD\" | egrep -o ',\"amount\":\"[0-9]+(\\.)?([0-9]{0,2}\")?' | sed 's/,\"amount\"://'  | sed 's:^.\\(.*\\).$:\\1:'\n"
				}
			],
			"path": "Cryptocurrency/Bitcoin/coinbase.com/sell.10s.sh",
			"filename": "sell.10s.sh",
			"dir": "Cryptocurrency/Bitcoin/coinbase.com",
			"docsPlugin": "Cryptocurrency/Bitcoin/coinbase.com/sell.10s.sh.html",
			"docsCategory": "Cryptocurrency/Bitcoin/coinbase.com.html",
			"pathSegments": [
				"Cryptocurrency",
				"Bitcoin",
				"coinbase.com"
			],
			"categoryPathSegments": [
				{
					"path": "Cryptocurrency",
					"text": "Cryptocurrency",
					"isLast": false
				},
				{
					"path": "Cryptocurrency/Bitcoin",
					"text": "Bitcoin",
					"isLast": false
				},
				{
					"path": "Cryptocurrency/Bitcoin/coinbase.com",
					"text": "coinbase.com",
					"isLast": true
				}
			],
			"title": "Coinbase.com Buy",
			"version": "v1.0",
			"author": "Mat Ryer",
			"authors": [
				{
					"name": "Mat Ryer",
					"githubUsername": "matryer",
					"imageURL": "https://avatars.githubusercontent.com/u/101659?v=4",
					"bio": "Building pace.dev and firesearch.dev - Gopher, developer, speaker, author (Go Programming Blueprints) - BitBar app getbitbar.com - Co-creator Gopherize.me",
					"primary": true
				}
			],
			"desc": "Shows latest sell values (in USD) for Bitcoins in the Coinbase exchange.",
			"imageURL": "https://xbarapp.com/public/img/xbar-2048.png",
			"dependencies": null,
			"aboutURL": "",
			"lastUpdated": "2021-03-08T15:21:45.173378Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "Cryptocurrency/Bitcoin/coinbase.com/buy-and-sell.10s.sh",
					"filename": "buy-and-sell.10s.sh",
					"content": "#!/bin/bash\n# \u003cbitbar.title\u003eCoinbase.com Buy and Sell\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev1.0\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eMat Ryer\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003ematryer\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eShows latest Buy and Sell values (in USD) for Bitcoins in the Coinbase exchange.\u003c/bitbar.desc\u003e\n\necho -n \"Buy: $\"; curl -s \"https://coinbase.com/api/v1/prices/buy?currency=USD\" | egrep -o ',\"amount\":\"[0-9]+(\\.)?([0-9]{0,2}\")?' | sed 's/,\"amount\"://'  | sed 's:^.\\(.*\\).$:\\1:'\necho -n \"Sell: $\"; curl -s \"https://coinbase.com/api/v1/prices/sell?currency=USD\" | egrep -o ',\"amount\":\"[0-9]+(\\.)?([0-9]{0,2}\")?' | sed 's/,\"amount\"://'  | sed 's:^.\\(.*\\).$:\\1:'\n"
				}
			],
			"path": "Cryptocurrency/Bitcoin/coinbase.com/buy-and-sell.10s.sh",
			"filename": "buy-and-sell.10s.sh",
			"dir": "Cryptocurrency/Bitcoin/coinbase.com",
			"docsPlugin": "Cryptocurrency/Bitcoin/coinbase.com/buy-and-sell.10s.sh.html",
			"docsCategory": "Cryptocurrency/Bitcoin/coinbase.com.html",
			"pathSegments": [
				"Cryptocurrency",
				"Bitcoin",
				"coinbase.com"
			],
			"categoryPathSegments": [
				{
					"path": "Cryptocurrency",
					"text": "Cryptocurrency",
					"isLast": false
				},
				{
					"path": "Cryptocurrency/Bitcoin",
					"text": "Bitcoin",
					"isLast": false
				},
				{
					"path": "Cryptocurrency/Bitcoin/coinbase.com",
					"text": "coinbase.com",
					"isLast": true
				}
			],
			"title": "Coinbase.com Buy and Sell",
			"version": "v1.0",
			"author": "Mat Ryer",
			"authors": [
				{
					"name": "Mat Ryer",
					"githubUsername": "matryer",
					"imageURL": "https://avatars.githubusercontent.com/u/101659?v=4",
					"bio": "Building pace.dev and firesearch.dev - Gopher, developer, speaker, author (Go Programming Blueprints) - BitBar app getbitbar.com - Co-creator Gopherize.me",
					"primary": true
				}
			],
			"desc": "Shows latest Buy and Sell values (in USD) for Bitcoins in the Coinbase exchange.",
			"imageURL": "https://xbarapp.com/public/img/xbar-2048.png",
			"dependencies": null,
			"aboutURL": "",
			"lastUpdated": "2021-03-08T15:21:45.157433Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "Cryptocurrency/Bitcoin/coinbase.com/spotrate.10s.sh",
					"filename": "spotrate.10s.sh",
					"content": "#!/bin/bash\n# \u003cbitbar.title\u003eCoinbase.com Spot rate\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev1.0\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eMat Ryer\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003ematryer\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eShows latest spot rate values (in USD) for Bitcoins in the Coinbase exchange.\u003c/bitbar.desc\u003e\n\necho -n \"BTC: $\"; curl -s \"https://coinbase.com/api/v1/prices/spot_rate?currency=USD\" | egrep -o '\"amount\":\"[0-9]+(\\.)?([0-9]{0,2}\")?' | sed 's/\"amount\"://'  | sed 's:^.\\(.*\\).$:\\1:'\n"
				}
			],
			"path": "Cryptocurrency/Bitcoin/coinbase.com/spotrate.10s.sh",
			"filename": "spotrate.10s.sh",
			"dir": "Cryptocurrency/Bitcoin/coinbase.com",
			"docsPlugin": "Cryptocurrency/Bitcoin/coinbase.com/spotrate.10s.sh.html",
			"docsCategory": "Cryptocurrency/Bitcoin/coinbase.com.html",
			"pathSegments": [
				"Cryptocurrency",
				"Bitcoin",
				"coinbase.com"
			],
			"categoryPathSegments": [
				{
					"path": "Cryptocurrency",
					"text": "Cryptocurrency",
					"isLast": false
				},
				{
					"path": "Cryptocurrency/Bitcoin",
					"text": "Bitcoin",
					"isLast": false
				},
				{
					"path": "Cryptocurrency/Bitcoin/coinbase.com",
					"text": "coinbase.com",
					"isLast": true
				}
			],
			"title": "Coinbase.com Spot rate",
			"version": "v1.0",
			"author": "Mat Ryer",
			"authors": [
				{
					"name": "Mat Ryer",
					"githubUsername": "matryer",
					"imageURL": "https://avatars.githubusercontent.com/u/101659?v=4",
					"bio": "Building pace.dev and firesearch.dev - Gopher, developer, speaker, author (Go Programming Blueprints) - BitBar app getbitbar.com - Co-creator Gopherize.me",
					"primary": true
				}
			],
			"desc": "Shows latest spot rate values (in USD) for Bitcoins in the Coinbase exchange.",
			"imageURL": "https://xbarapp.com/public/img/xbar-2048.png",
			"dependencies": null,
			"aboutURL": "",
			"lastUpdated": "2021-03-08T15:21:45.175359Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "Cryptocurrency/Bitcoin/coinbase.com/balance.1h.sh",
					"filename": "balance.1h.sh",
					"content": "#!/bin/bash\n# \u003cbitbar.title\u003eCoinbase.com Your Balance\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev1.1\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eMat Ryer\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003ematryer\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eShows your balance in BTC.  Be sure you add your API \u0026 account details.\u003c/bitbar.desc\u003e\n\nAPI_KEY=\"YOUR_API_KEY\"\nAPI_SECRET=\"YOUR_API_SECRET\"\nACCOUNT_ID=\"YOUR_ACCOUNT_ID\"\nAPI_VERSION=\"2017-08-07\" # You'll need to verify this in your Account Details\n\nREQUEST_METHOD=\"GET\"\nREQUEST_URL=\"https://api.coinbase.com\"\nREQUEST_PATH=\"/v2/accounts/${ACCOUNT_ID}\"\n\nTIMESTAMP=$(date +%s)\nSIGNATURE=$(echo -n \"${TIMESTAMP}${REQUEST_METHOD}${REQUEST_PATH}\" | openssl dgst -sha256 -hmac \"${API_SECRET}\")\n\nBTC_BALANCE=$(curl -s ${REQUEST_URL}${REQUEST_PATH} \\\n  --request ${REQUEST_METHOD} \\\n  --header \"CB-VERSION: ${API_VERSION}\" \\\n  --header \"CB-ACCESS-KEY: ${API_KEY}\" \\\n  --header \"CB-ACCESS-SIGN: ${SIGNATURE}\" \\\n  --header \"CB-ACCESS-TIMESTAMP: ${TIMESTAMP}\" | jq -r \".data.balance.amount\")\n\nLAST_BTC_RATE=$(cat ~/.bitbar_last_btc_rate)\nLAST_USD_BALANCE=$(cat ~/.bitbar_last_usd_balance)\n\nBTC_RATE=$(curl -s https://api.coinbase.com/v2/prices/BTC-USD/spot | jq -r '.data.amount')\nUSD_BALANCE=$(echo \"$BTC_BALANCE * $BTC_RATE\" | bc)\n\nDELTA_USD=$(printf \"%.2f\" \"$(echo \"$USD_BALANCE-${LAST_USD_BALANCE:-0}\" | bc)\")\nDELTA_BTC=$(printf \"%.2f\" \"$(echo \"$BTC_RATE-${LAST_BTC_RATE:-0}\" | bc)\")\n\nif [ \"$(echo \"$DELTA_BTC \u003e 0.00\" | bc)\" -eq \"1\" ]; then\n  HIDE_DELTA=0\n  CHG_SYMBOL=\"▲ \"\n  COLOR=green\nelif [ \"$(echo \"$DELTA_BTC \u003c 0.00\" | bc)\" -eq \"1\" ]; then\n  HIDE_DELTA=0\n  CHG_SYMBOL=\"▼ \"\n  COLOR=red\n  DELTA_BTC=${DELTA_BTC#-}\n  DELTA_USD=${DELTA_USD#-}\nelse\n  HIDE_DELTA=1\nfi\n\necho -n \"$BTC_RATE\" \u003e ~/.bitbar_last_btc_rate\necho -n \"$USD_BALANCE\" \u003e ~/.bitbar_last_usd_balance\n\nif [ \"$HIDE_DELTA\" -eq \"1\" ]; then\n  printf \"Ƀ%.2f\\n\" \"${BTC_RATE}\"\n  printf \"$%.2f\\n\" \"${USD_BALANCE}\"\nelse\n  printf \"Ƀ%.2f (${CHG_SYMBOL}%.2f) | color=$COLOR\\n\" \"${BTC_RATE}\" \"${DELTA_BTC}\"\n  printf \"$%.2f (${CHG_SYMBOL}%.2f) | color=$COLOR\\n\" \"${USD_BALANCE}\" \"${DELTA_USD}\"\nfi\necho \"---\"\nprintf \"Balance: %f (%.2f)\" \"${BTC_BALANCE}\" \"${USD_BALANCE}\"\n"
				}
			],
			"path": "Cryptocurrency/Bitcoin/coinbase.com/balance.1h.sh",
			"filename": "balance.1h.sh",
			"dir": "Cryptocurrency/Bitcoin/coinbase.com",
			"docsPlugin": "Cryptocurrency/Bitcoin/coinbase.com/balance.1h.sh.html",
			"docsCategory": "Cryptocurrency/Bitcoin/coinbase.com.html",
			"pathSegments": [
				"Cryptocurrency",
				"Bitcoin",
				"coinbase.com"
			],
			"categoryPathSegments": [
				{
					"path": "Cryptocurrency",
					"text": "Cryptocurrency",
					"isLast": false
				},
				{
					"path": "Cryptocurrency/Bitcoin",
					"text": "Bitcoin",
					"isLast": false
				},
				{
					"path": "Cryptocurrency/Bitcoin/coinbase.com",
					"text": "coinbase.com",
					"isLast": true
				}
			],
			"title": "Coinbase.com Your Balance",
			"version": "v1.1",
			"author": "Mat Ryer",
			"authors": [
				{
					"name": "Mat Ryer",
					"githubUsername": "matryer",
					"imageURL": "https://avatars.githubusercontent.com/u/101659?v=4",
					"bio": "Building pace.dev and firesearch.dev - Gopher, developer, speaker, author (Go Programming Blueprints) - BitBar app getbitbar.com - Co-creator Gopherize.me",
					"primary": true
				}
			],
			"desc": "Shows your balance in BTC.  Be sure you add your API \u0026 account details.",
			"imageURL": "https://xbarapp.com/public/img/xbar-2048.png",
			"dependencies": null,
			"aboutURL": "",
			"lastUpdated": "2021-03-08T15:21:45.110128Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "Cryptocurrency/coincaplite.1m.py",
					"filename": "coincaplite.1m.py",
					"content": "#!/usr/bin/env PYTHONIOENCODING=UTF-8 /usr/local/bin/python3\n\nimport requests\n\n# \u003cbitbar.title\u003eCoincap Lite\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev1.0\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003ePeter Stenger\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003ereteps\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eRetrieves trading information about a coin on coinmarketcap using the v2 api. \u003c/bitbar.desc\u003e\n# \u003cbitbar.image\u003ehttps://i.imgur.com/NiRqDUt.png\u003c/bitbar.image\u003e\n# \u003cbitbar.dependencies\u003epython3\u003c/bitbar.dependencies\u003e\n\ncoins_usd = ['bitcoin','ethereum','litecoin']\n\ncoins_btc = ['stellar','monero']\n\nclass DoesNotExistError(Exception):\n    pass\n\ndef return_id(name):\n    for coin in ALL_COINS:\n        if coin[\"website_slug\"] == name:\n            return coin[\"id\"]\n    raise DoesNotExistError(\"Could not find the coin {}. Is that the full name coinmarketcap uses in it's URL?\".format(name))\n\ndef display_coins(coins, display_in=\"USD\"):\n    formats = {\n            \"USD\":\"{: \u003c5} {:0\u003c9.3f} {:0\u003c+6.2f}% {:0\u003c+6.2f}% {:0\u003e3}|href='https://coinmarketcap.com/currencies/{}' font='Menlo'\",\n            \"BTC\":\"{: \u003c5} {:0\u003c9.7f} {:0\u003c+6.2f}% {:0\u003c+6.2f}% {:0\u003e3}|href='https://coinmarketcap.com/currencies/{}' font='Menlo'\"\n    }\n    for coin in coins:\n        coin_id = return_id(coin)\n        data = requests.get(\"https://api.coinmarketcap.com/v2/ticker/{}?convert={}\".format(coin_id, display_in)).json()[\"data\"]\n        print(formats[display_in].format(data[\"symbol\"], data[\"quotes\"][display_in][\"price\"], data[\"quotes\"][display_in][\"percent_change_24h\"], \\\n                data[\"quotes\"][display_in][\"percent_change_7d\"], data[\"rank\"], data[\"website_slug\"]))\n\n\nprint('Ƀ')\nprint('---')\nALL_COINS = requests.get(\"https://api.coinmarketcap.com/v2/listings\").json()[\"data\"]\nIMAGE_URL = \"https://s2.coinmarketcap.com/generated/sparklines/web/7d/usd/{}.png\"\nprint('COIN     USD    24 HOUR  7 DAY  RANK|font=\"Menlo\"')\ndisplay_coins(coins_usd)\nprint('COIN     BTC    24 HOUR  7 DAY  RANK|font=\"Menlo\"')\ndisplay_coins(coins_btc, display_in=\"BTC\")\n"
				}
			],
			"path": "Cryptocurrency/coincaplite.1m.py",
			"filename": "coincaplite.1m.py",
			"dir": "Cryptocurrency",
			"docsPlugin": "Cryptocurrency/coincaplite.1m.py.html",
			"docsCategory": "Cryptocurrency.html",
			"pathSegments": [
				"Cryptocurrency"
			],
			"categoryPathSegments": [
				{
					"path": "Cryptocurrency",
					"text": "Cryptocurrency",
					"isLast": true
				}
			],
			"title": "Coincap Lite",
			"version": "v1.0",
			"author": "Peter Stenger",
			"authors": [
				{
					"name": "Peter Stenger",
					"githubUsername": "reteps",
					"imageURL": "https://avatars.githubusercontent.com/u/13869303?v=4",
					"bio": "17",
					"primary": true
				}
			],
			"desc": "Retrieves trading information about a coin on coinmarketcap using the v2 api. ",
			"imageURL": "https://i.imgur.com/NiRqDUt.png",
			"dependencies": [
				"python3"
			],
			"aboutURL": "",
			"lastUpdated": "2021-03-08T15:21:47.506037Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "Cryptocurrency/Bitcoin/coinone.co.kr/coinone.15s.py",
					"filename": "coinone.15s.py",
					"content": "#!/usr/bin/env python\n\n# \u003cbitbar.title\u003eCoinone Ticker\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev1.0\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eSunwoo Lee\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003eeldkqmfhf123\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003ecoineone.co.kr Ticker\u003c/bitbar.desc\u003e\n\n\nimport urllib2\nimport json\n\n\ndef parse():\n    base_url = 'https://api.coinone.co.kr/ticker/?currency='\n    # You can change it to btc / eth / etc / xrp\n    currency = 'btc'\n\n    url = base_url + currency\n\n    response = urllib2.urlopen(url).read()\n    response_data = json.loads(response)\n\n    print \"{0}: {1}\".format(currency.upper(), response_data['last'])\n    print \"---\"\n    print \"By Skriex | href=http://github.com/eldkqmfhf123\"\n\n\nif __name__ == '__main__':\n    parse()\n"
				}
			],
			"path": "Cryptocurrency/Bitcoin/coinone.co.kr/coinone.15s.py",
			"filename": "coinone.15s.py",
			"dir": "Cryptocurrency/Bitcoin/coinone.co.kr",
			"docsPlugin": "Cryptocurrency/Bitcoin/coinone.co.kr/coinone.15s.py.html",
			"docsCategory": "Cryptocurrency/Bitcoin/coinone.co.kr.html",
			"pathSegments": [
				"Cryptocurrency",
				"Bitcoin",
				"coinone.co.kr"
			],
			"categoryPathSegments": [
				{
					"path": "Cryptocurrency",
					"text": "Cryptocurrency",
					"isLast": false
				},
				{
					"path": "Cryptocurrency/Bitcoin",
					"text": "Bitcoin",
					"isLast": false
				},
				{
					"path": "Cryptocurrency/Bitcoin/coinone.co.kr",
					"text": "coinone.co.kr",
					"isLast": true
				}
			],
			"title": "Coinone Ticker",
			"version": "v1.0",
			"author": "Sunwoo Lee",
			"authors": [
				{
					"name": "Sun-woo, Lee",
					"githubUsername": "eldkqmfhf123",
					"imageURL": "https://avatars.githubusercontent.com/u/6386021?v=4",
					"bio": "",
					"primary": true
				}
			],
			"desc": "coineone.co.kr Ticker",
			"imageURL": "https://xbarapp.com/public/img/xbar-2048.png",
			"dependencies": null,
			"aboutURL": "",
			"lastUpdated": "2021-03-08T15:21:45.499913Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "Cryptocurrency/99-crypto.py",
					"filename": "99-crypto.py",
					"content": "#!/usr/bin/env python\n# coding=utf-8\n\"\"\"\n# \u003cbitbar.title\u003eCrypto Ticker ($1USD)\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev2.0\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003edavidosomething\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003edavidosomething\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003e\n#   Displays current crypto/$1 from Coinmarketcap\n# \u003c/bitbar.desc\u003e\n# \u003cbitbar.image\u003ehttps://i.imgur.com/B1nq4AU.jpg\u003c/bitbar.image\u003e\n\"\"\"\n\nimport json\nimport urllib2\n\nTICKERS = [\n    {\n        'symbol': 'btc',\n        'sign': 'B',\n    },\n    {\n        'symbol': 'eth',\n        'sign': '𝚵',\n    },\n]\n\nSYMBOLS = {\n    'up': 'iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QAyQACAALwzIS'\n          'XAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH4AQHACkSBTjB+AAAALNJREFUOM'\n          'vVk70NAjEMhb87WYiGBZAQU7ABNSVSWpZgEEagsJDoKBELUCEKFuBuCKTw0xyQC0lIC'\n          'e5i+/k9/wT+3opUUJQhcAUqa8I5ZQT4tANwioGTCkQZA9vmOQE2oUJFhL0DXBz33RpK'\n          'UfCLfLTQJMx9IlEWuQr6QB3prGtNS1lwiMvEYo7ekNsKRBkB+y+rH1hDFVOwy7ids+g'\n          'bVzrsM6CXeYDTF85xroB1ZoHb73ymB5RhJkpZTihGAAAAAElFTkSuQmCC',\n    'down': 'iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QABACnAADQ9'\n            'FZaAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH4AQHACQ1FZwK3gAAAMRJRE'\n            'FUOMvNkjEKAjEQRZ+jKNjYKh5AbzCdjVcQj+BFPIKlp7EMeAJrUbASQVCEr80uG9c'\n            'Nbqe/Cgn/5WUI/DqNfBHM+kCzbs+lPUAr2pwBq5qABbB+M8gszkDvS/kOdAG5VBgE'\n            'M4ApsP0CGLukjxlEoA0wSZR3Lo0qhxhZDIBDAmDA0wsBLD51CZeOwLKivHbprZx6A'\n            'kAHuEXbD5fawYwywMqAzOKeDTTPvKqcTGZBMLsGs0utn5gADYEHcKp9e9ni//MCDt'\n            'NCE3qjsIwAAAAASUVORK5CYII=',\n}\n\n\ndef main():\n    \"\"\"\n    Display movement icon, symbol, price\n    \"\"\"\n\n    for ticker in TICKERS:\n        currency = 'usd'\n        symbol = ticker['symbol']\n\n        \"\"\"cryptomate\n        \"\"\"\n        currency = currency.upper()\n        symbol = symbol.upper()\n        api_base = 'https://cryptomate.co.uk/api/'\n        url = api_base + symbol + '/' + currency\n\n        \"\"\"coinmarketcap\n        api_base = 'https://coinmarketcap-nexuist.rhcloud.com/api/'\n        url = api_base + symbol\n        \"\"\"\n\n        request = urllib2.Request(url)\n        response = urllib2.urlopen(request).read()\n        result = json.loads(response)\n\n        \"\"\"cryptomate\n        \"\"\"\n        value = float(result[symbol]['price'])\n        is_up = result[symbol]['change'] \u003e 0\n\n        \"\"\"coinmarketcap\n        value = float(result['price']['usd'])\n        is_up = result['change'] \u003e 0\n        \"\"\"\n\n        # symbol = SYMBOLS['up' if result['change'] \u003e 0 else 'down']\n        if is_up:\n            symbol = ':chart_with_upwards_trend: '\n        else:\n            symbol = ':chart_with_downwards_trend: '\n        output = ''.join((\n            # ' ',\n            symbol,\n            ticker['sign'],\n            '%.2f',\n            ' | size=12'\n            # '| image=', symbol,\n            # ' color=#000000'\n        ))\n        print(output % value)\n\n    print('---')\n    print('Refresh | refresh=true')\n\n\nif __name__ == \"__main__\":\n    main()\n"
				}
			],
			"path": "Cryptocurrency/99-crypto.py",
			"filename": "99-crypto.py",
			"dir": "Cryptocurrency",
			"docsPlugin": "Cryptocurrency/99-crypto.py.html",
			"docsCategory": "Cryptocurrency.html",
			"pathSegments": [
				"Cryptocurrency"
			],
			"categoryPathSegments": [
				{
					"path": "Cryptocurrency",
					"text": "Cryptocurrency",
					"isLast": true
				}
			],
			"title": "Crypto Ticker ($1USD)",
			"version": "v2.0",
			"author": "davidosomething",
			"authors": [
				{
					"name": "David O'Trakoun",
					"githubUsername": "davidosomething",
					"imageURL": "https://avatars.githubusercontent.com/u/609213?v=4",
					"bio": "middle out",
					"primary": true
				}
			],
			"desc": "",
			"imageURL": "https://i.imgur.com/B1nq4AU.jpg",
			"dependencies": null,
			"aboutURL": "",
			"lastUpdated": "2021-03-08T15:21:44.37361Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "Cryptocurrency/c20.py",
					"filename": "c20.py",
					"content": "#!/usr/bin/python\n\n# \u003cbitbar.title\u003eCrypto20\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev1.0\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eChristopher Chen\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003ecchen408\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eDisplay Nav and Underlying Asset Information\u003c/bitbar.desc\u003e\n# \u003cbitbar.image\u003ehttps://raw.githubusercontent.com/cchen408/bitbar-c20/master/screenshots/chris.png\u003c/bitbar.image\u003e\n# \u003cbitbar.dependencies\u003epython\u003c/bitbar.dependencies\u003e\n# \u003cbitbar.abouturl\u003ehttps://github.com/cchen408/bitbar-c20\u003c/bitbar.abouturl\u003e\n\nimport json\nfrom urllib import urlopen\n\n# change this to the number of C20 tokens that you own\nnumber_of_c20 = 125438.3242\n\nresult = json.loads(urlopen('https://crypto20.com/status').read())\nbtg_result = json.loads(urlopen('https://api.coinmarketcap.com/v1/ticker/bitcoin-gold/').read())\neth_result = json.loads(urlopen('https://api.coinmarketcap.com/v1/ticker/ethereum').read())\nbtc_result = json.loads(urlopen('https://api.coinmarketcap.com/v1/ticker/bitcoin').read())\ntop_25_result = json.loads(urlopen('https://api.coinmarketcap.com/v1/ticker/?limit=25').read())\ncrypto_global_result = json.loads(urlopen('https://api.coinmarketcap.com/v1/global/').read())\n\n# parse out price and put here\nsymbol_price = {\n    'bitcoin-gold': btg_result[0]['price_usd']\n};\n\n# loop through prices rather than call api more than once\nfor c in top_25_result:\n    symbol_price[c['id']] = float(c['price_usd'])\n\n# symbol to name map\nsymbol_path_map = {\n    'BTC': 'bitcoin',\n    'ETH': 'ethereum',\n    'BCH': 'bitcoin-cash',\n    'XRP': 'ripple',\n    'DASH': 'dash',\n    'LTC': 'litecoin',\n    'MIOTA': 'iota',\n    'XMR': 'monero',\n    'NEO': 'neo',\n    'XEM': 'nem',\n    'ETC': 'ethereum-classic',\n    'LSK': 'lisk',\n    'QTUM': 'qtum',\n    'EOS': 'eos',\n    'ZEC': 'zcash',\n    'OMG': 'omisego',\n    'ADA': 'cardano',\n    'HSR': 'hshare',\n    'XLM': 'stellar',\n    'WAVES': 'waves',\n    'PPT': 'populous',\n    'STRAT': 'stratis',\n    'BTS': 'bitshares',\n    'ARK': 'ark',\n    'BTG': 'bitcoin-gold'\n}\n\n# symbol to icon map\n# To generate the images, grab the image (PNG) and increase the DPI from 72 to\n# 144. Then resize the image to 32x32. Finally encode the image into base 64.\n# i.e. base64 --input bitcoin.png\n# Then add the resulting encoded text to the correct map entry below.\nsymbol_image_map = {\n    'C20': 'iVBORw0KGgoAAAANSUhEUgAAACAAAAAlCAYAAAAjt+tHAAAAAXNSR0IArs4c6QAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAABYlAAAWJQFJUiTwAAADRGlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iWE1QIENvcmUgNS40LjAiPgogICA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPgogICAgICA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIgogICAgICAgICAgICB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iCiAgICAgICAgICAgIHhtbG5zOnRpZmY9Imh0dHA6Ly9ucy5hZG9iZS5jb20vdGlmZi8xLjAvIgogICAgICAgICAgICB4bWxuczpleGlmPSJodHRwOi8vbnMuYWRvYmUuY29tL2V4aWYvMS4wLyI+CiAgICAgICAgIDx4bXA6TW9kaWZ5RGF0ZT4yMDE3LTExLTIwVDA3OjExOjYzPC94bXA6TW9kaWZ5RGF0ZT4KICAgICAgICAgPHhtcDpDcmVhdG9yVG9vbD5QaXhlbG1hdG9yIDMuNzwveG1wOkNyZWF0b3JUb29sPgogICAgICAgICA8dGlmZjpPcmllbnRhdGlvbj4xPC90aWZmOk9yaWVudGF0aW9uPgogICAgICAgICA8dGlmZjpSZXNvbHV0aW9uVW5pdD4yPC90aWZmOlJlc29sdXRpb25Vbml0PgogICAgICAgICA8dGlmZjpDb21wcmVzc2lvbj41PC90aWZmOkNvbXByZXNzaW9uPgogICAgICAgICA8ZXhpZjpQaXhlbFhEaW1lbnNpb24+Mjg8L2V4aWY6UGl4ZWxYRGltZW5zaW9uPgogICAgICAgICA8ZXhpZjpDb2xvclNwYWNlPjE8L2V4aWY6Q29sb3JTcGFjZT4KICAgICAgICAgPGV4aWY6UGl4ZWxZRGltZW5zaW9uPjMyPC9leGlmOlBpeGVsWURpbWVuc2lv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',\n    'BTC': 'iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAABYlAAAWJQFJUiTwAAABWWlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iWE1QIENvcmUgNS40LjAiPgogICA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPgogICAgICA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIgogICAgICAgICAgICB4bWxuczp0aWZmPSJodHRwOi8vbnMuYWRvYmUuY29tL3RpZmYvMS4wLyI+CiAgICAgICAgIDx0aWZmOk9yaWVudGF0aW9uPjE8L3RpZmY6T3JpZW50YXRpb24+CiAgICAgIDwvcmRmOkRlc2NyaXB0aW9uPgogICA8L3JkZjpSREY+CjwveDp4bXBtZXRhPgpMwidZAAAI4ElEQVRYCXVXfWxeVRl/zjn3vn3bdXau+6CwOqyrSFzDNkRGBCwdMAFNRNMlEjCiKMkSZ6IxhgTH3H/wh2bzH2NikCwxZMPNOYVNcNRBnAIbGy12uA8Z1I2Nduto14/3ng9/v3Pf277r5sn73nvPc57z/J7ve66S/zNCECXburVas82RJexe3SKTaZd3fpUyeoW3vtVZmcO1JFXnRakBCf5gMPqvxmZ71df3nI77tnYb6d7mlZLA+cyhZhI4D9hUAE/++d6OxOl1wYb7TUk3RzGZEwu1vM9laq0kMdiY4gKJvmKHdGJ2iDGb1X07e2fK5LwYlykQXu5M1B09NjzdWfZzGzeK8z/QJV1yY1acC040VAhKiwq0Kd/Pp6AwC168KGPwa0igiK/oVG+S8fonYNB4IbsA5/0SBQqGsOuudm/1Vp0myyojFfJZcNI8QNV4EtMoItKq9EgDIQhDl5RmlyRk7rBKXLf6yotHCwwK5ZhSoFgIz9+z3E24PUbU/MqEzUSrZMrSfM/0lcDBiug60DykJZgTd0pJKBJsqZykTsKHpmxWq3tfeLPAoiDNS4w53b7ry+0R3HmAZ5AsKQKdWw3vRrmUTWAPIA3A0lwRN5yvTb6P57F8PfJjL2RQloFMyiZGDDGTE0NBloqOfbmzHIaS/XheVplAfsN9ZJgekBUyTHFPkPwA04vul+T2H4rr2yXurZ9i/qCE4X4JE2dyvunNfIInTIK8PaRH7C3q4Z4JYmuWGlf9kNmoSmFZZSwDSoDbaXH1T9MDciGZhT/cPfY8gN4UtXB5pIVJWN24XJKuJ8Tc9CMo1wM9S9jDfVMyEsrWwPCz1UZixjLnPWy9vcN6ecNloYSYM4GmcoProutFRvfA2hfFfPLz4k/3iz/TJ+ZTnaKa26SyZb6oto2SfmGt2N6d4l7/qkj9l2AVFKsdrBZWSaqyRIcb1Zp9vdHNLqh1SUmVXAbXe1g/c3hEJGmCIrCo9DHRi2+O/8gGC5M79ohqvCqf/rcHIYADyowiw8akrNqTG2aTkk5dJuuw8F0Vfn9bi6tIb3C+2dH2mdZHsZSBSMEi1XidpKueFNW0CMKhUJRdBeD2C6fEHf+buN4NWKPSDVUlqoLgBaOQd0YPmZJ0aJf5LpNKc2wygVmLmF3pT0tUg4TzvxPJxnNpyFh3ZLdk+38t/oO3I001XSPJigckXb0d4FSaictRlQsM57xDGJoF2Bpl1hXdpJCfMWGYOFf401Q7iJh/S9THP5HLhFLu6J/EHXhUsj8ulezvvwIOktV70VctFdPxE5Hx/VCcCclkpFzcWXvc69wqdPFwY6iA6D2bLAYvM/7ciEYYKv1oTzfhkY0HXCNnJAy9Ak93ijTcLe7gWlTTf3LLsa6paK0oTjgHVqg4xCGsSIJ1rYg9RuztOQOnlw30DfaeBZ+dWglj50TVzUN7QLZP9Ihpf0x0zA2wwGFh9EOAkR0XhjDixDVlbUDBSWuCeDRV6UUmcceMgSV3EZndKnpua74Gr9DNpW+8JOGjD0QqWKfFhXfGBsW9/YxI3aeBz5wp0OMjAs58lyaUHG41azOQ86mC9faMqDm3wd1XV1m8uBP/EDWrGV5ZAounqzcMvyvZC4/AA31oxNdCAb7QrmAfSNpof4G9B1y40F81fyYMtVNoRPYkOt9K9IMyaKCOnhX7l1sl23G9VJ57QFz/blDJD/amVjFLUeaeLbmwrkYusIgZsVEp76caizxdIHsv+XMzm1CG/n4B2i5cGgF4CecHcqMa7sRan2S77xH3rz35OjxmOu6Dwt9DW/43mFmOl8gOxCR2Erw7oBJzA2qSKoKzGHh0oyLlayXt+i2620XRV08r4N57De8D6KBPYhebDX5Dx/LNrBq4V81aiJfmsKiU7i88EVnQPrVGARxIwLsXSN9GjZJremi4evywmBseF33Niml6fIL2rSjHlT+HJ/ph5QXRLXeDtzvnoyT02nD+GBr/fGDDi1RqeoADJwRgq7Dl+hab6T6Eb64LIBWtmInncNac24nXbCfqv130/DbEFy24drDTMX0M+LmHjoRv/XtvSLYTSjZ8DrSal1JsxTgBaDlngu3Q6qH+09r47TG3PIuVkcCf737dJGFwh9jXH5Fs+xfFvvqLCO0H30W/fwU8BEuRmOh0BOcAeBg6Ltm+9aiAeeCZBLEqk3dgEEsBU33nnVOxdqwPm7V33wQ3eya8EA922AglksWofzSbsE/Uok7Q4JhDz4o//piYR5G3Z46IO/ysqHnMDy/h3DHxJ54EE2o/+QxIVKAaXb6OcdawlVCBzpspKwlbBUfwI73umes2JbPUj8dHg1XKp1M5w/jZEfKKnrMAV4AO/EF0x28izQ+8Jfa1n4majRX4LzqiDGCe09mA+BaN/Z83Zesbdepd2KQefKeX2Il0R/+I9pPrrUvvqq9TyyYmgIqjfkSgJh4K1LVJ1vM4XkYdeAf8E31nLRw0Iv4UmtEccNbfLCq++aCwx4GA5csRewnuXmx9WaU+s4e0HFsf14AdfZN7QVx4uq0dh5NXjZcFE5VaJcgOVj8Ib6AhlJbAxcjw+pVI8I/wfLFqehR7+SWILZdwMDdyFq+0W9XDJ44WmLHu1RqAb8AHCRZMnV7tdDhbrsPJyFdTnFbQvxpJVQf3MixmiYTx4zk420fkIV/Nn+UBGZRFmfiyWh3BN0hCzKpZ0woX53V6At+A+DBBOEYhEHbDAUzzPJtY0jFPSYIc1jhXIh13PlU/TMqNKMlKOKQTvSaCV7+8Ihcu0QPFJJ7XqR08oY3cAr88laShUm5ASsVPMXwMBAYXxR5gHUs1xpiVwwesobWSt1wvCfci4Z7C5wOO4XA7ZeP7o8DjPbeoloLnIj4kwxsdOLp831n/tXiMonHARenGnkMelD46Kw56aAkU6WwYMkZvR3P6JYCrH6esttzt5CrGFRXgImzC5znODNVNYcviFjfuuhDWO9HHlsPeVsuzBHpGmsgwDpkDoB3EyfklU2/2qodOno5yUGqsNESMAbps/A9FzaQ9d7SWsgAAAABJRU5ErkJggg==',\n    'ETH': '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',\n    'BCH': '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',\n    'XRP': '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',\n    'DASH': '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',\n    'LTC': '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',\n    'MIOTA': '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',\n    'XMR': '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',\n    'NEO': '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',\n    'XEM': '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',\n    'ETC': 'iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAABYlAAAWJQFJUiTwAAABWWlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iWE1QIENvcmUgNS40LjAiPgogICA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPgogICAgICA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIgogICAgICAgICAgICB4bWxuczp0aWZmPSJodHRwOi8vbnMuYWRvYmUuY29tL3RpZmYvMS4wLyI+CiAgICAgICAgIDx0aWZmOk9yaWVudGF0aW9uPjE8L3RpZmY6T3JpZW50YXRpb24+CiAgICAgIDwvcmRmOkRlc2NyaXB0aW9uPgogICA8L3JkZjpSREY+CjwveDp4bXBtZXRhPgpMwidZAAAGyUlEQVRYCa1Xa2gUVxSex53ZzUtrYxRbC5b+8FGlRbQ1FUVUxP6QUsoqYn0U4ybRXR+4iVorTqRokxgfeZhdtbZSKq2pUNpSEEkNAVttsD9aDLUFFWtBrdEYzWNn5t7b74zZEDbZuAFvGPbOnXPPd853HvdGkVKq6T6WZWkkG4zFDAWjqKbkvfV1kSU0t85bjL4lZNLVqdLmYQ2pqPiTAWt9dm5u9lVFlY/+vJc1tcmyXOghfXI4+rThCJOsVWbp9Jubl72PMf0FnbGJk/K6dnrfrCffaJ7uGBYDgdOn9YalS/m66shCpuvnuO0K+KxpuhZXuXyjfvP+3ykEeMSzN6CX+iVWMPPF0SNbNFWb4jqukIqUps+nc8EboxsqFlLsMdIOQ9ohSFA/Pm9kmWGaU1zbpZhrSAjd7olzxtiCwprSIgIHA+yZMhA4HQD1Dby4umSO1NRm7rrkJqWbF0JiQdM0VdW0NgTl9eMbK26lG4p0GFAJPGAFTIDXAAaoqkiAk6d4VyWXLjNYLtOVClq7MuVKWvn1VAPgyZOsHz1ht2Ear/VSr5PXeHjvQ1wwuysudE1bXlQbeZeMnpdGKIa0MkH9htodb8LBnznn5L8gaB1lwHzoR0g3N+4ogguXAoJ1hqVrbY/bpzdsP/oQdnoEESuDDc+7wT5gTW1taBVkhL9zxBnEfLxEqjOfyQyfoUkhbsP/Oin5RchOMjN8WZQK3HHjhs/M8zHTf/nHC2ctVWVNTU0pyzJlCBLUj7o7YRsUzkSCKcw0mBC8xXacEDe0SfWhiu31GypLhCkmuj32TjDzNwzxCQE8KTYVV5fOgh6XnEjhJJE2cCSoLz5SOosZxi+guBOSP6DoP42FKs7RjjUHNz/nZ0YQSIYw9dqjheUPAabdzet+HxlaYPrMOU7cvnqv6fqrDQ0N3EtatPBktMEMoDWv148eM+KEIsS/0rEPR7ccukGbg7Ul01EJHyhCCTCTjSVhx3bvoCOc4tKJHgsd+IvkCg5G5ht+tktw3hgLVX5MxuEZEIqUBqw9sOX57niPPLWj/gFZv/5I6XvIvQIpxUIDnc/psRWkBFdxmKIVM8NvIhntbkVTvhNSHImFqprJkMLqrVPi93OufW5ZPfSePAYzgGToWFVvj3XGSTu+CgArNaZPJmEbwDAInUjqlN4kTCUJQziVInJAQSKSzU1YrBn3X+a3g3lO+2gMSEII05q8mf3gLUU4v+XkjtwLzyfb3XEH4ATi1XwCnJR4c4DTN8i53OEuGuO8rJysM3fyun8tqAy9THK9umnaN1IyAAlJ9Kmavh0OrsSxqzjxOAcc7RlgeK/G3sPJ1LnriX7lcr7/+Kaqy32ISZNUimSkMpIV21jVGg1VrBJCnY8m1Gj4fTrarUYhgJ6+hKIQ0BqakOaDDBeyGYfFIuxdTuCbUTFJuH2vg51a5KHs6OyQwcMRy/DpP9UVlZ/H2vn1dSXLhFR3+rL801BiinCfdD9cCNB2TObYzlV4vg/AJwkhHPvoFbunp+iR012L13YveEmlOGiDoFhVWVX2zHfmPtQU7fsZb+e/NH1+fkt08/6W/MXTT9hCeYD7wDRk/kgdjKAB3YMxe9u0x2tPhg61BGPBzBmLF0RA0ilw89mxLYeaqbe0Tm3tY40MpJEqByhhGB63sLpkVfaonJOd7Y/+EapSfjRUWUcbV1ZGxuRkariKqRk2l3voCKb1orrSFfB0G/ZMe3S/oyYWrtyYuEnR9+SR0gASTGwsri2NmX5fEBQj2uKiK7h1LFx1tr+ywtqtc3E7241wzNcNncr10v3mG7OH6oK0f0gDQC3OIFWuqA6PyNH8l5B2k+hMoDqQivgal6EPuSNdTZd7YNlqXQewbUsciF2o1/yj4fI/Em29v7H956mqwJMhcGLhy401HUAsIHNdF0WOyygzzGVS8EsAb8E9YTWOY4nEjPsz/Cra4zYCpzDSvaA/YPJ8SANImG7BpCgarryAk32XPzODElf0dHVzKeRoHMtjaI4118z0+xzH/YbyBHuo91O5DjmeagDthiJO4aBDBXnQaGSYDN0P6YBVgcJEUNADDNySb3Z2d2wYEjHpY1oGYI8sKyvz8sWVYp1weRsuodRD0JapsD0b8KYGvyiJ3oXBVEEDSi4J23tN1wBiQZDi4+H91+F0WDe9HoZcVDjCgn8ExCfRcPlZksHzVOoTxgxZBQmh/r/9SxO0B6nno9lcjLZVzFYsrz2TzgEXj/46+s/TZiCx6XQg4FF76177Ftd1rwKJ44xcQ+C9V6+0wRM6h/3bC6QEq0sWFVVHCkkBUT9sRdjwP9bZqr/FHzrfAAAAAElFTkSuQmCC',\n    'LSK': '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',\n    'QTUM': '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',\n    'EOS': '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',\n    'ZEC': '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',\n    'OMG': 'iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAABYlAAAWJQFJUiTwAAABWWlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iWE1QIENvcmUgNS40LjAiPgogICA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPgogICAgICA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIgogICAgICAgICAgICB4bWxuczp0aWZmPSJodHRwOi8vbnMuYWRvYmUuY29tL3RpZmYvMS4wLyI+CiAgICAgICAgIDx0aWZmOk9yaWVudGF0aW9uPjE8L3RpZmY6T3JpZW50YXRpb24+CiAgICAgIDwvcmRmOkRlc2NyaXB0aW9uPgogICA8L3JkZjpSREY+CjwveDp4bXBtZXRhPgpMwidZAAAGiElEQVRYCcVWfUxVZRj/nXO453IvFxQF5FMFJbDIciq6TF2GmpvWXLq15fqnLTO3Wm5WW2s2y/kxZ7jmSsuaH+VyomU2dU2w1cBCExQCBBHEIAFBvrmfp99z5BIXrqnk8tnOed/znvc8z+/5+D3vUeKfb/UBioIHJOoDsttv9oEDCOmH8i8TyY/G2+A8GVz3yG2AqNyk8Zl5hXfQuwHb+qd3BBBhAQwqqusFejj6QyYGdBob3adBDI/g3h4PUOMEoogiJhTo9nKN12DwfgRBAQhwUeigkvIaPtFaygQVDhqwEEEov/JxuZ2GbhCVjWte7ikt4WK0gkcTFFzsNNBYzOckID1SwU3XLZ1+w/4xKAAxHsqr4pqBTS/rWDrfisRYDSEE5GHMe6nMqtMzAlj+VgdO19K6VcGBjaGYPV1HVKTKdwbKqjzIPtCLg/lepCUqaAsCIigA8bziTwPfrbfh2XlWXL/hw2/naY1sTUsJQVy0ihs3fTh9xoW2bgPREQrytzowcayGiiseVFS5YbermJphwb4NFqTu6MKGw26kxSnoYIoGyhAAkseyagPZq3XT+ImfnVi0tgdo6vssBfhpox2zp+nIL/bg/H4ffjl3y/jWL7qxdh3dtHEva2baAhXfb3Lg7VfsOHmhAxeaDMSxLtxSQH2iDGxEEnpGEpe5sfbrcGjMbeKiDiQlK4iiUmlX5e0srE6g5UgErjd7MX9dN+r2ReAkgT4zpxvTV6hw0YDOKBaWGXhpoYY9H4Yj50Qvlr3Zi4wpClqI0S808Y8I1S53A3NSVSQw50V/MF5drGga/4seNTAQ6RHcz8K8WO5GfIyGVXNCTCoeL3ADWSw2Dk3MVj31pE1QsPdXLxqafZgwjohYk4MlAADtmyKey1zoJ5O+wXzXv8ZFiYgmejn3kmr+veZG/43vhDGKbBallL7BnAcAkKaSbAfyqgw0NPmQkc4S4Y4eeiWcjuXVzCgghpGYGIL6Ri8O5HtMai6cyeL50UCUlb2BV3zYLRYtm6IhgUVbc43R7Ms9zfRLAABBapOybDVwLM+J8fEacrJtqCgyUHTOwPlCA3UEd3yzDWNGq/jhtAvFu704W+LG4qeseG+7jjOHfbh4wUBhngGN/WDbGrtJ2+wcJv4hBZ2DWBBQhH5YYQxrZaOBU6z2eTN11NZ7UVLhMUP+2MMWJMSoOEqAz73fg/goFmi4gmOs9qRYFUVlbnrrRbhDwczHdYTZFGz+rAvv7HEjPUlBO6M5UIICkGKUxNe1ArtW6qxuHbH0WEJX3+jD0Vwn3vjcheQYxayBqg7SiyB2rgzFrKk6RrIvOOnwJfaET77pxc6THqSPDd4NgwKQQyScKXUR7VWGNO5FDSufDDHb7Qd5jOEhL1KXq/ASqDSWCKZNPGu6xA9Z+VkMfQOpWlrCpI8CJrE9txKQ0HywDAEgXtqYgmrSaJwD2LvGhllsOj4pICoQHbkFTizc1gudxuNZcE6+s/CFHFwtQkFS1kJQqSxoFxV2cV8Q2yYWKbkACeFOOdHAXp+7xYGUJA2nClzIK3SbjenpGRYsmGVFyRgNGa+zSXCfpEwYJA1GKDyeDBBqtjEq4tDtjIvhABbIgrTihgoDR161msY37epC1hPs5d+6sT7HjbmZXdjxVTceIQ33c08Nwy7f+EXSJ53QzVGM30kCUiCeyLFaT+TNbK/1172YPKMDmUtU8ziVXiIH1bkCA5V54QjlkZn0QjtSyAQJtdD4XiUgAgJA8pfFo3PUCAXVtcwFC0p+KIS/HQQmoZZfnlo2lmgeu5MT2WSYdy4NSwIAmA5QUwsL0E2DYXYiYpqtfdr5BIvMCcROfjvpdjWP40iuDcN5E3AAAA/DP4mV+3upD5U1HmSykWCygrP8MYnkdCSvs5cNTJytYkqGbp79neWG2aLv5v8vWIgCAIgXcqaA9Nud04uIMAVVH4dhbpqK0quGeS3O1JC3JQw6C+/Tg8xXHGnIj4YbgYAiFNuiaCSVl9UY2L5Kx2sr7FAJ80qd1xyTEzT0kG4ffdmFd/e6MUk6HFMi6RmODAEgSqSaJdzyQ7pkpobVS3WMTdRMbl+56sW2Q07kFvvM3n67n827BRMUgAmCN4lEeRvRVPIhnJeEhwWKVAXpfP6vxqkJQzqhLIpIcUh/T+ap5sgk/VigEmbpdEJHeRest8u39yK3BeBXIn3eSZ77cyxBuJ9yRwB+Y/fbsF9vAA39i//n+DcTCngbzsw0+QAAAABJRU5ErkJggg==',\n    'ADA': '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',\n    'HSR': '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',\n    'XLM': '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',\n    'WAVES': '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',\n    'PPT': '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',\n    'STRAT': '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',\n    'BTS': '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',\n    'ARK': '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',\n    'BTG': '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',\n    'MARKET': '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'\n}\n\n# calculate btg nav\nbtg_val = int(float(btg_result[0]['price_usd']) * 458)\nbtg_nav = float(btg_val) / float(result['presale']) * 0.98 * 0.87\n\n# add on top of current nav\nnet_asset_value = float(result['nav_per_token']) + btg_nav\n\n# calculate the price in eth\neth_price = float(eth_result[0]['price_usd'])\nnav_eth = net_asset_value / eth_price\n\n# calculate the price in btc\nbtc_price = float(btc_result[0]['price_usd'])\nnav_btc = net_asset_value / btc_price\n\n# calculate total value\nusd_value = net_asset_value * number_of_c20\n\n# menu bar icon\nprint '${:.4f}| templateImage={}'.format(net_asset_value, symbol_image_map['C20'])\nprint '---'\n\n# print nav, value of your coins, and total fund value\nprint 'NAV:\\t${:.4f} USD | href=https://crypto20.com/en/portal/performance/ image={}'.format(net_asset_value, symbol_image_map['C20'])\n\n# print nav in ETH and BTC with separator\nprint 'NAV:\\t{:.8f} ETH | href=https://crypto20.com/en/portal/performance/ image={}'.format(nav_eth, symbol_image_map['ETH'])\nprint 'NAV:\\t{:.8f} BTC | href=https://crypto20.com/en/portal/performance/ image={}'.format(nav_btc, symbol_image_map['BTC'])\nprint '---'\n\n# print number of c20 you have and their value\nprint 'My Tokens:\\t\\t{:,.4f} | href=https://crypto20.com/users/ image={}'.format(number_of_c20, symbol_image_map['C20'])\nprint 'My Value:\\t\\t${:,.2f} | href=https://crypto20.com/users/ image={}'.format(usd_value, symbol_image_map['C20'])\nprint '---'\n\n# tokens issues\nprint 'Tokens Issued:\\t{:,} | href=https://crypto20.com/portal/performance/ image={}'.format(int(result['presale']), symbol_image_map['C20'])\nprint 'Fund Cap:\\t\\t${:,} | href=https://crypto20.com/portal/insights/ image={}'.format(btg_val + int(result['usd_value']), symbol_image_map['C20'])\n\n# print total crypto market cap\nprint 'Market Cap:\\t\\t${:,} | href=https://livecoinwatch.com image={}'.format(int(crypto_global_result['total_market_cap_usd']), symbol_image_map['MARKET'])\n\n# separator bitbar recognizes and puts everything under it into a menu\nprint '---'\n\n# print holdings\nholdings = result['holdings'];\nholdings.append({'name': 'BTG', 'value': btg_val})\n\nfor holding in holdings:\n    crypto_symbol = holding['name']\n    crypto_value = float(holding['value'])\n    crypto_percentage = crypto_value / float(result['usd_value']) * 100\n    c20_value = holding['value']\n    crypto_name = symbol_path_map[crypto_symbol]\n    crypto_img = symbol_image_map[crypto_symbol]\n    crypto_price = float(symbol_price[crypto_name])\n\n    print '{:s} \\t{:.2f}%\\t${:,}\\t${:,.2f} | href=https://coinmarketcap.com/currencies/{:s} image={}'.format(\n        crypto_symbol,\n        crypto_percentage,\n        c20_value,\n        crypto_price,\n        crypto_name,\n        crypto_img)\n\n## Print dashboards\nprint \"---\"\nprint \"Dashboards\"\nprint \"--youcan.dance/crypto20 | href=http://youcan.dance/crypto20\"\nprint \"--cryptodash1.firebaseapp | href=https://cryptodash1.firebaseapp.com/\""
				}
			],
			"path": "Cryptocurrency/c20.py",
			"filename": "c20.py",
			"dir": "Cryptocurrency",
			"docsPlugin": "Cryptocurrency/c20.py.html",
			"docsCategory": "Cryptocurrency.html",
			"pathSegments": [
				"Cryptocurrency"
			],
			"categoryPathSegments": [
				{
					"path": "Cryptocurrency",
					"text": "Cryptocurrency",
					"isLast": true
				}
			],
			"title": "Crypto20",
			"version": "v1.0",
			"author": "Christopher Chen",
			"authors": [
				{
					"name": "Christopher Chen",
					"githubUsername": "cchen408",
					"imageURL": "https://avatars.githubusercontent.com/u/2694506?v=4",
					"bio": "JavaScript. Node. Blockchain.",
					"primary": true
				}
			],
			"desc": "Display Nav and Underlying Asset Information",
			"imageURL": "https://raw.githubusercontent.com/cchen408/bitbar-c20/master/screenshots/chris.png",
			"dependencies": [
				"python"
			],
			"aboutURL": "https://github.com/cchen408/bitbar-c20",
			"lastUpdated": "2021-03-08T15:21:47.330795Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "Cryptocurrency/CryptoPrices.5m.sh",
					"filename": "CryptoPrices.5m.sh",
					"content": "#!/bin/bash\n# \u003cbitbar.title\u003eCryptocurrency Prices\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev1.1\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eviiraj, UdjinM6\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003eviiraj\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eDisplay the spot USD prices of Bitcoin (from Coinbase) and the spot prices of 9 other cryptoassets (from Poloniex) including Monero, Ethereum, Decred, Ripple, Dash, Litecoin, Siacoin.\u003c/bitbar.desc\u003e\n# \u003cbitbar.image\u003ehttps://media.giphy.com/media/xUPGcf2tFHHoAPssy4/giphy.gif\u003c/bitbar.image\u003e\n#\n# Based on the Monero BTC price at Poloniex Bitbar plugin by Monero.how (github.com/monerohow) and the Coinbase.com Bitcoin Prices Bitbar plugin by Charles Lenhert (github.com/CLL80). Thank you to the original coders who made this job very easy.\n#\n# If you feel this little tool gives you some value, tips are always welcome at the following addresses!\n# Bitcoin: 1Gvf39okRwL3k2vtAYThSjx84j8CuX7rus\n# Ethereum: 0x22112B4900950EC3e77e5eb4576647c7AF12B1BF\n# Monero: 43WyVmecu3Q6xVMQm95aZGcvEsEGEu3jceg435QENEo2ifqwtJi8WQ4QxhWvQ1wWUmjbFzfSjx3PoDGUhFZnahav9d4DYy9\n# Decred: DsndNAGHUrjVsm217nqyHynmPSa1f47AbUm\n\n\n# shellcheck disable=SC2034\nbitcoin_icon='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'\nmonero_icon='iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAACtElEQVR4nE2Tz2udRRSGn3Nm7v2aLzeWFouBtCm6cFFwIXRTRVOjNbfEH0TIP9CKdtMWWlxYqNeqkC4KCt1o/dLiOiC6kbTYhWYT8C9Qd4VWBKNok/vd3Myc4+K7LZnVC3Oed87Me0YAHETAAfqneTEG3lNhRpwpABceGPycMjfKirXdjDwSv3Upnp7mmipnNBDJgNEsBQJYJpvz9R9/c2F6hdpBxBcJv08Sn9nmhzDGLH0cwUaYjCwcMBylRHLN2oN/mDsEQ5UV8uEtPg8Fs9SA4M15j2FGOiA4NYSClyaf4LqskGXrFEfLkl/ygJ+Ss1qMs8SAtNvEG5HYQ6z7XI7wcqvkRL3JC9oSzhJxhPaeZa4O+3xCQQTyiG3ggpj6LJUVn7nTJuBROaciHCc3LXoPLSp6g1o+3WWSKIiDWq62Ki55D1UhkBCBGVVh8tFryxXMFwljlX80rKXppIGXxir/0BcJcmVUbRCFA1EFw0nZBXDe2Hz91Dtzdq+ofuxtnZaOCLGs/NLCyVdm39xsPwu3v0wuRPeEYJqMLcaJLuxvMg9TXk58+1b31efHl/1iWfn5t0++9pwXe78X9PAolX2ME7MziMn5wGqO1EnugwvGwxBCmVrl7YX5E7M56Y7F9p0ixs5wOPgXkNrlK6192oxf49gyt5q0mqtld0kpuYgcGNK+S8SCyGRKya0p8f037XrDOOKLhIXNufPSLs5s76S/ROSQqh40M1NVFRFyzqaqmnO+D9wrWvFJS4Pl78o71/TjIz1/OEzf7GT7b2Ji4lgI4aCZZRERd3czMxERM8shhKlOp3NsJ1t/O+tNWcFlNG3e7XaLEMIXIYR3VTXmnHH3Jl4RQgjknLOZ3drY2Di3vr5e03zEx7PuAPPz88dF5H1gBnhqtP8nsJZSurG6unp3N/M/llI6HEcL354AAAAASUVORK5CYII='\neth_icon='iVBORw0KGgoAAAANSUhEUgAAAA8AAAAPCAYAAAA71pVKAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAAsTAAALEwEAmpwYAAABWWlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iWE1QIENvcmUgNS40LjAiPgogICA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPgogICAgICA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIgogICAgICAgICAgICB4bWxuczp0aWZmPSJodHRwOi8vbnMuYWRvYmUuY29tL3RpZmYvMS4wLyI+CiAgICAgICAgIDx0aWZmOk9yaWVudGF0aW9uPjE8L3RpZmY6T3JpZW50YXRpb24+CiAgICAgIDwvcmRmOkRlc2NyaXB0aW9uPgogICA8L3JkZjpSREY+CjwveDp4bXBtZXRhPgpMwidZAAAA4UlEQVQoFcWQvw4BQRCHz5+gkahERCNI6HQSEr3aS+i8iWcQr6AinkEhoqJSikahEnyztxN3l80mCjHJd7sz85vf7l4Q+CPtb/+wW/7WW69aYnAGbWuQSRqpMFp/2qTH2oGJzaWesnuzJIc1b9JtwRlGMIQXxE5XMXXjKu45EHEdGlCAKRThAdEZ0jDUdUC6gS2c4A4XGIOE6j6bsG6+ej05sQZHWMMKxETeLRrn8M3Wr6x7yMMBlhCL5P31b+5QiXsXKjAHCdGbU03m+Khhld4C+laTdWi9JXnzf0Kf4Dz9DdLXHM44uKqBAAAAAElFTkSuQmCC'\ndash_icon='iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAABYlAAAWJQFJUiTwAAAAB3RJTUUH4wsdAAwGzHGX5gAAAg5JREFUWMPt1z1oVEEQB/DfhRON+JXCmGKDIoiKmEIhIIhKCmsLwSKihb0EXikWChYi1ykIQggIFjaCglUghWJhLCwUFItYPPwKQvBiJDEhFnkHIu/d7TsuscnAcTA7uzPz35n/7GNd/rNUoqxq6QhGSpw7i3f4hQk8lYQveYbVyAMPYHfJ5A5l/+ezJF5mSUxKwmLDqCsi+y3Y2wG0B/ECd9XS7jIIbMbODl77JWxqINMVsWE79uB3i98CliKDGFZLT8Yi8B1J5qCZLKMbIauXY9if6fOK/RYGK6vSW7W0msF8EbebJLavsuqNXkuv42rOSh1DXWvANfcxV0ABfWsRwCymCmpmvvoXVGcwip4Sh8/jsCR8aMG2eVe9hB/VzPkRPGoju0lMR7Rxf45+AVONK7jcJrxvJGGmhU0PtuboFyXhWyOAC204r+NhhN2JAv3blUqspf34mrFZzPSs4xNGJWEiYs/ZAv3jRit8xkBWlTGyhAVJ+BnBAf04WrA6uhLAymicXqUWHCvQP5eEeuwwapcBb2CoYPVK2QdJGccHcQenCizG8ap5ALV0Q3ZAb4TLZWzEcZzOpmEzVrwpCXOtEOjDvTaeYa3kmiSMx7wJd2Bbh50PS8KDf5VFRdhbciY0kxTn8pw3Q2CgA46f4QnGJKGwzYsC2IX3JdhxJqvs1/iY7a1Lwuz6p9e6tJI/DAh9aD+iV7oAAAAASUVORK5CYII='\ndcr_icon='iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAADT0lEQVR4nHWTb2iVZRjGr/t5nvd9z/ues9Y2JjZh4dwGW4HMjJCgOcIVYiyKpRjTQdGKapJCISyOs+ifrRkG4kgqKLNpNEtGEWyOQMh0BQsP6tqBmZoetzo7f94/532fuw+xgkm/TzfXh/vDdfEDltLJ8pZsCa3jSbV4q+c/LKzNaw4rHSOytOu+tY2mARbMwAuzp9ZoSwZOPtKUkCImY/5r1+9N090UgEEgsMoWefWljDXkaSUURLjxzcLL3+6mQYDJDb0HLhmlgaL0QNkSSMrSROJyuiN94uBJ6tgfJZOCAGDT28XW37Pmp3lXrrAd0B1xb3D8VXtnKQI2Xzj5WNryPoksmYi0RgkaMSuGinnv0Fhj57PUnGTzfD8FTx/MPfHTrP2Z68qSYcNe5vhHx/rGuok2+n0zP6z+q9JsvHrzj/gcghfnRLjGNE2sCsxuAoDH9xW3z2St9wtFUS5NAAyoOJAIS6mVK/Kbj/RUTi2Wlspkyp7Kjp9dcER9ZS76RXUdKKydumoezpeEdIzIS5h61Pd5VhcQ+oYom8+odczD53vO1YkLVVOyqbo6t/7i8BEh5Z6QwlVqOmP0uVrKhAoXGqqDDcd3xc/wktnW3z+ugG94InaXBgBJYjmYWQO+CkO5jgS4PKY/P7YrfgadbLY2QwPARD+FADDR1hYuPnvm8nf3TXp/buFQkgNxVoHYIgYx1A0AaG2GyNec43cb7+H9XV/13DC5RefdnJBCWSRrf3bnNxVjwox7UVSvKvYqQ/BvOkSLG+gtqVRqX1MT5QCgDcDW1PenlVjoLdZVN5cyWRSJEBZ8TpCTrYHaMVT30I/06Hv+9umM+XFQAqpsf3JZWXigZnm84GA+NbCt6lceZWtD08jhOYuf9LM5N+44RktQvnWoof3YwxdHLTIk8ODe4kdXPLvb9wFDAlICMgrztbe7XSdeuW1EgdA+MzJw3dY7i7kCJwzzSm1od33Z8MgpQpKF8Trp9je8HTcL6jkvkHWs2YAk2BZwZ0W+94vexAeSiDvSX790Df47oSGU7WuuI6eH/umWADCY2dh91F9Z9CmGMNAFZQrpueaha4OTtAcA9evk7Ol6D4E9F/nS0cL4T9Ek/6vo/zLceYvqfwNpQYLrKeD+7AAAAABJRU5ErkJggg=='\nxrp_icon='iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAADHklEQVR4nH2TzW9UZRTGn/PeO3dm2o7ttJRgERKgaAuC2OoQqUZACSGwIBpYuKAYiSEWFqIxMS7udIPEhYoxauISCAlFNI0oanRIiAUphGinY0OUL4kd6Pd0Zjr3vu95jwvQuur5A35Pnjy/Q5jjRISISEQm6rZ+O5oeGAme8WBkTT2dOrlt9SFKp0FzAeD7StLrVeqLZO+QadwSTk4AViMWjSMVL3z800up/bMAEdrRAwUAJ3bA7uyB6tlJ/MLXg89nClU/lMYmtQvtiGGpsNA8pWV/W6LVvZckCkS2B2AAIADNh79xAfBwIVhhTMw6oslaVsKMCDOKocbRi3/Nd+/3tCJ98Vf7F60fK1n9Xov+rfnB5ru+L2rggSu534eLKmAGsbGwYkMtlFRGNjc35AkA/P7h1KkxOjI8Yx/mMMR8h0e2JsM97z/X2htzgKWfXRgaKqpHlNFgK6iprsLjXuHTvr0bXqNxGa/t+HL8wp+SbFGFEQ1mChFxl0SCyhsroxt2tURuPHYs33+zRA/No8ofiQjdWVKjvvqu8+nDRDC0uTf31KVSrK9cCS0xK2ELYm2ZrapTRoN1cZRjybZE8MvFV2Ibo+qJciizQ6lpAxhtIMaQMANsAKNJmBGGJsJGEmIsooQAaK9omZ0YACh761b99nPTV64F8cXRmSkN1hSIche4RncuV5vaaqtHX//5zvcjZW5a6JkBMHJLEzid2bflCMNXBAB7fxzamLmLE7endQPYotbRU882cNfxF9cecwEsOnT68o0Zpw06BKBQ5bpI1ZqD597c9g79q2smm13Q1V9aAybvQKvz656O9pu+L6qvKfPk+XzlfLkciDIGsMxGi1MfMXr3qprl9J9I3WT/b/EKP+vluh8N2z88sy9bcD7SkxNMYl1iBhsDlw0We5WOeyZ2kxURovsq+4Npya3McQ5AY7W9psaZxFpxLIs1LGIsPLK8tqkuP9czESAQueyuOnj7bG4S62xxCmCGF69BS1X5k8F3d3e5cwDE99OKqFtfLfy9/eXPL31wPe9ucoTCZY3qZOatzrfJu67+AYvGsl/e3vzPAAAAAElFTkSuQmCC'\nsia_icon='iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAACZklEQVR4nI2Ty2sTURTGf/feyUxtrKkvRARRCq1YFRFUEJSmolux4iwtpXs3gtuSjehKdCEVxajgZrpRFEV8TNEuTCwUiyKC9h8o+EgTJ4+Ze1ykaYwieDb3Lr77+75zOFdRzAdk0sOUonEeLTxkcFDh+wn/WQ6KETasNZTKp8jlHvD4igc0ATKhmUbDUFO9uCic9i0KaSPe3jrBp6kbFPOvmL3dB0A44SCi/mkbBKZ1bYsKd/rR9iIpc4m9ZwoAzN/bgchhRLYilBA9x+f7If5UQhAYfD9RBIFhJ4Zdfp1Cfi+OMwO2QCIpFAfJrHZxHRCgEkFi56hUz3No/DlBYNoJwgmHbC6mmH/BpnXDfFsC14FKlABfEAzG9JFJQ1RNqMan2D/6QK8AprHLTTmUygkKqDWeoZwDrErvpsIuRB3hR7mI5xmwd3lzd7tambbKWYo3B9DOPF2eS63+ltLCIbK5uGOAYb6XHlWgd00/X0uTzQTTQ81TO8Oku10EaNgLZHMx7wN35fHjKx7Zse8kchmtBOSY7qBbtmE0RFGC6E+IKAY/tBOUN8eIKFL6Iz+rCtSWToBiCSuCk9Iom2FqSsNg5z4oJdTqChEQ8RwAhhZlGVCk0VB4KWgkY/j+G8LQIQybuigyhKHCLEgLpla8ReDJVZf1a97R7Q0QxwkiZ9k3eo0/a/Z2llVdL6lESTve8mZRyB+l23uOtYCCOH6NtTOIqjWtRAEncVN7qDeSzv5ENEpZirdG6PImMWYjRoPWINLKCtU6VBvgOvz9YVpJZq730ZM+h5XjJHYTVrzfnDRuSlFrPP0FFWsBHSFePtgAAAAASUVORK5CYII='\nltc_icon='iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAMAAAAoLQ9TAAADAFBMVEUAAACAgIC1tbW4uLi2tra3t7e2tra3t7e3t7e4uLi3t7e4uLi3t7e3t7e3t7e4uLi4uLi5ubm+vr7BwcHDw8PFxcXJycnOzs7Q0NDU1NTV1dXW1tbZ2dnb29vd3d3m5ubn5+f5+fn8/Pz9/f3+/v7///8mJiYnJycoKCgpKSkqKiorKyssLCwtLS0uLi4vLy8wMDAxMTEyMjIzMzM0NDQ1NTU2NjY3Nzc4ODg5OTk6Ojo7Ozs8PDw9PT0+Pj4/Pz9AQEBBQUFCQkJDQ0NERERFRUVGRkZHR0dISEhJSUlKSkpLS0tMTExNTU1OTk5PT09QUFBRUVFSUlJTU1NUVFRVVVVWVlZXV1dYWFhZWVlaWlpbW1tcXFxdXV1eXl5fX19gYGBhYWFiYmJjY2NkZGRlZWVmZmZnZ2doaGhpaWlqampra2tsbGxtbW1ubm5vb29wcHBxcXFycnJzc3N0dHR1dXV2dnZ3d3d4eHh5eXl6enp7e3t8fHx9fX1+fn5/f3+AgICBgYGCgoKDg4OEhISFhYWGhoaHh4eIiIiJiYmKioqLi4uMjIyNjY2Ojo6Pj4+QkJCRkZGSkpKTk5OUlJSVlZWWlpaXl5eYmJiZmZmampqbm5ucnJydnZ2enp6fn5+goKChoaGioqKjo6OkpKSlpaWmpqanp6eoqKipqamqqqqrq6usrKytra2urq6vr6+wsLCxsbGysrKzs7O0tLS1tbW2tra3t7e4uLi5ubm6urq7u7u8vLy9vb2+vr6/v7/AwMDBwcHCwsLDw8PExMTFxcXGxsbHx8fIyMjJycnKysrLy8vMzMzNzc3Ozs7Pz8/Q0NDR0dHS0tLT09PU1NTV1dXW1tbX19fY2NjZ2dna2trb29vc3Nzd3d3e3t7f39/g4ODh4eHi4uLj4+Pk5OTl5eXm5ubn5+fo6Ojp6enq6urr6+vs7Ozt7e3u7u7v7+/w8PDx8fHy8vLz8/P09PT19fX29vb39/f4+Pj5+fn6+vr7+/v8/Pz9/f3+/v7////Ybd+0AAAAEHRSTlMAAiZvcHF+f7Kztbbm5/b3GL4FdwAAAItJREFUeJxtj0cWwjAMROWCC9iJTU3obe5/RSLFsOJvRp6nkSWiCe1jztFrmlGLvgi9VfJelR9LdixXI3BjNVNe+u/AKClNXnofwEYKR5FlB7yOYgTKLFfgeRAjiXEGMJRmcGR4A+taq0R46B4zJx7K316asS2dbot9Mf9WJ2XbcZ1R7V7tQkrByfkfCTkPOQ2ZcvUAAAAASUVORK5CYII='\n\n#spot_price=$(curl -s \"https://api.coinbase.com/v2/prices/:currency_pair/spot\" -H \"CB-VERSION: 2017-04-16\" | egrep -o '{\"data\":{\"amount\":\"[0-9]+(\\.)?' | sed 's/{\"data\":{\"amount\"://'  | sed 's:^.\\(.*\\).$:\\1:')\n#buy_price=$(curl -s \"https://api.coinbase.com/v2/prices/BTC-USD/buy\" -H \"CB-VERSION: 2017-04-16\" | egrep -o '{\"data\":{\"amount\":\"[0-9]+(\\.)?' | sed 's/{\"data\":{\"amount\"://'  | sed 's:^.\\(.*\\).$:\\1:')\n#sell_price=$(curl -s \"https://api.coinbase.com/v2/prices/BTC-USD/sell\" -H \"CB-VERSION: 2017-04-16\" | egrep -o '{\"data\":{\"amount\":\"[0-9]+(\\.)?' | sed 's/{\"data\":{\"amount\"://'  | sed 's:^.\\(.*\\).$:\\1:')\n\n\nxmrPoloniex=$(curl -s https://poloniex.com/public?command=returnTicker | tr '}' '\\n' | grep BTC_XMR | tr -d '{}\"' | tr ':,' '\\n' | grep -A1 \"last\" | tail -1)\nethPoloniex=$(curl -s https://poloniex.com/public?command=returnTicker | tr '}' '\\n' | grep BTC_ETH | tr -d '{}\"' | tr ':,' '\\n' | grep -A1 \"last\" | tail -1)\ndcrPoloniex=$(curl -s https://poloniex.com/public?command=returnTicker | tr '}' '\\n' | grep BTC_DCR | tr -d '{}\"' | tr ':,' '\\n' | grep -A1 \"last\" | tail -1)\nxrpPoloniex=$(curl -s https://poloniex.com/public?command=returnTicker | tr '}' '\\n' | grep BTC_XRP | tr -d '{}\"' | tr ':,' '\\n' | grep -A1 \"last\" | tail -1)\ndashPoloniex=$(curl -s https://poloniex.com/public?command=returnTicker | tr '}' '\\n' | grep BTC_DASH | tr -d '{}\"' | tr ':,' '\\n' | grep -A1 \"last\" | tail -1)\nltcPoloniex=$(curl -s https://poloniex.com/public?command=returnTicker | tr '}' '\\n' | grep BTC_LTC | tr -d '{}\"' | tr ':,' '\\n' | grep -A1 \"last\" | tail -1)\nsiaPoloniex=$(curl -s https://poloniex.com/public?command=returnTicker | tr '}' '\\n' | grep BTC_SC | tr -d '{}\"' | tr ':,' '\\n' | grep -A1 \"last\" | tail -1)\n\n\n#echo  \"$spot_price | templateImage=$bitcoin_icon\" ß\n\nbtc_usd=$(curl -s \"https://api.bitfinex.com/v1/pubticker/BTCUSD\" | tr '\"' '\\n' | grep -A2 last_price | tail -1)\nprintf \"%.*f | image=%s\\n\" 2 \"$btc_usd\" \"$bitcoin_icon\"\nprintf \"%.*f | image=%s\\n\" 8 \"$ethPoloniex\" \"$eth_icon\"\nprintf \"%.*f | image=%s\\n\" 8 \"$xrpPoloniex\" \"$xrp_icon\"\nprintf \"%.*f | image=%s\\n\" 5 \"$ltcPoloniex\" \"$ltc_icon\"\nprintf \"%.*f | image=%s\\n\" 5 \"$xmrPoloniex\" \"$monero_icon\"\nprintf \"%.*f | image=%s\\n\" 5 \"$dashPoloniex\" \"$dash_icon\"\nprintf \"%.*f | image=%s\\n\" 5 \"$dcrPoloniex\" \"$dcr_icon\"\nprintf \"%.*f | image=%s\\n\" 8 \"$siaPoloniex\" \"$sia_icon\"\n"
				}
			],
			"path": "Cryptocurrency/CryptoPrices.5m.sh",
			"filename": "CryptoPrices.5m.sh",
			"dir": "Cryptocurrency",
			"docsPlugin": "Cryptocurrency/CryptoPrices.5m.sh.html",
			"docsCategory": "Cryptocurrency.html",
			"pathSegments": [
				"Cryptocurrency"
			],
			"categoryPathSegments": [
				{
					"path": "Cryptocurrency",
					"text": "Cryptocurrency",
					"isLast": true
				}
			],
			"title": "Cryptocurrency Prices",
			"version": "v1.1",
			"author": "viiraj,  UdjinM6",
			"authors": [
				{
					"name": "viiraj",
					"githubUsername": "viiraj",
					"imageURL": "https://avatars.githubusercontent.com/u/4239196?v=4",
					"bio": "",
					"primary": true
				},
				{
					"name": "UdjinM6",
					"githubUsername": "",
					"imageURL": "",
					"bio": "",
					"primary": false
				}
			],
			"desc": "Display the spot USD prices of Bitcoin (from Coinbase) and the spot prices of 9 other cryptoassets (from Poloniex) including Monero, Ethereum, Decred, Ripple, Dash, Litecoin, Siacoin.",
			"imageURL": "https://media.giphy.com/media/xUPGcf2tFHHoAPssy4/giphy.gif",
			"dependencies": null,
			"aboutURL": "",
			"lastUpdated": "2021-03-08T15:21:45.857978Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "Cryptocurrency/Dash/dash-coincap-binance.5m.sh",
					"filename": "dash-coincap-binance.5m.sh",
					"content": "#!/bin/bash\n\n# \u003cbitbar.title\u003eDash tickers: Coincap.io and Binance.com\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev1.1\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eUdjinM6\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003eUdjinM6\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eShows the latest Dash info from Coincap.io and Binance.com\u003c/bitbar.desc\u003e\n# \u003cbitbar.image\u003ehttps://i.imgur.com/k4y72tW.png\u003c/bitbar.image\u003e\n# \u003cbitbar.abouturl\u003ehttps://www.dash.org/\u003c/bitbar.abouturl\u003e\n\n# To generate the image, grab PNG and increase the DPI from 72 to 144,\n# then resize it to 32x32 and finally encode the image into base 64\n# for example via https://base64.guru/converter/encode/image/png\niconBase64='iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAABYlAAAWJQFJUiTwAAAAB3RJTUUH4wsdAAwGzHGX5gAAAg5JREFUWMPt1z1oVEEQB/DfhRON+JXCmGKDIoiKmEIhIIhKCmsLwSKihb0EXikWChYi1ykIQggIFjaCglUghWJhLCwUFItYPPwKQvBiJDEhFnkHIu/d7TsuscnAcTA7uzPz35n/7GNd/rNUoqxq6QhGSpw7i3f4hQk8lYQveYbVyAMPYHfJ5A5l/+ezJF5mSUxKwmLDqCsi+y3Y2wG0B/ECd9XS7jIIbMbODl77JWxqINMVsWE79uB3i98CliKDGFZLT8Yi8B1J5qCZLKMbIauXY9if6fOK/RYGK6vSW7W0msF8EbebJLavsuqNXkuv42rOSh1DXWvANfcxV0ABfWsRwCymCmpmvvoXVGcwip4Sh8/jsCR8aMG2eVe9hB/VzPkRPGoju0lMR7Rxf45+AVONK7jcJrxvJGGmhU0PtuboFyXhWyOAC204r+NhhN2JAv3blUqspf34mrFZzPSs4xNGJWEiYs/ZAv3jRit8xkBWlTGyhAVJ+BnBAf04WrA6uhLAymicXqUWHCvQP5eEeuwwapcBb2CoYPVK2QdJGccHcQenCizG8ap5ALV0Q3ZAb4TLZWzEcZzOpmEzVrwpCXOtEOjDvTaeYa3kmiSMx7wJd2Bbh50PS8KDf5VFRdhbciY0kxTn8pw3Q2CgA46f4QnGJKGwzYsC2IX3JdhxJqvs1/iY7a1Lwuz6p9e6tJI/DAh9aD+iV7oAAAAASUVORK5CYII='\n\n# Grab all info beforehand\ntoken_info_binance=$(curl -s https://api.binance.com/api/v3/ticker/24hr?symbol=DASHBTC | tr -d '{}\"' | tr ':,' '\\n')\ntoken_info_coincap=$(curl -s https://api.coincap.io/v2/assets/dash/ | tr -d '{}\" ' | tr ':,' '\\n')\nbtc_info_coincap=$(curl -s https://api.coincap.io/v2/assets/bitcoin/ | tr -d '{}\" ' | tr ':,' '\\n')\n\n# Menu bar\ntoken_price_btc=$(echo \"$token_info_binance\" | grep -A1 lastPrice | tail -1)\ntoken_price_usd=$(echo \"$token_info_coincap\" | grep -A1 priceUsd | tail -1)\ntoken_price_btc_precision=6\nif (( $(echo \"$token_price_usd \u003e= 100\" | bc -l) )); then token_price_usd_precision=\"$((token_price_btc_precision-3))\"; else token_price_usd_precision=\"$((token_price_btc_precision-2))\"; fi\nprintf \"%.*f | dropdown=false image=%s\\n\" \"$token_price_btc_precision\" \"$token_price_btc\" \"$iconBase64\"\nprintf \"$%.*f | dropdown=false image=%s\\n\" \"$token_price_usd_precision\" \"$token_price_usd\" \"$iconBase64\"\n\n# BTC\nbtc_percent_change_24h=$(echo \"$btc_info_coincap\" | grep -A1 changePercent24Hr | tail -1)\nif (( $(echo \"$btc_percent_change_24h \u003e= 0\" | bc -l) )); then btc_color_coincap=\"green\"; else btc_color_coincap=\"red\"; fi\nbtc_usd_price=$(echo \"$btc_info_coincap\" | grep -A1 priceUsd | tail -1)\necho \"---\"\nprintf \":moneybag: BTC: $%.*f | color=$btc_color_coincap href=\\\"http://coincap.io/assets/bitcoin/\\\"\\n\" 2 \"$btc_usd_price\"\n\n# Coincap.io\ntoken_percent_change_24h=$(echo \"$token_info_coincap\" | grep -A1 changePercent24Hr | tail -1)\nif (( $(echo \"$token_percent_change_24h \u003e= 0\" | bc -l) )); then token_color_coincap=\"green\"; else token_color_coincap=\"red\"; fi\ntoken_rank=$(echo \"$token_info_coincap\" | grep -A1 rank | tail -1)\ntoken_available_supply=$(echo \"$token_info_coincap\" | grep -A1 supply | tail -1)\ntoken_available_supply_mln=$(echo \"$token_available_supply / 1000000\" | bc -l)\ntoken_market_cap_usd=$(echo \"$token_info_coincap\" | grep -A1 marketCapUsd | tail -1)\ntoken_market_cap_usd_mln=$(echo \"$token_market_cap_usd / 1000000\" | bc -l)\ntoken_volume_usd=$(echo \"$token_info_coincap\" | grep -A1 volumeUsd24Hr | tail -1)\ntoken_volume_usd_m=$(echo \"$token_volume_usd / 1000000\" | bc -l)\necho \"---\"\necho \":chart_with_upwards_trend: Coincap.io: | href=\\\"http://coincap.io/assets/dash/\\\"\"\nprintf \"%sRank: %.*f\\n\" \"* \" 0 \"$token_rank\"\nprintf \"%sSupply: %.*fM DASH\\n\" \"* \" 2 \"$token_available_supply_mln\"\nprintf \"%sMarket Cap: $%.*fM | color=$token_color_coincap\\n\" \"* \" 2 \"$token_market_cap_usd_mln\"\nprintf \"%sPrice: $%.*f | color=$token_color_coincap\\n\" \"* \" 2 \"$token_price_usd\"\nprintf \"%s24h Change: %.*f%% | color=$token_color_coincap\\n\" \"* \" 2 \"$token_percent_change_24h\"\nprintf \"%s24h Volume: $%.*fM\\n\" \"* \" 2 \"$token_volume_usd_m\"\n\n# Binance.com\ntoken_percent_change=$(echo \"$token_info_binance\" | grep -A1 priceChangePercent | tail -1)\nif (( $(echo \"$token_percent_change \u003e= 0\" | bc -l) )); then token_color_binance=\"green\"; else token_color_binance=\"red\"; fi\ntoken_lowest_ask=$(echo \"$token_info_binance\" | grep -A1 askPrice | tail -1)\ntoken_highest_bid=$(echo \"$token_info_binance\" | grep -A1 bidPrice | tail -1)\ntoken_base_volume=$(echo \"$token_info_binance\" | grep -A1 volume | tail -1)\ntoken_base_volume_k=$(echo \"$token_base_volume / 1000\" | bc -l)\ntoken_quote_volume=$(echo \"$token_info_binance\" | grep -A1 quoteVolume | tail -1)\ntoken_high_24h=$(echo \"$token_info_binance\" | grep -A1 highPrice | tail -1)\ntoken_low_24h=$(echo \"$token_info_binance\" | grep -A1 lowPrice | tail -1)\necho \"---\"\necho \":chart_with_upwards_trend: Binance.com: | href=\\\"https://www.binance.com/ru/trade/DASH_BTC\\\"\"\nprintf \"%sPrice: %.*f BTC | color=$token_color_binance\\n\" \"* \" 6 \"$token_price_btc\"\nprintf \"%sAsk: %.*f BTC\\n\" \"* \" 6 \"$token_lowest_ask\"\nprintf \"%sBid: %.*f BTC\\n\" \"* \" 6 \"$token_highest_bid\"\nprintf \"%s24h Change: %.*f%% | color=$token_color_binance\\n\" \"* \" 2 \"$token_percent_change\"\nprintf \"%s24h Volume: %.*f BTC\\n\" \"* \" 2 \"$token_quote_volume\"\nprintf \"%s24h Volume: %.*fK DASH\\n\" \"* \" 2 \"$token_base_volume_k\"\nprintf \"%s24h High: %.*f BTC | color=green\\n\" \"* \" 6 \"$token_high_24h\"\nprintf \"%s24h Low: %.*f BTC | color=red\\n\" \"* \" 6 \"$token_low_24h\"\n\n# URLs\necho \"---\"\necho \"Dash.org | href=\\\"https://www.dash.org\\\" image=$iconBase64\"\necho \"--Wallets | href=\\\"https://www.dash.org/downloads/\\\" image=$iconBase64\"\necho \"--Explorer | href=\\\"https://explorer.dash.org/\\\" image=$iconBase64\"\necho \"--Forum | href=\\\"https://www.dash.org/forum/\\\" image=$iconBase64\"\necho \"--Docs | href=\\\"https://docs.dash.org/\\\" image=$iconBase64\"\n"
				}
			],
			"path": "Cryptocurrency/Dash/dash-coincap-binance.5m.sh",
			"filename": "dash-coincap-binance.5m.sh",
			"dir": "Cryptocurrency/Dash",
			"docsPlugin": "Cryptocurrency/Dash/dash-coincap-binance.5m.sh.html",
			"docsCategory": "Cryptocurrency/Dash.html",
			"pathSegments": [
				"Cryptocurrency",
				"Dash"
			],
			"categoryPathSegments": [
				{
					"path": "Cryptocurrency",
					"text": "Cryptocurrency",
					"isLast": false
				},
				{
					"path": "Cryptocurrency/Dash",
					"text": "Dash",
					"isLast": true
				}
			],
			"title": "Dash tickers: Coincap.io and Binance.com",
			"version": "v1.1",
			"author": "UdjinM6",
			"authors": [
				{
					"name": "UdjinM6",
					"githubUsername": "UdjinM6",
					"imageURL": "https://avatars.githubusercontent.com/u/1935069?v=4",
					"bio": "",
					"primary": true
				}
			],
			"desc": "Shows the latest Dash info from Coincap.io and Binance.com",
			"imageURL": "https://i.imgur.com/k4y72tW.png",
			"dependencies": null,
			"aboutURL": "https://www.dash.org/",
			"lastUpdated": "2021-03-08T15:21:45.901671Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "Cryptocurrency/Dash/dash-coincap-poloniex.5m.sh",
					"filename": "dash-coincap-poloniex.5m.sh",
					"content": "#!/bin/bash\n\n# \u003cbitbar.title\u003eDash tickers: Coincap.io and Poloniex.com\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev1.1\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eUdjinM6\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003eUdjinM6\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eShows the latest Dash info from Coincap.io and Poloniex.com\u003c/bitbar.desc\u003e\n# \u003cbitbar.image\u003ehttps://i.imgur.com/BRmoB48.png\u003c/bitbar.image\u003e\n# \u003cbitbar.abouturl\u003ehttps://www.dash.org/\u003c/bitbar.abouturl\u003e\n\n# To generate the image, grab PNG and increase the DPI from 72 to 144,\n# then resize it to 32x32 and finally encode the image into base 64\n# for example via https://base64.guru/converter/encode/image/png\niconBase64='iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAABYlAAAWJQFJUiTwAAAAB3RJTUUH4wsdAAwGzHGX5gAAAg5JREFUWMPt1z1oVEEQB/DfhRON+JXCmGKDIoiKmEIhIIhKCmsLwSKihb0EXikWChYi1ykIQggIFjaCglUghWJhLCwUFItYPPwKQvBiJDEhFnkHIu/d7TsuscnAcTA7uzPz35n/7GNd/rNUoqxq6QhGSpw7i3f4hQk8lYQveYbVyAMPYHfJ5A5l/+ezJF5mSUxKwmLDqCsi+y3Y2wG0B/ECd9XS7jIIbMbODl77JWxqINMVsWE79uB3i98CliKDGFZLT8Yi8B1J5qCZLKMbIauXY9if6fOK/RYGK6vSW7W0msF8EbebJLavsuqNXkuv42rOSh1DXWvANfcxV0ABfWsRwCymCmpmvvoXVGcwip4Sh8/jsCR8aMG2eVe9hB/VzPkRPGoju0lMR7Rxf45+AVONK7jcJrxvJGGmhU0PtuboFyXhWyOAC204r+NhhN2JAv3blUqspf34mrFZzPSs4xNGJWEiYs/ZAv3jRit8xkBWlTGyhAVJ+BnBAf04WrA6uhLAymicXqUWHCvQP5eEeuwwapcBb2CoYPVK2QdJGccHcQenCizG8ap5ALV0Q3ZAb4TLZWzEcZzOpmEzVrwpCXOtEOjDvTaeYa3kmiSMx7wJd2Bbh50PS8KDf5VFRdhbciY0kxTn8pw3Q2CgA46f4QnGJKGwzYsC2IX3JdhxJqvs1/iY7a1Lwuz6p9e6tJI/DAh9aD+iV7oAAAAASUVORK5CYII='\n\n# Grab all info beforehand\ntoken_info_poloniex=$(curl -s https://poloniex.com/public?command=returnTicker | tr '}' '\\n' | grep BTC_DASH | tr -d '{}\"' | tr ':,' '\\n')\ntoken_info_coincap=$(curl -s https://api.coincap.io/v2/assets/dash/ | tr -d '{}\" ' | tr ':,' '\\n')\nbtc_info_coincap=$(curl -s https://api.coincap.io/v2/assets/bitcoin/ | tr -d '{}\" ' | tr ':,' '\\n')\n\n# Menu bar\ntoken_price_btc=$(echo \"$token_info_poloniex\" | grep -A1 last | tail -1)\ntoken_price_usd=$(echo \"$token_info_coincap\" | grep -A1 priceUsd | tail -1)\ntoken_price_btc_precision=6\nif (( $(echo \"$token_price_usd \u003e= 100\" | bc -l) )); then token_price_usd_precision=\"$((token_price_btc_precision-3))\"; else token_price_usd_precision=\"$((token_price_btc_precision-2))\"; fi\nprintf \"%.*f | dropdown=false image=%s\\n\" \"$token_price_btc_precision\" \"$token_price_btc\" \"$iconBase64\"\nprintf \"$%.*f | dropdown=false image=%s\\n\" \"$token_price_usd_precision\" \"$token_price_usd\" \"$iconBase64\"\n\n# BTC\nbtc_percent_change_24h=$(echo \"$btc_info_coincap\" | grep -A1 changePercent24Hr | tail -1)\nif (( $(echo \"$btc_percent_change_24h \u003e= 0\" | bc -l) )); then btc_color_coincap=\"green\"; else btc_color_coincap=\"red\"; fi\nbtc_usd_price=$(echo \"$btc_info_coincap\" | grep -A1 priceUsd | tail -1)\necho \"---\"\nprintf \":moneybag: BTC: $%.*f | color=$btc_color_coincap href=\\\"http://coincap.io/assets/bitcoin/\\\"\\n\" 2 \"$btc_usd_price\"\n\n# Coincap.io\ntoken_percent_change_24h=$(echo \"$token_info_coincap\" | grep -A1 changePercent24Hr | tail -1)\nif (( $(echo \"$token_percent_change_24h \u003e= 0\" | bc -l) )); then token_color_coincap=\"green\"; else token_color_coincap=\"red\"; fi\ntoken_rank=$(echo \"$token_info_coincap\" | grep -A1 rank | tail -1)\ntoken_available_supply=$(echo \"$token_info_coincap\" | grep -A1 supply | tail -1)\ntoken_available_supply_mln=$(echo \"$token_available_supply / 1000000\" | bc -l)\ntoken_market_cap_usd=$(echo \"$token_info_coincap\" | grep -A1 marketCapUsd | tail -1)\ntoken_market_cap_usd_mln=$(echo \"$token_market_cap_usd / 1000000\" | bc -l)\ntoken_volume_usd=$(echo \"$token_info_coincap\" | grep -A1 volumeUsd24Hr | tail -1)\ntoken_volume_usd_m=$(echo \"$token_volume_usd / 1000000\" | bc -l)\necho \"---\"\necho \":chart_with_upwards_trend: Coincap.io: | href=\\\"http://coincap.io/assets/dash/\\\"\"\nprintf \"%sRank: %.*f\\n\" \"* \" 0 \"$token_rank\"\nprintf \"%sSupply: %.*fM DASH\\n\" \"* \" 2 \"$token_available_supply_mln\"\nprintf \"%sMarket Cap: $%.*fM | color=$token_color_coincap\\n\" \"* \" 2 \"$token_market_cap_usd_mln\"\nprintf \"%sPrice: $%.*f | color=$token_color_coincap\\n\" \"* \" 2 \"$token_price_usd\"\nprintf \"%s24h Change: %.*f%% | color=$token_color_coincap\\n\" \"* \" 2 \"$token_percent_change_24h\"\nprintf \"%s24h Volume: $%.*fM\\n\" \"* \" 2 \"$token_volume_usd_m\"\n\n# Poloniex.com\ntoken_percent_change=$(echo \"$token_info_poloniex\" | grep -A1 percentChange | tail -1)\ntoken_percent_change=$( echo \"$token_percent_change * 100\" | bc -l )\nif (( $(echo \"$token_percent_change \u003e= 0\" | bc -l) )); then token_color_poloniex=\"green\"; else token_color_poloniex=\"red\"; fi\ntoken_lowest_ask=$(echo \"$token_info_poloniex\" | grep -A1 lowestAsk | tail -1)\ntoken_highest_bid=$(echo \"$token_info_poloniex\" | grep -A1 highestBid | tail -1)\ntoken_base_volume=$(echo \"$token_info_poloniex\" | grep -A1 baseVolume | tail -1)\ntoken_quote_volume=$(echo \"$token_info_poloniex\" | grep -A1 quoteVolume | tail -1)\ntoken_quote_volume_k=$(echo \"$token_quote_volume / 1000\" | bc -l)\ntoken_high_24h=$(echo \"$token_info_poloniex\" | grep -A1 high24hr | tail -1)\ntoken_low_24h=$(echo \"$token_info_poloniex\" | grep -A1 low24hr | tail -1)\necho \"---\"\necho \":chart_with_upwards_trend: Poloniex.com: | href=\\\"https://poloniex.com/exchange#btc_dash\\\"\"\nprintf \"%sPrice: %.*f BTC | color=$token_color_poloniex\\n\" \"* \" 6 \"$token_price_btc\"\nprintf \"%sAsk: %.*f BTC\\n\" \"* \" 6 \"$token_lowest_ask\"\nprintf \"%sBid: %.*f BTC\\n\" \"* \" 6 \"$token_highest_bid\"\nprintf \"%s24h Change: %.*f%% | color=$token_color_poloniex\\n\" \"* \" 2 \"$token_percent_change\"\nprintf \"%s24h Volume: %.*f BTC\\n\" \"* \" 2 \"$token_base_volume\"\nprintf \"%s24h Volume: %.*fK DASH\\n\" \"* \" 2 \"$token_quote_volume_k\"\nprintf \"%s24h High: %.*f BTC | color=green\\n\" \"* \" 6 \"$token_high_24h\"\nprintf \"%s24h Low: %.*f BTC | color=red\\n\" \"* \" 6 \"$token_low_24h\"\n\n# URLs\necho \"---\"\necho \"Dash.org | href=\\\"https://www.dash.org\\\" image=$iconBase64\"\necho \"--Wallets | href=\\\"https://www.dash.org/downloads/\\\" image=$iconBase64\"\necho \"--Explorer | href=\\\"https://explorer.dash.org/\\\" image=$iconBase64\"\necho \"--Forum | href=\\\"https://www.dash.org/forum/\\\" image=$iconBase64\"\necho \"--Docs | href=\\\"https://docs.dash.org/\\\" image=$iconBase64\"\n"
				}
			],
			"path": "Cryptocurrency/Dash/dash-coincap-poloniex.5m.sh",
			"filename": "dash-coincap-poloniex.5m.sh",
			"dir": "Cryptocurrency/Dash",
			"docsPlugin": "Cryptocurrency/Dash/dash-coincap-poloniex.5m.sh.html",
			"docsCategory": "Cryptocurrency/Dash.html",
			"pathSegments": [
				"Cryptocurrency",
				"Dash"
			],
			"categoryPathSegments": [
				{
					"path": "Cryptocurrency",
					"text": "Cryptocurrency",
					"isLast": false
				},
				{
					"path": "Cryptocurrency/Dash",
					"text": "Dash",
					"isLast": true
				}
			],
			"title": "Dash tickers: Coincap.io and Poloniex.com",
			"version": "v1.1",
			"author": "UdjinM6",
			"authors": [
				{
					"name": "UdjinM6",
					"githubUsername": "UdjinM6",
					"imageURL": "https://avatars.githubusercontent.com/u/1935069?v=4",
					"bio": "",
					"primary": true
				}
			],
			"desc": "Shows the latest Dash info from Coincap.io and Poloniex.com",
			"imageURL": "https://i.imgur.com/BRmoB48.png",
			"dependencies": null,
			"aboutURL": "https://www.dash.org/",
			"lastUpdated": "2021-03-08T15:21:45.924065Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "Cryptocurrency/decred-btc-poloniex.30s.sh",
					"filename": "decred-btc-poloniex.30s.sh",
					"content": "#!/bin/bash\n\n# \u003cbitbar.title\u003eDecred BTC price on Poloniex\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev1.0\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eJames Hooker\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003eg0blinResearch\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eShows the last Decred price (in BTC) on the Poloniex exchange\u003c/bitbar.desc\u003e\n# \u003cbitbar.image\u003ehttps://raw.githubusercontent.com/g0blinResearch/bitbar-decred-btc-poloniex/master/screenshot.png\u003c/bitbar.image\u003e\n#\n# Credit goes to https://www.monero.how for the base of this plugin (see https://raw.githubusercontent.com/matryer/bitbar-plugins/master/Monero/monero-btc-poloniex.30s.sh)\n\ndecredIconBase64='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'\n\nxmrLast=$(curl -s https://poloniex.com/public?command=returnTicker | tr '}' '\\n' | grep BTC_DCR | tr -d '{}\"' | tr ':,' '\\n' | grep -A1 \"last\" | tail -1)\nprintf \"%.*f | image=%s\\n\" 5 \"$xmrLast\" \"$decredIconBase64\"\necho \"---\"\necho \"Decred homepage | href=\\\"https://www.decred.org\\\"\"\n"
				}
			],
			"path": "Cryptocurrency/decred-btc-poloniex.30s.sh",
			"filename": "decred-btc-poloniex.30s.sh",
			"dir": "Cryptocurrency",
			"docsPlugin": "Cryptocurrency/decred-btc-poloniex.30s.sh.html",
			"docsCategory": "Cryptocurrency.html",
			"pathSegments": [
				"Cryptocurrency"
			],
			"categoryPathSegments": [
				{
					"path": "Cryptocurrency",
					"text": "Cryptocurrency",
					"isLast": true
				}
			],
			"title": "Decred BTC price on Poloniex",
			"version": "v1.0",
			"author": "James Hooker",
			"authors": [
				{
					"name": "James Hooker",
					"githubUsername": "g0blinResearch",
					"imageURL": "https://avatars.githubusercontent.com/u/11961962?v=4",
					"bio": "",
					"primary": true
				}
			],
			"desc": "Shows the last Decred price (in BTC) on the Poloniex exchange",
			"imageURL": "https://raw.githubusercontent.com/g0blinResearch/bitbar-decred-btc-poloniex/master/screenshot.png",
			"dependencies": null,
			"aboutURL": "",
			"lastUpdated": "2021-03-08T15:21:47.541297Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "Cryptocurrency/Dogecoin/doge-usd.py",
					"filename": "doge-usd.py",
					"content": "#!/usr/bin/python\n# coding=utf-8\n#\n# \u003cbitbar.title\u003eDogecoin coin Ticker ($1USD)\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev1.1\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eimpshum\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003eimpshum\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eDisplays current Dogecoin price for $1 from Coinmarketcap.com\u003c/bitbar.desc\u003e\n# \u003cbitbar.image\u003ehttp://i.imgur.com/FBUh3fk.jpg\u003c/bitbar.image\u003e\n#\n# by impshum\n\nfrom urllib import urlopen\nurl = urlopen('https://api.coinmarketcap.com/v1/ticker/dogecoin/').read()\n\nimport json\nresult = json.loads(url)\n\ndef flow():\n\n    if result[0]['percent_change_24h'] \u003e '0':\n        print (' $%.4f | image=iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QAyQACAALwzISXAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH4AQHACkSBTjB+AAAALNJREFUOMvVk70NAjEMhb87WYiGBZAQU7ABNSVSWpZgEEagsJDoKBELUCEKFuBuCKTw0xyQC0lICe5i+/k9/wT+3opUUJQhcAUqa8I5ZQT4tANwioGTCkQZA9vmOQE2oUJFhL0DXBz33RpKUfCLfLTQJMx9IlEWuQr6QB3prGtNS1lwiMvEYo7ekNsKRBkB+y+rH1hDFVOwy7ids+gbVzrsM6CXeYDTF85xroB1ZoHb73ymB5RhJkpZTihGAAAAAElFTkSuQmCC color=#000000'% float(result[0]['price_usd']))\n    else:\n        print (' $%.4f | image=iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QABACnAADQ9FZaAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH4AQHACQ1FZwK3gAAAMRJREFUOMvNkjEKAjEQRZ+jKNjYKh5AbzCdjVcQj+BFPIKlp7EMeAJrUbASQVCEr80uG9cNbqe/Cgn/5WUI/DqNfBHM+kCzbs+lPUAr2pwBq5qABbB+M8gszkDvS/kOdAG5VBgEM4ApsP0CGLukjxlEoA0wSZR3Lo0qhxhZDIBDAmDA0wsBLD51CZeOwLKivHbprZx6AkAHuEXbD5fawYwywMqAzOKeDTTPvKqcTGZBMLsGs0utn5gADYEHcKp9e9ni//MCDtNCE3qjsIwAAAAASUVORK5CYII= color=#000000'% float(result[0]['price_usd']))\n\nflow()\n"
				}
			],
			"path": "Cryptocurrency/Dogecoin/doge-usd.py",
			"filename": "doge-usd.py",
			"dir": "Cryptocurrency/Dogecoin",
			"docsPlugin": "Cryptocurrency/Dogecoin/doge-usd.py.html",
			"docsCategory": "Cryptocurrency/Dogecoin.html",
			"pathSegments": [
				"Cryptocurrency",
				"Dogecoin"
			],
			"categoryPathSegments": [
				{
					"path": "Cryptocurrency",
					"text": "Cryptocurrency",
					"isLast": false
				},
				{
					"path": "Cryptocurrency/Dogecoin",
					"text": "Dogecoin",
					"isLast": true
				}
			],
			"title": "Dogecoin coin Ticker ($1USD)",
			"version": "v1.1",
			"author": "impshum",
			"authors": [
				{
					"name": "impshum",
					"githubUsername": "impshum",
					"imageURL": "https://avatars.githubusercontent.com/u/3229127?v=4",
					"bio": "If it wasn't for those damn whelks!",
					"primary": true
				}
			],
			"desc": "Displays current Dogecoin price for $1 from Coinmarketcap.com",
			"imageURL": "http://i.imgur.com/FBUh3fk.jpg",
			"dependencies": null,
			"aboutURL": "",
			"lastUpdated": "2021-03-08T15:21:45.936854Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "Cryptocurrency/Dogecoin/doge-gbp.py",
					"filename": "doge-gbp.py",
					"content": "#!/usr/bin/python\n# coding=utf-8\n#\n# \u003cbitbar.title\u003eDogecoin coin Ticker (£1GBP)\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev1.0\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eimpshum\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003eimpshum\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eDisplays current Dogecoin price for £1 from Coinmarketcap\u003c/bitbar.desc\u003e\n# \u003cbitbar.image\u003ehttp://i.imgur.com/FBUh3fk.jpg\u003c/bitbar.image\u003e\n#\n# by impshum\n\nfrom urllib import urlopen\nurl = urlopen('https://coinmarketcap-nexuist.rhcloud.com/api/doge').read()\n\nimport json\nresult = json.loads(url)\n\ndef flow():\n    if result ['change'] \u003e '0':\n        print (' £%.4f | image=iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QAyQACAALwzISXAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH4AQHACkSBTjB+AAAALNJREFUOMvVk70NAjEMhb87WYiGBZAQU7ABNSVSWpZgEEagsJDoKBELUCEKFuBuCKTw0xyQC0lICe5i+/k9/wT+3opUUJQhcAUqa8I5ZQT4tANwioGTCkQZA9vmOQE2oUJFhL0DXBz33RpKUfCLfLTQJMx9IlEWuQr6QB3prGtNS1lwiMvEYo7ekNsKRBkB+y+rH1hDFVOwy7ids+gbVzrsM6CXeYDTF85xroB1ZoHb73ymB5RhJkpZTihGAAAAAElFTkSuQmCC color=#000000'% float(result['price']['gbp']))\n    else:\n        print (' £%.4f | image=iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QABACnAADQ9FZaAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH4AQHACQ1FZwK3gAAAMRJREFUOMvNkjEKAjEQRZ+jKNjYKh5AbzCdjVcQj+BFPIKlp7EMeAJrUbASQVCEr80uG9cNbqe/Cgn/5WUI/DqNfBHM+kCzbs+lPUAr2pwBq5qABbB+M8gszkDvS/kOdAG5VBgEM4ApsP0CGLukjxlEoA0wSZR3Lo0qhxhZDIBDAmDA0wsBLD51CZeOwLKivHbprZx6AkAHuEXbD5fawYwywMqAzOKeDTTPvKqcTGZBMLsGs0utn5gADYEHcKp9e9ni//MCDtNCE3qjsIwAAAAASUVORK5CYII= color=#000000'% float(result['price']['gbp']))\n\nflow()\n"
				}
			],
			"path": "Cryptocurrency/Dogecoin/doge-gbp.py",
			"filename": "doge-gbp.py",
			"dir": "Cryptocurrency/Dogecoin",
			"docsPlugin": "Cryptocurrency/Dogecoin/doge-gbp.py.html",
			"docsCategory": "Cryptocurrency/Dogecoin.html",
			"pathSegments": [
				"Cryptocurrency",
				"Dogecoin"
			],
			"categoryPathSegments": [
				{
					"path": "Cryptocurrency",
					"text": "Cryptocurrency",
					"isLast": false
				},
				{
					"path": "Cryptocurrency/Dogecoin",
					"text": "Dogecoin",
					"isLast": true
				}
			],
			"title": "Dogecoin coin Ticker (£1GBP)",
			"version": "v1.0",
			"author": "impshum",
			"authors": [
				{
					"name": "impshum",
					"githubUsername": "impshum",
					"imageURL": "https://avatars.githubusercontent.com/u/3229127?v=4",
					"bio": "If it wasn't for those damn whelks!",
					"primary": true
				}
			],
			"desc": "Displays current Dogecoin price for £1 from Coinmarketcap",
			"imageURL": "http://i.imgur.com/FBUh3fk.jpg",
			"dependencies": null,
			"aboutURL": "",
			"lastUpdated": "2021-03-08T15:21:45.920128Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "Cryptocurrency/Ethereum/gasnow.10s.sh",
					"filename": "gasnow.10s.sh",
					"content": "#!/bin/bash\n#\n# \u003cbitbar.title\u003eETH Gas Price\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev1.0.1\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eBiran Yucel\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003ebiranyucel\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eETH GasPrice forecast system.\u003c/bitbar.desc\u003e\n# \u003cbitbar.image\u003ehttps://i.imgur.com/f1hPKO2.png\u003c/bitbar.image\u003e\n# \u003cbitbar.abouturl\u003ehttps://www.gasnow.org/\u003c/bitbar.abouturl\u003e\n#\n#ETH GasPrice forecast system based on SparkPool Pending Transaction Mempool\n\nresponse=$(curl -s https://www.gasnow.org/api/v3/gas/price)\nread code rapid fast standard slow timestamp \u003c\u003c\u003c${response//[^0-9]/ }\necho \"𝚵 Rapid ${rapid:0:((${#rapid} - 9))} | color=green\" \necho \"𝚵 Fast ${fast:0:((${#fast} - 9))} | color=orange\"\necho \"𝚵 Standard ${standard:0:((${#standard} - 9))} | color=blue\"\necho \"𝚵 Slow ${slow:0:((${#slow} - 9))} | color=purple\"\n"
				}
			],
			"path": "Cryptocurrency/Ethereum/gasnow.10s.sh",
			"filename": "gasnow.10s.sh",
			"dir": "Cryptocurrency/Ethereum",
			"docsPlugin": "Cryptocurrency/Ethereum/gasnow.10s.sh.html",
			"docsCategory": "Cryptocurrency/Ethereum.html",
			"pathSegments": [
				"Cryptocurrency",
				"Ethereum"
			],
			"categoryPathSegments": [
				{
					"path": "Cryptocurrency",
					"text": "Cryptocurrency",
					"isLast": false
				},
				{
					"path": "Cryptocurrency/Ethereum",
					"text": "Ethereum",
					"isLast": true
				}
			],
			"title": "ETH Gas Price",
			"version": "v1.0.1",
			"author": "Biran Yucel",
			"authors": [
				{
					"name": "Biran",
					"githubUsername": "biranyucel",
					"imageURL": "https://avatars.githubusercontent.com/u/39130180?v=4",
					"bio": "Data Science | Machine Learning\r\nPython",
					"primary": true
				}
			],
			"desc": "ETH GasPrice forecast system.",
			"imageURL": "https://i.imgur.com/f1hPKO2.png",
			"dependencies": null,
			"aboutURL": "https://www.gasnow.org/",
			"lastUpdated": "2021-03-08T15:21:46.302797Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "Cryptocurrency/Ethereum/ethminer.5s.py",
					"filename": "ethminer.5s.py",
					"content": "#!/usr/local/bin/python3\n\n# \u003cbitbar.title\u003eEthMiner\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev1.0\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eCédric Foellmi\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003eonekiloparsec\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eStart and stop the ethminer.\u003c/bitbar.desc\u003e\n# \u003cbitbar.image\u003ehttps://i.imgur.com/DeWnKKf.png\u003c/bitbar.image\u003e\n# \u003cbitbar.dependencies\u003epython3,psutil,ethminer\u003c/bitbar.dependencies\u003e\n\n##############################################################################\n### SETUP ###\n# 0. Install the ethminer executable.\n#    For instance from https://github.com/ArtSabintsev/Ethminer-for-macOS\n#\n# 1. Create a shell script with the full ethminer command, using the executable above.\n#    For instance 'ethmining.sh', with the ethminer executable inside \"~/bin\":\n#    Note also the last part '\u003e\u0026 /tmp/ethmining.log':\n#\n# #!/bin/bash\n# /Users/\u003cYourName\u003e/bin/ethminer -G -t 2 -v 2 -S \u003cPoolAddress\u003e -u \u003cUserName\u003e \u003e\u0026 /tmp/ethmining.log\n#\n# 2. Make the script executable: chmod 755 ethmining.sh\n#\n# 3. Fill the MINING_SCRIPT_FULL_PATH variable below. It is important to provide\n# the full path of the script. No ~, no ./... etc.\n#\n# 4. Make sure MINING_LOG_FULL_PATH points to the same file as the last part of the script above.\n#\n# 5. Consider a small tip, thanks! :-) ETH: 0x1Dd0e805a5DC21e40B28D4763c6Af790cd6bcd33\n##############################################################################\n\nimport os\n\n##############################################################################\n# Customize your variables here\nMINING_SCRIPT_NAME = \"ethmining.sh\"\nMINING_SCRIPT_FULL_PATH = \"{}/bin/{}\".format(os.environ['HOME'], MINING_SCRIPT_NAME)\nMINING_LOG_FULL_PATH = \"/tmp/ethmining.log\"\nMINING_LOG_LINES_NUMBER = \"10\" # MUST BE LARGER THAN 0\n##############################################################################\n\nimport re\nimport psutil\nimport subprocess\n\nstarted = 'ethminer' in [ p.name() for p in psutil.process_iter(attrs=['name']) ]\nansi_escape = re.compile(r'\\x1B\\[[0-?]*[ -/]*[@-~]')\n\nprint(\"| templateImage=iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAAlwSFlzAAALEwAACxMBAJqcGAAAAVlpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IlhNUCBDb3JlIDUuNC4wIj4KICAgPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4KICAgICAgPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIKICAgICAgICAgICAgeG1sbnM6dGlmZj0iaHR0cDovL25zLmFkb2JlLmNvbS90aWZmLzEuMC8iPgogICAgICAgICA8dGlmZjpPcmllbnRhdGlvbj4xPC90aWZmOk9yaWVudGF0aW9uPgogICAgICA8L3JkZjpEZXNjcmlwdGlvbj4KICAgPC9yZGY6UkRGPgo8L3g6eG1wbWV0YT4KTMInWQAAAoRJREFUOBF9Uk2IUlEUfvf9+JMS5K7nyORALRqwYdyW4+CiWUSLSNsEUQPKgERTIRQ2WplTMs2ihWDtpJUStRNy43YCZ5EIFUQOikoIo4HO0/fXOa+eORkdeLx7zz3fd8/3nUtR/4h4PE5jOhKJzITDYSeu9RyuJ4Od3OjrUqmEBArLGV/UG1+OwXq5Wq0S/fy/f7hJI02ltpcePU6oS95l1eVyXUSQ2+3m/gZrrU4kCRBIuBclYZvQNCXLsCVkK5PJcOVyWYSjQ50cIoAi7fZEMnmLMxgXxdFIIoSIqqqezGazUSSGLg7JHhP4/X4mFAqJ0AGvyMpDRZYphmHwnFUUhToQhHs+n+8UdoG1SIYxJvi1pSiLxfrUbDYf7XQ6YqVSoev1OgEClMX1+/0trMvn86perzGhcel0Wo5Go5f7g0Fid7c8go9tt5vkR69H9bpdagRBM8zpE3NzzWajUfZ6vWytVlN0PQoyQqK382HnI3ThMplMlMFgkPb3u+AhYQVBMLZbrc8Oh+M71sKoNYwmIRaLaS15PJ691Rur9wf9flgUxR54wILlLE3TB1ar9e78/Pxtp9P5FQn00EeCfyQhT5Kb7ziWa+7tfXv1vli8CZMw8Tz/HHy4AtM4Y7PZLhQKhSHWIkY3Uc3lcuiHesRsuiYMhdBx3l4Mra0VZ2Zn38AE3oqSdAfA1xGM+rEWvj9TCAQCMj6W9fX1LmPgfOCBbSQMXzOE5GRFtlstlksAboAMA+jXHhsSTEUwGNSe6+bmsxTIUc+e86gLiwsvfxfqpk/hxgnQqftCPdjY+HR+ZaUFhxoQxq1LHtdPJWBkuh/UUBCu2nneD9US6gYCbXRjNCx+ArWREQKYptF1AAAAAElFTkSuQmCC\")\nprint(\"---\")\n\nif started is True:\n    print(\"Stop ethminer | terminal=false bash=/usr/bin/killall param1=ethminer\")\nelse:\n    print(\"Start ethminer | terminal=false bash=\\\"{}\\\"\".format(MINING_SCRIPT_FULL_PATH))\n\nprint(\"---\")\n\nif started is True:\n    print(\"Running !\")\n\nproc = subprocess.run(['tail', '-'+MINING_LOG_LINES_NUMBER, MINING_LOG_FULL_PATH], stdout=subprocess.PIPE, stderr=subprocess.PIPE)\nif proc.returncode == 0:\n    if not started:\n        print(\"Last log lines of the previous session:\")\n\n    for line in proc.stdout.split(b'\\n'):\n        s = line.replace(b'|', b' ').replace(b'\\xe2\\x84\\xb9', b' ')\n        print(s.decode('utf8'))\n"
				}
			],
			"path": "Cryptocurrency/Ethereum/ethminer.5s.py",
			"filename": "ethminer.5s.py",
			"dir": "Cryptocurrency/Ethereum",
			"docsPlugin": "Cryptocurrency/Ethereum/ethminer.5s.py.html",
			"docsCategory": "Cryptocurrency/Ethereum.html",
			"pathSegments": [
				"Cryptocurrency",
				"Ethereum"
			],
			"categoryPathSegments": [
				{
					"path": "Cryptocurrency",
					"text": "Cryptocurrency",
					"isLast": false
				},
				{
					"path": "Cryptocurrency/Ethereum",
					"text": "Ethereum",
					"isLast": true
				}
			],
			"title": "EthMiner",
			"version": "v1.0",
			"author": "Cédric Foellmi",
			"authors": [
				{
					"name": "Cédric Foellmi",
					"githubUsername": "onekiloparsec",
					"imageURL": "https://avatars.githubusercontent.com/u/226224?v=4",
					"bio": "   ... → Ph.D: astrophysicist → Chile: researcher → France: scientist → ! → developer → french → (GVA) → Grenoble → head of software → freelance -\u003e Tech Lead",
					"primary": true
				}
			],
			"desc": "Start and stop the ethminer.",
			"imageURL": "https://i.imgur.com/DeWnKKf.png",
			"dependencies": [
				"python3",
				"psutil",
				"ethminer"
			],
			"aboutURL": "",
			"lastUpdated": "2021-03-08T15:21:46.231621Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "Cryptocurrency/Ethereum/ethbtc.sh",
					"filename": "ethbtc.sh",
					"content": "#!/bin/bash\n\n# Shows last Ethereum price on Bitfinex in BTC.\n#\n# \u003cbitbar.title\u003eEthereum BFX price\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003e0.1\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eCorvin Wimmer\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003ecorv89\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eShows last Ethereum price on Bitfinex in BTC.\u003c/bitbar.desc\u003e\n# \u003cbitbar.image\u003ehttp://i.imgur.com/w6D7HHe.png\u003c/bitbar.image\u003e\n\necho -n \"ETH \"; curl -s \"https://api.bitfinex.com/v1/pubticker/ETHBTC\" | grep -Eo 'last_price\":\"[0-9]+\\.[0-9]+' | sed 's/last_price\":\"//'"
				}
			],
			"path": "Cryptocurrency/Ethereum/ethbtc.sh",
			"filename": "ethbtc.sh",
			"dir": "Cryptocurrency/Ethereum",
			"docsPlugin": "Cryptocurrency/Ethereum/ethbtc.sh.html",
			"docsCategory": "Cryptocurrency/Ethereum.html",
			"pathSegments": [
				"Cryptocurrency",
				"Ethereum"
			],
			"categoryPathSegments": [
				{
					"path": "Cryptocurrency",
					"text": "Cryptocurrency",
					"isLast": false
				},
				{
					"path": "Cryptocurrency/Ethereum",
					"text": "Ethereum",
					"isLast": true
				}
			],
			"title": "Ethereum BFX price",
			"version": "0.1",
			"author": "Corvin Wimmer",
			"authors": [
				{
					"name": "Corvin Wimmer",
					"githubUsername": "corv89",
					"imageURL": "https://avatars.githubusercontent.com/u/7198687?v=4",
					"bio": "",
					"primary": true
				}
			],
			"desc": "Shows last Ethereum price on Bitfinex in BTC.",
			"imageURL": "http://i.imgur.com/w6D7HHe.png",
			"dependencies": null,
			"aboutURL": "",
			"lastUpdated": "2021-03-08T15:21:46.193158Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "Cryptocurrency/Ethereum/eth-usd.1s.py",
					"filename": "eth-usd.1s.py",
					"content": "#!/usr/bin/env python\n# coding=utf-8\n#\n# \u003cbitbar.title\u003eEthereum USD Tracker\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev2.0\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003emgjo5899\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003emgjo5899\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eIt tracks Ethereum price in USD\u003c/bitbar.desc\u003e\n# \u003cbitbar.image\u003ehttps://i.imgur.com/YEn5Cnk.png\u003c/bitbar.image\u003e\n# \u003cbitbar.dependencies\u003epython\u003c/bitbar.dependencies\u003e\n#\n# by mgjo5899\n\ntry:\n  import requests\nexcept ImportError:\n  print(\"Need to install requests module\")\n  print(\"Type the following:\")\n  print(\"pip install requests\")\n\nimport json\n\nurl = 'https://www.worldcoinindex.com/apiservice/json?key=zQ5ePYHCeRw211NEeQ8DrZMbI'\nr = requests.get(url)\nj = json.loads(r.text)\n\nfor market in j['Markets']:\n  if 'ethereum' == market['Name'].lower():\n    price = market['Price_usd']\n\nprice = \"%.2f\" % price\n\nprint(str(price) + \" | image=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\")\n"
				}
			],
			"path": "Cryptocurrency/Ethereum/eth-usd.1s.py",
			"filename": "eth-usd.1s.py",
			"dir": "Cryptocurrency/Ethereum",
			"docsPlugin": "Cryptocurrency/Ethereum/eth-usd.1s.py.html",
			"docsCategory": "Cryptocurrency/Ethereum.html",
			"pathSegments": [
				"Cryptocurrency",
				"Ethereum"
			],
			"categoryPathSegments": [
				{
					"path": "Cryptocurrency",
					"text": "Cryptocurrency",
					"isLast": false
				},
				{
					"path": "Cryptocurrency/Ethereum",
					"text": "Ethereum",
					"isLast": true
				}
			],
			"title": "Ethereum USD Tracker",
			"version": "v2.0",
			"author": "mgjo5899",
			"authors": [
				{
					"name": "Joseph",
					"githubUsername": "mgjo5899",
					"imageURL": "https://avatars.githubusercontent.com/u/17048946?v=4",
					"bio": "Listening to Yiruma songs helps me to focus when coding :)",
					"primary": true
				}
			],
			"desc": "It tracks Ethereum price in USD",
			"imageURL": "https://i.imgur.com/YEn5Cnk.png",
			"dependencies": [
				"python"
			],
			"aboutURL": "",
			"lastUpdated": "2021-03-08T15:21:46.079314Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "Cryptocurrency/Ethereum/ethusd.1m.sh",
					"filename": "ethusd.1m.sh",
					"content": "#!/bin/bash\n\n# Shows last Ethereum price in USD.\n#\n# \u003cbitbar.title\u003eEthereum last price\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003e0.1B\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eNikita Zhavoronkov\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003eHar01d\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eShows last Ethereum price in USD.\u003c/bitbar.desc\u003e\n# \u003cbitbar.image\u003ehttp://i.imgur.com/lF2AA7o.png\u003c/bitbar.image\u003e\n#\n# by Nikita Zhavoronkov\n# Based on Coinbase bitbar plugin by Mat Ryer\n\necho -n \"𝚵 \"; curl -s \"https://api.coinbase.com/v2/prices/ETH-USD/spot\" | egrep -o '\"amount\":\"[0-9]+(\\.)?' | sed 's/\"amount\"://'  | sed 's:^.\\(.*\\).$:\\1:'"
				}
			],
			"path": "Cryptocurrency/Ethereum/ethusd.1m.sh",
			"filename": "ethusd.1m.sh",
			"dir": "Cryptocurrency/Ethereum",
			"docsPlugin": "Cryptocurrency/Ethereum/ethusd.1m.sh.html",
			"docsCategory": "Cryptocurrency/Ethereum.html",
			"pathSegments": [
				"Cryptocurrency",
				"Ethereum"
			],
			"categoryPathSegments": [
				{
					"path": "Cryptocurrency",
					"text": "Cryptocurrency",
					"isLast": false
				},
				{
					"path": "Cryptocurrency/Ethereum",
					"text": "Ethereum",
					"isLast": true
				}
			],
			"title": "Ethereum last price",
			"version": "0.1B",
			"author": "Nikita Zhavoronkov",
			"authors": [
				{
					"name": "Nikita Zhavoronkov",
					"githubUsername": "Har01d",
					"imageURL": "https://avatars.githubusercontent.com/u/14060856?v=4",
					"bio": "Russian Bitcoin and blockchain enthusiast. Information security and AML/CFT specialist. Lead developer @Blockchair. Lecturer at NRNU MEPhI.",
					"primary": true
				}
			],
			"desc": "Shows last Ethereum price in USD.",
			"imageURL": "http://i.imgur.com/lF2AA7o.png",
			"dependencies": null,
			"aboutURL": "",
			"lastUpdated": "2021-03-08T15:21:46.292419Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "Cryptocurrency/Ethereum/eth-gbp.py",
					"filename": "eth-gbp.py",
					"content": "#!/usr/bin/python\n# coding=utf-8\n#\n# \u003cbitbar.title\u003eEtherium Ticker (£1GBP)\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev1.0\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eimpshum\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003eimpshum\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eDisplays current Etherium price for £1 from Coinmarketcap\u003c/bitbar.desc\u003e\n# \u003cbitbar.image\u003ehttps://i.imgur.com/3NK6mXt.jpg\u003c/bitbar.image\u003e\n#\n# by impshum\n\nfrom urllib import urlopen\nurl = urlopen('https://coinmarketcap-nexuist.rhcloud.com/api/eth').read()\n\nimport json\nresult = json.loads(url)\n\ndef flow():\n    if result ['change'] \u003e '0':\n        print (' £%.4f | image=iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QAyQACAALwzISXAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH4AQHACkSBTjB+AAAALNJREFUOMvVk70NAjEMhb87WYiGBZAQU7ABNSVSWpZgEEagsJDoKBELUCEKFuBuCKTw0xyQC0lICe5i+/k9/wT+3opUUJQhcAUqa8I5ZQT4tANwioGTCkQZA9vmOQE2oUJFhL0DXBz33RpKUfCLfLTQJMx9IlEWuQr6QB3prGtNS1lwiMvEYo7ekNsKRBkB+y+rH1hDFVOwy7ids+gbVzrsM6CXeYDTF85xroB1ZoHb73ymB5RhJkpZTihGAAAAAElFTkSuQmCC color=#000000'% float(result['price']['gbp']))\n    else:\n        print (' £%.4f | image=iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QABACnAADQ9FZaAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH4AQHACQ1FZwK3gAAAMRJREFUOMvNkjEKAjEQRZ+jKNjYKh5AbzCdjVcQj+BFPIKlp7EMeAJrUbASQVCEr80uG9cNbqe/Cgn/5WUI/DqNfBHM+kCzbs+lPUAr2pwBq5qABbB+M8gszkDvS/kOdAG5VBgEM4ApsP0CGLukjxlEoA0wSZR3Lo0qhxhZDIBDAmDA0wsBLD51CZeOwLKivHbprZx6AkAHuEXbD5fawYwywMqAzOKeDTTPvKqcTGZBMLsGs0utn5gADYEHcKp9e9ni//MCDtNCE3qjsIwAAAAASUVORK5CYII= color=#000000'% float(result['price']['gbp']))\n\nflow()\n"
				}
			],
			"path": "Cryptocurrency/Ethereum/eth-gbp.py",
			"filename": "eth-gbp.py",
			"dir": "Cryptocurrency/Ethereum",
			"docsPlugin": "Cryptocurrency/Ethereum/eth-gbp.py.html",
			"docsCategory": "Cryptocurrency/Ethereum.html",
			"pathSegments": [
				"Cryptocurrency",
				"Ethereum"
			],
			"categoryPathSegments": [
				{
					"path": "Cryptocurrency",
					"text": "Cryptocurrency",
					"isLast": false
				},
				{
					"path": "Cryptocurrency/Ethereum",
					"text": "Ethereum",
					"isLast": true
				}
			],
			"title": "Etherium Ticker (£1GBP)",
			"version": "v1.0",
			"author": "impshum",
			"authors": [
				{
					"name": "impshum",
					"githubUsername": "impshum",
					"imageURL": "https://avatars.githubusercontent.com/u/3229127?v=4",
					"bio": "If it wasn't for those damn whelks!",
					"primary": true
				}
			],
			"desc": "Displays current Etherium price for £1 from Coinmarketcap",
			"imageURL": "https://i.imgur.com/3NK6mXt.jpg",
			"dependencies": null,
			"aboutURL": "",
			"lastUpdated": "2021-03-08T15:21:45.973647Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "Cryptocurrency/Ethereum/eth_wallet_balances.1m.py",
					"filename": "eth_wallet_balances.1m.py",
					"content": "#!/usr/local/homebrew/bin/python3\n\"\"\"Loads Ethereum wallet address (configured below) and all tokens associated with\n   each address. Then displays current $USD value in the bitbar title, with a drop-down\n   showing each total value for owned ETH and each token.\n\"\"\"\nimport time\nfrom collections import defaultdict\n\nimport requests\n\n#\n# Enter your wallets here:\n#\nWALLET_ADDRESSES = [\n    '0x88752Bd600928b902EDAd9afFaaFCE1367Ae3461',\n    '0x418091020F2A909479C4058E32BE08464A45DA8A',\n]\n\n# Tickers to display at the bottom:\nTICKERS = ['BTC', 'ETH', 'LTC']\n\n# \u003cbitbar.title\u003eEtherum Wallet (and token) Balances\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev1.0\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eCharlie Schluting\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003emanos\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eDisplays a $USD total across all configured wallets, with drop-down showing the value of your ETH and all tokens held.\u003c/bitbar.desc\u003e\n# \u003cbitbar.image\u003ehttps://schluting.com/temp/bitbar-eth-bal.png\u003c/bitbar.image\u003e\n# \u003cbitbar.dependencies\u003epython3\u003c/bitbar.dependencies\u003e\n# \u003cbitbar.abouturl\u003ehttps://github.com/manos/bitbar_ethereum_wallet_balances\u003c/bitbar.abouturl\u003e\n\nETHEXPLORER_API_KEY = 'freekey'\nEE_URL = 'http://api.ethplorer.io/'\nEE_QS = '?apiKey=%s' % ETHEXPLORER_API_KEY\nCMC_LISTINGS = []\n\ndef get_json(url):\n    \"\"\"Fetches URL and returns JSON. \"\"\"\n    res = requests.get(url)\n    res.raise_for_status()\n    return res.json()\n\ndef get_ticker_price(ticker):\n    \"\"\"Returns current price (from coinmarketcap.com) for given symbol. \"\"\"\n    ticker_id = [x['id'] for x in CMC_LISTINGS['data'] if x['symbol'] == ticker][0]\n\n    resp = get_json('https://api.coinmarketcap.com/v2/ticker/%s/' % ticker_id)\n    return resp['data']['quotes']['USD']['price']\n\n\nif __name__ == '__main__':\n    eth_sum = 0\n    my_tokens = defaultdict(lambda: 0)\n\n    # Load up coinmarketcap.com listings:\n    CMC_LISTINGS = get_json('https://api.coinmarketcap.com/v2/listings/')\n\n    for addr in WALLET_ADDRESSES:\n        resp = get_json(EE_URL + 'getAddressInfo/' + addr + EE_QS)\n\n        eth_sum += resp.get('ETH', {}).get('balance', 0)\n\n        if 'tokens' in resp and resp['tokens']:\n            for token in resp['tokens']:\n                if not token['balance']:\n                    continue\n                if int(token['tokenInfo']['decimals']):\n                    # update the balance with proper decimal shift:\n                    token['balance'] = token['balance'] * 10**-int(token['tokenInfo']['decimals'])\n                # convert balance to USD now:\n                if token['tokenInfo']['price']:\n                    token_price = float(token['tokenInfo']['price']['rate'])\n                else:\n                    token_price = 0\n                my_tokens[token['tokenInfo']['symbol']] = defaultdict(float)\n                my_tokens[token['tokenInfo']['symbol']]['price'] = token_price\n                my_tokens[token['tokenInfo']['symbol']]['count'] += float(token['balance'])\n                my_tokens[token['tokenInfo']['symbol']]['usd'] += float(token['balance']) * token_price\n        time.sleep(1)\n\n    eth_price = get_ticker_price('ETH')\n    my_eth_bal = float(eth_price) * float(eth_sum)\n\n    # total $USD amount:\n    total_bal = sum(x['usd'] for x in my_tokens.values()) + my_eth_bal\n    print(\"%.2f\" % total_bal)\n    print('---')\n    print('Balances:')\n    print(\"ETH %.2f|color=green\" % my_eth_bal)\n    print('-- Tokens: %f|color=black' % eth_sum)\n    print('-- Price: %f|color=black' % eth_price)\n\n    for token in sorted((x for x in my_tokens.items()), key=lambda x: x[1]['usd'], reverse=True):\n        print(token[0], \"%.2f|color=green\" % token[1]['usd'])\n        print('-- Tokens: %f|color=black' % token[1]['count'])\n        print('-- Price: %f|color=black' % token[1]['price'])\n\n    # links to wallet addresses on etherscan.io:\n    print('Wallets:')\n    for wallet in WALLET_ADDRESSES:\n        print(\"Etherscan: %s\" % wallet[:6] + \"|href=https://etherscan.io/address/\" + wallet + \" color=blue\")\n\n    print(\"Prices:\")\n    for ticker in TICKERS:\n        print(\"%s: %s|color=green\" % (ticker, str(get_ticker_price(ticker))))\n"
				}
			],
			"path": "Cryptocurrency/Ethereum/eth_wallet_balances.1m.py",
			"filename": "eth_wallet_balances.1m.py",
			"dir": "Cryptocurrency/Ethereum",
			"docsPlugin": "Cryptocurrency/Ethereum/eth_wallet_balances.1m.py.html",
			"docsCategory": "Cryptocurrency/Ethereum.html",
			"pathSegments": [
				"Cryptocurrency",
				"Ethereum"
			],
			"categoryPathSegments": [
				{
					"path": "Cryptocurrency",
					"text": "Cryptocurrency",
					"isLast": false
				},
				{
					"path": "Cryptocurrency/Ethereum",
					"text": "Ethereum",
					"isLast": true
				}
			],
			"title": "Etherum Wallet (and token) Balances",
			"version": "v1.0",
			"author": "Charlie Schluting",
			"authors": [
				{
					"name": "Charlie Schluting",
					"githubUsername": "manos",
					"imageURL": "https://avatars.githubusercontent.com/u/132518?v=4",
					"bio": "",
					"primary": true
				}
			],
			"desc": "Displays a $USD total across all configured wallets, with drop-down showing the value of your ETH and all tokens held.",
			"imageURL": "https://schluting.com/temp/bitbar-eth-bal.png",
			"dependencies": [
				"python3"
			],
			"aboutURL": "https://github.com/manos/bitbar_ethereum_wallet_balances",
			"lastUpdated": "2021-03-08T15:21:46.186415Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "Cryptocurrency/garlicoin.1m.sh",
					"filename": "garlicoin.1m.sh",
					"content": "#!/bin/bash\n\n# \u003cbitbar.title\u003eGarlicoin Balance\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev1.1\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eferdizz\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003eferdizz\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eShows your current Garlicoin balance.\u003c/bitbar.desc\u003e\n# \u003cbitbar.image\u003ehttps://raw.githubusercontent.com/ferdizz/files/master/garlic-screenshot.png\u003c/bitbar.image\u003e\n# \u003cbitbar.dependencies\u003ebash\u003c/bitbar.dependencies\u003e\n\nbalance=0\n\ndeclare -a addresses=(\n    \"INSERT-YOUR-WALLET-ADDRESS-#1-HERE\"\n    \"INSERT-YOUR-WALLET-ADDRESS-#2-HERE\" # \u003c-- Repeat for every address you want to add\n)\n\nfor i in \"${addresses[@]}\"\ndo\n    res=\"$(curl -s 'https://garli.co.in/ext/getbalance/'\"$i\")\"\n    balance=\"$(echo \"$balance + $res\" | bc)\"\ndone\n\necho \"$(printf '%.1f' \"$balance\") ₲\"\necho \"---\"\necho \"$balance Garlicoins\"\n\n# GPuEScAvXJvviVMaTH2xg4KPgPDD52AK1M if you want to donate some of that sweet sweet garlic"
				}
			],
			"path": "Cryptocurrency/garlicoin.1m.sh",
			"filename": "garlicoin.1m.sh",
			"dir": "Cryptocurrency",
			"docsPlugin": "Cryptocurrency/garlicoin.1m.sh.html",
			"docsCategory": "Cryptocurrency.html",
			"pathSegments": [
				"Cryptocurrency"
			],
			"categoryPathSegments": [
				{
					"path": "Cryptocurrency",
					"text": "Cryptocurrency",
					"isLast": true
				}
			],
			"title": "Garlicoin Balance",
			"version": "v1.1",
			"author": "ferdizz",
			"authors": [
				{
					"name": "Ferdinand",
					"githubUsername": "ferdizz",
					"imageURL": "https://avatars.githubusercontent.com/u/9082645?v=4",
					"bio": "",
					"primary": true
				}
			],
			"desc": "Shows your current Garlicoin balance.",
			"imageURL": "https://raw.githubusercontent.com/ferdizz/files/master/garlic-screenshot.png",
			"dependencies": [
				"bash"
			],
			"aboutURL": "",
			"lastUpdated": "2021-03-08T15:21:47.676441Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "Cryptocurrency/Bitcoin/huobi.com/huobiprice.1s.py",
					"filename": "huobiprice.1s.py",
					"content": "#!/usr/bin/python\n# coding=utf-8\n\n# \u003cbitbar.title\u003eHuobi last price\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev1.0\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eSam Xie\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003emountain3th\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eA very simple huobi last price display tool\u003c/bitbar.desc\u003e\n# \u003cbitbar.dependencies\u003epython\u003c/bitbar.dependencies\u003e\n#\n# by mountain3th/Sam Xie\n\nimport urllib2\n\n\ndef price():\n    response = urllib2.urlopen('https://api.huobi.com/staticmarket/td_btc.html').read()\n    lines = response.split('\\n')\n    last_line = lines[-2]\n    last_second_line = lines[-3]\n    open_price = float(lines[2])\n    last_price = float(last_second_line.split(',')[1])\n    current_price = float(last_line.split(',')[1])\n    return open_price, last_price, current_price\n\ndef prices_output():\n    open_price, last_price, current_price = price()\n    return u'火币网:￥%s%s  %.2f' % (current_price, u'⬆️' if current_price \u003e last_price else u'⬇️', (current_price - open_price) / open_price * 100) + '%'\n\nif __name__ == '__main__':\n    print prices_output().encode('utf-8')\n"
				}
			],
			"path": "Cryptocurrency/Bitcoin/huobi.com/huobiprice.1s.py",
			"filename": "huobiprice.1s.py",
			"dir": "Cryptocurrency/Bitcoin/huobi.com",
			"docsPlugin": "Cryptocurrency/Bitcoin/huobi.com/huobiprice.1s.py.html",
			"docsCategory": "Cryptocurrency/Bitcoin/huobi.com.html",
			"pathSegments": [
				"Cryptocurrency",
				"Bitcoin",
				"huobi.com"
			],
			"categoryPathSegments": [
				{
					"path": "Cryptocurrency",
					"text": "Cryptocurrency",
					"isLast": false
				},
				{
					"path": "Cryptocurrency/Bitcoin",
					"text": "Bitcoin",
					"isLast": false
				},
				{
					"path": "Cryptocurrency/Bitcoin/huobi.com",
					"text": "huobi.com",
					"isLast": true
				}
			],
			"title": "Huobi last price",
			"version": "v1.0",
			"author": "Sam Xie",
			"authors": [
				{
					"name": "Sam Xie",
					"githubUsername": "mountain3th",
					"imageURL": "https://avatars.githubusercontent.com/u/5469314?v=4",
					"bio": "",
					"primary": true
				}
			],
			"desc": "A very simple huobi last price display tool",
			"imageURL": "https://xbarapp.com/public/img/xbar-2048.png",
			"dependencies": [
				"python"
			],
			"aboutURL": "",
			"lastUpdated": "2021-03-08T15:21:45.545903Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "Cryptocurrency/Ethereum/ether-eur-kraken.30s.sh",
					"filename": "ether-eur-kraken.30s.sh",
					"content": "#!/bin/bash\n\n# \u003cbitbar.title\u003eKraken.com ETHEUR last price\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev1.0\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eG.G.\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003eggrelet\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eGives the last price of ether to euro from Kraken.com\u003c/bitbar.desc\u003e\n# \u003cbitbar.image\u003ehttps://i.imgur.com/iGX2yjR.png\u003c/bitbar.image\u003e\n# \u003cbitbar.dependencies\u003ebash\u003c/bitbar.dependencies\u003e\n\nval=$(curl -s \"https://api.kraken.com/0/public/Ticker?pair=ETHEUR\" | tr -d '{}\"[]' | tr ':,' '\\n' | grep -A1 \"^c$\" | tail -1)\n\necho \"$(printf \"𝚵 %.3f \\n\" \"$val\") | size=13\"\necho \"---\"\necho \"Kraken.com | href=\\\"https://www.kraken.com/\\\"\"\n"
				}
			],
			"path": "Cryptocurrency/Ethereum/ether-eur-kraken.30s.sh",
			"filename": "ether-eur-kraken.30s.sh",
			"dir": "Cryptocurrency/Ethereum",
			"docsPlugin": "Cryptocurrency/Ethereum/ether-eur-kraken.30s.sh.html",
			"docsCategory": "Cryptocurrency/Ethereum.html",
			"pathSegments": [
				"Cryptocurrency",
				"Ethereum"
			],
			"categoryPathSegments": [
				{
					"path": "Cryptocurrency",
					"text": "Cryptocurrency",
					"isLast": false
				},
				{
					"path": "Cryptocurrency/Ethereum",
					"text": "Ethereum",
					"isLast": true
				}
			],
			"title": "Kraken.com ETHEUR last price",
			"version": "v1.0",
			"author": "G.G.",
			"authors": [
				{
					"name": "G.G.",
					"githubUsername": "ggrelet",
					"imageURL": "https://avatars.githubusercontent.com/u/10114131?v=4",
					"bio": "",
					"primary": true
				}
			],
			"desc": "Gives the last price of ether to euro from Kraken.com",
			"imageURL": "https://i.imgur.com/iGX2yjR.png",
			"dependencies": [
				"bash"
			],
			"aboutURL": "",
			"lastUpdated": "2021-03-08T15:21:46.217457Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "Cryptocurrency/Lisk/lskbtc.sh",
					"filename": "lskbtc.sh",
					"content": "#!/bin/bash\n\n# Shows last Lisk price on Poloniex in BTC.\n#\n# \u003cbitbar.title\u003eLisk/BTC Poloniex price\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003e0.1\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eCorvin Wimmer\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003ecorv89\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eShows last Lisk price on Bitfinex in BTC.\u003c/bitbar.desc\u003e\n# \u003cbitbar.image\u003ehttp://i.imgur.com/j5qaX2t.png\u003c/bitbar.image\u003e\n\necho -n \"LSK \"; curl -s https://poloniex.com/public\\?command=returnTicker | grep -Eo '\"BTC_LSK\":{\"id\":163,\"last\":\"[0-9]+\\.[0-9]+' | sed 's/\"BTC_LSK\":{\"id\":163,\"last\":\"//'\n"
				}
			],
			"path": "Cryptocurrency/Lisk/lskbtc.sh",
			"filename": "lskbtc.sh",
			"dir": "Cryptocurrency/Lisk",
			"docsPlugin": "Cryptocurrency/Lisk/lskbtc.sh.html",
			"docsCategory": "Cryptocurrency/Lisk.html",
			"pathSegments": [
				"Cryptocurrency",
				"Lisk"
			],
			"categoryPathSegments": [
				{
					"path": "Cryptocurrency",
					"text": "Cryptocurrency",
					"isLast": false
				},
				{
					"path": "Cryptocurrency/Lisk",
					"text": "Lisk",
					"isLast": true
				}
			],
			"title": "Lisk/BTC Poloniex price",
			"version": "0.1",
			"author": "Corvin Wimmer",
			"authors": [
				{
					"name": "Corvin Wimmer",
					"githubUsername": "corv89",
					"imageURL": "https://avatars.githubusercontent.com/u/7198687?v=4",
					"bio": "",
					"primary": true
				}
			],
			"desc": "Shows last Lisk price on Bitfinex in BTC.",
			"imageURL": "http://i.imgur.com/j5qaX2t.png",
			"dependencies": null,
			"aboutURL": "",
			"lastUpdated": "2021-03-08T15:21:46.593402Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "Cryptocurrency/Lisk/lsk-usd.py",
					"filename": "lsk-usd.py",
					"content": "#!/usr/bin/python\n# coding=utf-8\n#\n# \u003cbitbar.title\u003eLiskcoin Ticker ($1USD)\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev1.0\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eimpshum\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003eimpshum\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eDisplays current Liskcoin price for $1 from Coinmarketcap\u003c/bitbar.desc\u003e\n# \u003cbitbar.image\u003ehttps://i.imgur.com/F4UhSWb.jpg\u003c/bitbar.image\u003e\n#\n# by impshum\n\nfrom urllib import urlopen\nurl = urlopen('https://coinmarketcap-nexuist.rhcloud.com/api/lsk').read()\n\nimport json\nresult = json.loads(url)\n\ndef flow():\n    if result ['change'] \u003e '0':\n        print (' $%.4f | image=iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QAyQACAALwzISXAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH4AQHACkSBTjB+AAAALNJREFUOMvVk70NAjEMhb87WYiGBZAQU7ABNSVSWpZgEEagsJDoKBELUCEKFuBuCKTw0xyQC0lICe5i+/k9/wT+3opUUJQhcAUqa8I5ZQT4tANwioGTCkQZA9vmOQE2oUJFhL0DXBz33RpKUfCLfLTQJMx9IlEWuQr6QB3prGtNS1lwiMvEYo7ekNsKRBkB+y+rH1hDFVOwy7ids+gbVzrsM6CXeYDTF85xroB1ZoHb73ymB5RhJkpZTihGAAAAAElFTkSuQmCC color=#000000'% float(result['price']['usd']))\n    else:\n        print (' $%.4f | image=iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QABACnAADQ9FZaAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH4AQHACQ1FZwK3gAAAMRJREFUOMvNkjEKAjEQRZ+jKNjYKh5AbzCdjVcQj+BFPIKlp7EMeAJrUbASQVCEr80uG9cNbqe/Cgn/5WUI/DqNfBHM+kCzbs+lPUAr2pwBq5qABbB+M8gszkDvS/kOdAG5VBgEM4ApsP0CGLukjxlEoA0wSZR3Lo0qhxhZDIBDAmDA0wsBLD51CZeOwLKivHbprZx6AkAHuEXbD5fawYwywMqAzOKeDTTPvKqcTGZBMLsGs0utn5gADYEHcKp9e9ni//MCDtNCE3qjsIwAAAAASUVORK5CYII= color=#000000'% float(result['price']['usd']))\n\nflow()\n"
				}
			],
			"path": "Cryptocurrency/Lisk/lsk-usd.py",
			"filename": "lsk-usd.py",
			"dir": "Cryptocurrency/Lisk",
			"docsPlugin": "Cryptocurrency/Lisk/lsk-usd.py.html",
			"docsCategory": "Cryptocurrency/Lisk.html",
			"pathSegments": [
				"Cryptocurrency",
				"Lisk"
			],
			"categoryPathSegments": [
				{
					"path": "Cryptocurrency",
					"text": "Cryptocurrency",
					"isLast": false
				},
				{
					"path": "Cryptocurrency/Lisk",
					"text": "Lisk",
					"isLast": true
				}
			],
			"title": "Liskcoin Ticker ($1USD)",
			"version": "v1.0",
			"author": "impshum",
			"authors": [
				{
					"name": "impshum",
					"githubUsername": "impshum",
					"imageURL": "https://avatars.githubusercontent.com/u/3229127?v=4",
					"bio": "If it wasn't for those damn whelks!",
					"primary": true
				}
			],
			"desc": "Displays current Liskcoin price for $1 from Coinmarketcap",
			"imageURL": "https://i.imgur.com/F4UhSWb.jpg",
			"dependencies": null,
			"aboutURL": "",
			"lastUpdated": "2021-03-08T15:21:46.515438Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "Cryptocurrency/Lisk/lsk-gbp.py",
					"filename": "lsk-gbp.py",
					"content": "#!/usr/bin/python\n# coding=utf-8\n#\n# \u003cbitbar.title\u003eLiskcoin Ticker (£1GBP)\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev1.0\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eimpshum\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003eimpshum\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eDisplays current Liskcoin price for £1 from Coinmarketcap\u003c/bitbar.desc\u003e\n# \u003cbitbar.image\u003ehttps://i.imgur.com/nxuyiow.jpg\u003c/bitbar.image\u003e\n#\n# by impshum\n\nfrom urllib import urlopen\nurl = urlopen('https://coinmarketcap-nexuist.rhcloud.com/api/lsk').read()\n\nimport json\nresult = json.loads(url)\n\ndef flow():\n    if result ['change'] \u003e '0':\n        print (' £%.4f | image=iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QAyQACAALwzISXAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH4AQHACkSBTjB+AAAALNJREFUOMvVk70NAjEMhb87WYiGBZAQU7ABNSVSWpZgEEagsJDoKBELUCEKFuBuCKTw0xyQC0lICe5i+/k9/wT+3opUUJQhcAUqa8I5ZQT4tANwioGTCkQZA9vmOQE2oUJFhL0DXBz33RpKUfCLfLTQJMx9IlEWuQr6QB3prGtNS1lwiMvEYo7ekNsKRBkB+y+rH1hDFVOwy7ids+gbVzrsM6CXeYDTF85xroB1ZoHb73ymB5RhJkpZTihGAAAAAElFTkSuQmCC color=#000000'% float(result['price']['gbp']))\n    else:\n        print (' £%.4f | image=iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QABACnAADQ9FZaAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH4AQHACQ1FZwK3gAAAMRJREFUOMvNkjEKAjEQRZ+jKNjYKh5AbzCdjVcQj+BFPIKlp7EMeAJrUbASQVCEr80uG9cNbqe/Cgn/5WUI/DqNfBHM+kCzbs+lPUAr2pwBq5qABbB+M8gszkDvS/kOdAG5VBgEM4ApsP0CGLukjxlEoA0wSZR3Lo0qhxhZDIBDAmDA0wsBLD51CZeOwLKivHbprZx6AkAHuEXbD5fawYwywMqAzOKeDTTPvKqcTGZBMLsGs0utn5gADYEHcKp9e9ni//MCDtNCE3qjsIwAAAAASUVORK5CYII= color=#000000'% float(result['price']['gbp']))\n\nflow()\n"
				}
			],
			"path": "Cryptocurrency/Lisk/lsk-gbp.py",
			"filename": "lsk-gbp.py",
			"dir": "Cryptocurrency/Lisk",
			"docsPlugin": "Cryptocurrency/Lisk/lsk-gbp.py.html",
			"docsCategory": "Cryptocurrency/Lisk.html",
			"pathSegments": [
				"Cryptocurrency",
				"Lisk"
			],
			"categoryPathSegments": [
				{
					"path": "Cryptocurrency",
					"text": "Cryptocurrency",
					"isLast": false
				},
				{
					"path": "Cryptocurrency/Lisk",
					"text": "Lisk",
					"isLast": true
				}
			],
			"title": "Liskcoin Ticker (£1GBP)",
			"version": "v1.0",
			"author": "impshum",
			"authors": [
				{
					"name": "impshum",
					"githubUsername": "impshum",
					"imageURL": "https://avatars.githubusercontent.com/u/3229127?v=4",
					"bio": "If it wasn't for those damn whelks!",
					"primary": true
				}
			],
			"desc": "Displays current Liskcoin price for £1 from Coinmarketcap",
			"imageURL": "https://i.imgur.com/nxuyiow.jpg",
			"dependencies": null,
			"aboutURL": "",
			"lastUpdated": "2021-03-08T15:21:46.468986Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "Cryptocurrency/Litecoin/ltc-gbp.py",
					"filename": "ltc-gbp.py",
					"content": "#!/usr/bin/python\n# coding=utf-8\n#\n# \u003cbitbar.title\u003eLitecoin Ticker (£1GBP)\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev1.0\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eimpshum\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003eimpshum\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eDisplays current Litecoin price for £1 from Coinmarketcap\u003c/bitbar.desc\u003e\n# \u003cbitbar.image\u003ehttps://i.imgur.com/GUaQ8hZ.jpg/bitbar.image\u003e\n#\n# by impshum\n\nfrom urllib import urlopen\nurl = urlopen('https://coinmarketcap-nexuist.rhcloud.com/api/ltc').read()\n\nimport json\nresult = json.loads(url)\n\ndef flow():\n    if result ['change'] \u003e '0':\n        print (' £%.4f | image=iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QAyQACAALwzISXAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH4AQHACkSBTjB+AAAALNJREFUOMvVk70NAjEMhb87WYiGBZAQU7ABNSVSWpZgEEagsJDoKBELUCEKFuBuCKTw0xyQC0lICe5i+/k9/wT+3opUUJQhcAUqa8I5ZQT4tANwioGTCkQZA9vmOQE2oUJFhL0DXBz33RpKUfCLfLTQJMx9IlEWuQr6QB3prGtNS1lwiMvEYo7ekNsKRBkB+y+rH1hDFVOwy7ids+gbVzrsM6CXeYDTF85xroB1ZoHb73ymB5RhJkpZTihGAAAAAElFTkSuQmCC color=#000000'% float(result['price']['gbp']))\n    else:\n        print (' £%.4f | image=iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QABACnAADQ9FZaAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH4AQHACQ1FZwK3gAAAMRJREFUOMvNkjEKAjEQRZ+jKNjYKh5AbzCdjVcQj+BFPIKlp7EMeAJrUbASQVCEr80uG9cNbqe/Cgn/5WUI/DqNfBHM+kCzbs+lPUAr2pwBq5qABbB+M8gszkDvS/kOdAG5VBgEM4ApsP0CGLukjxlEoA0wSZR3Lo0qhxhZDIBDAmDA0wsBLD51CZeOwLKivHbprZx6AkAHuEXbD5fawYwywMqAzOKeDTTPvKqcTGZBMLsGs0utn5gADYEHcKp9e9ni//MCDtNCE3qjsIwAAAAASUVORK5CYII= color=#000000'% float(result['price']['gbp']))\n\nflow()\n"
				}
			],
			"path": "Cryptocurrency/Litecoin/ltc-gbp.py",
			"filename": "ltc-gbp.py",
			"dir": "Cryptocurrency/Litecoin",
			"docsPlugin": "Cryptocurrency/Litecoin/ltc-gbp.py.html",
			"docsCategory": "Cryptocurrency/Litecoin.html",
			"pathSegments": [
				"Cryptocurrency",
				"Litecoin"
			],
			"categoryPathSegments": [
				{
					"path": "Cryptocurrency",
					"text": "Cryptocurrency",
					"isLast": false
				},
				{
					"path": "Cryptocurrency/Litecoin",
					"text": "Litecoin",
					"isLast": true
				}
			],
			"title": "Litecoin Ticker (£1GBP)",
			"version": "v1.0",
			"author": "impshum",
			"authors": [
				{
					"name": "impshum",
					"githubUsername": "impshum",
					"imageURL": "https://avatars.githubusercontent.com/u/3229127?v=4",
					"bio": "If it wasn't for those damn whelks!",
					"primary": true
				}
			],
			"desc": "Displays current Litecoin price for £1 from Coinmarketcap",
			"imageURL": "https://xbarapp.com/public/img/xbar-2048.png",
			"dependencies": null,
			"aboutURL": "",
			"lastUpdated": "2021-03-08T15:21:46.601107Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "Cryptocurrency/Litecoin/ltc-usd.1s.py",
					"filename": "ltc-usd.1s.py",
					"content": "#!/usr/bin/env python\n# coding=utf-8\n#\n# \u003cbitbar.title\u003eLitecoin USD Tracker\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev2.0\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003emgjo5899\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003emgjo5899\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eIt tracks Litecoin price in USD\u003c/bitbar.desc\u003e\n# \u003cbitbar.image\u003ehttps://i.imgur.com/OI9eD75.png\u003c/bitbar.image\u003e\n# \u003cbitbar.dependencies\u003epython\u003c/bitbar.dependencies\u003e\n#\n# by mgjo5899\n\ntry:\n\timport requests\nexcept ImportError:\n  print(\"Need to install requests module\")\n  print(\"Type the following:\")\n  print(\"pip install requests\")\n\nimport json\n\nurl = 'https://www.worldcoinindex.com/apiservice/json?key=zQ5ePYHCeRw211NEeQ8DrZMbI'\nr = requests.get(url)\nj = json.loads(r.text)\n\nfor market in j['Markets']:\n  if 'litecoin' == market['Name'].lower():\n    price = market['Price_usd']\n\nprice = \"%.2f\" % price\n\nprint(str(price) + \" | image=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\")\n"
				}
			],
			"path": "Cryptocurrency/Litecoin/ltc-usd.1s.py",
			"filename": "ltc-usd.1s.py",
			"dir": "Cryptocurrency/Litecoin",
			"docsPlugin": "Cryptocurrency/Litecoin/ltc-usd.1s.py.html",
			"docsCategory": "Cryptocurrency/Litecoin.html",
			"pathSegments": [
				"Cryptocurrency",
				"Litecoin"
			],
			"categoryPathSegments": [
				{
					"path": "Cryptocurrency",
					"text": "Cryptocurrency",
					"isLast": false
				},
				{
					"path": "Cryptocurrency/Litecoin",
					"text": "Litecoin",
					"isLast": true
				}
			],
			"title": "Litecoin USD Tracker",
			"version": "v2.0",
			"author": "mgjo5899",
			"authors": [
				{
					"name": "Joseph",
					"githubUsername": "mgjo5899",
					"imageURL": "https://avatars.githubusercontent.com/u/17048946?v=4",
					"bio": "Listening to Yiruma songs helps me to focus when coding :)",
					"primary": true
				}
			],
			"desc": "It tracks Litecoin price in USD",
			"imageURL": "https://i.imgur.com/OI9eD75.png",
			"dependencies": [
				"python"
			],
			"aboutURL": "",
			"lastUpdated": "2021-03-08T15:21:46.611833Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "Cryptocurrency/Bitcoin/mayer-multiple.sh",
					"filename": "mayer-multiple.sh",
					"content": "#!/bin/bash\n\n# \u003cbitbar.title\u003eMayer Multiple (BTC)\u003c/bitbar.title\u003e\n# \u003cbitbar.author\u003eTadek Teleżyński\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003etadeoos\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003e\n#   Displays Mayer Multiple for Bitcoin\n# \u003c/bitbar.desc\u003e\n# \u003cbitbar.image\u003ehttps://i.imgur.com/NsOofDJ.png\u003c/bitbar.image\u003e\n\nRESULT=$(curl -s \"https://mayermultiple.info/current.json\")\nMM=$(echo \"$RESULT\" | grep -E -o '\"current_mayer_multiple\": \"[0-9]+(\\.)?([0-9]{0,2}\")?' | sed 's/\"current_mayer_multiple\"://' | sed 's/\\\"//g')\nBTC=$(echo \"$RESULT\" | grep -E -o '\"btc_price\": \"[0-9]+(\\.)?([0-9]{0,2}\")?' | sed 's/\"btc_price\"://' | sed 's/\\\"//g')\nAMM=$(echo \"$RESULT\" | grep -E -o '\"average_mayer_multiple\": \"[0-9]+(\\.)?([0-9]{0,2}\")?' | sed 's/\"average_mayer_multiple\"://' | sed 's/\\\"//g')\nPTH=$(echo \"$RESULT\" | grep -E -o '\"percentage_time_higher\": \"[0-9]+(\\.)?([0-9]{0,2}\")?' | sed 's/\"percentage_time_higher\"://' | sed 's/\\\"//g')\n\nif (( $(echo \"$MM \u003c 2.4\" |bc -l) )); then\n\techo \"$MM | color='green'\";\nelse\n\techo \"$MM\";\nfi\necho \"---\"\necho -n \"BTC $\"; echo \"$BTC\"\necho -n \"Average Mayer Multiple is \"; echo \"$AMM\"\necho -n \"Mayer Multiple has historically been higher \"; echo -n \"$PTH\"; echo \"% of the time\";\n"
				}
			],
			"path": "Cryptocurrency/Bitcoin/mayer-multiple.sh",
			"filename": "mayer-multiple.sh",
			"dir": "Cryptocurrency/Bitcoin",
			"docsPlugin": "Cryptocurrency/Bitcoin/mayer-multiple.sh.html",
			"docsCategory": "Cryptocurrency/Bitcoin.html",
			"pathSegments": [
				"Cryptocurrency",
				"Bitcoin"
			],
			"categoryPathSegments": [
				{
					"path": "Cryptocurrency",
					"text": "Cryptocurrency",
					"isLast": false
				},
				{
					"path": "Cryptocurrency/Bitcoin",
					"text": "Bitcoin",
					"isLast": true
				}
			],
			"title": "Mayer Multiple (BTC)",
			"version": "",
			"author": "Tadek Teleżyński",
			"authors": [
				{
					"name": "Tadek Teleżyński",
					"githubUsername": "tadeoos",
					"imageURL": "https://avatars.githubusercontent.com/u/10894783?v=4",
					"bio": "Cognitive Science graduate. Python developer. Likes to have his thoughts provoked.",
					"primary": true
				}
			],
			"desc": "",
			"imageURL": "https://i.imgur.com/NsOofDJ.png",
			"dependencies": null,
			"aboutURL": "",
			"lastUpdated": "2021-03-08T15:21:45.533819Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "Cryptocurrency/Monero/monero-btc-bitfinex.30s.sh",
					"filename": "monero-btc-bitfinex.30s.sh",
					"content": "#!/bin/bash\n\n# \u003cbitbar.title\u003eMonero BTC price at Bitfinex\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev1.0\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eMonero.how\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003emonerohow\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eShows the last Monero price (in BTC) on the Bitfinex exchange.\u003c/bitbar.desc\u003e\n# \u003cbitbar.image\u003ehttps://raw.githubusercontent.com/monerohow/misc/master/mac-menu-bar-light-and-dark.jpg\u003c/bitbar.image\u003e\n# \u003cbitbar.abouturl\u003ehttps://www.monero.how\u003c/bitbar.abouturl\u003e\n#\n# Visit https://www.monero.how for Monero tutorials, paper wallets and the latest Monero news\n# \n\nmoneroIconBase64='iVBORw0KGgoAAAANSUhEUgAAABoAAAAeCAYAAAAy2w7YAAAACXBIWXMAABYlAAAWJQFJUiTwAAAAE3RFWHRTb2Z0d2FyZQBtb25lcm8uaG9398/iYQAAAyxJREFUeNrclstrE1EUxu9MJkWrtvWxKmgXRrG4KBRELFUqVtFKqnUnLkRF1L9AwYXBpeBCEVcuXIgbQRG0rYraGokP4iok5KHZqJi0TUwnD9I8/U48I9Mwk7FNcOGBX7i599zz3ee5I7lcLmFh/eAgGAAOsA5IIAm+AA+YBN5GQZQGbXvBJTAMZIP2DWArOASuglfgGnhuFMwowApwG7wEB0x86o1muA88A3fAKiuhTvAYXODOy7Ez4AlYbya0EjzgWTRrQ+AhWG0kdB3sF62zPeBWvdBucJ7L0+BrEwI/wGsun9QGrwld0e2JGxwGsWWIJIATvNDV0f2RSaiPj7Jma4CPO8wtQSQFRsEn0KGrp/u3Q+bRGx1hryRJR3iUVjYP3zG+vEbmJIFBs96VSsWDACMWy5iAjxO+U9Vq1cxnQOa0sshsNptIJpPC7/eLQqHwUZZls2VMoW20VCq5A4GASCQStb4G1kNCaxddcUkS5XJZxONxoaqqCIfDYmFhwYuA9cs4j7oxDMRDPuQ7MzMjIFqLUWcdslEGIOd8Pi/sdvvFTCbTFwqFSMyDwCOcTFWaJUSmWKRXUZTL6CMVi0Vhlut+Giav36Pqx1KMZ7NZBwVEkNoy0nKh7I5EIiKdTvfAZwK+O9HHbJNUEoo2yH8q6CYxzMwRDAZJzAOmaZaYySa0PaU9YF+zHPqNnokpzk2aFXVrrBW2sNgIBD5TO8+ERLbrfbkvrV9BF3NaQcNNLMUj/KFpSygnaWMNNpXEJiFGl7vIy9WrX2rqk8vlRHt7+w0c93taTJS/K2jMplKpIDloJ46ONt0J/C/VLcFmDIQetpJeRDtD9BONRgXizWIgsxQDoqKrq0soPp+P7oodlYM8AiQmWZvNRoON3Way4d3oM0SzisX+3G8ZdW/b2toKCh1HBK6g8iw43kTWpid/mAaou7S0Je6aBo+8DM5x5m6VfQCntcOlP4ZpcAy8aYHIe3CUM7rheZ/jbH63CZH7/GUUs/oKyoBTLLiU2dETQfnwhH4mf/NdN87Qw0U5bhdngE4tqfKT/w5MWO2v1OANaanJ4h/Z/yf0S4ABAI1oQOxFaPzhAAAAAElFTkSuQmCC'\n\nxmrLast=$(curl -s https://api.bitfinex.com/v1/pubticker/xmrbtc | tr -d '{}\"' | tr ':,' '\\n' | grep -A1 \"last_price\" | tail -1)\nprintf \"%.*f | image=%s\\n\" 5 \"$xmrLast\" \"$moneroIconBase64\"\necho \"---\"\necho \"Live chart | href=\\\"https://www.monero.how/monero-chart\\\"\"\necho \"Monero.how homepage | href=\\\"https://www.monero.how\\\"\"\n\n"
				}
			],
			"path": "Cryptocurrency/Monero/monero-btc-bitfinex.30s.sh",
			"filename": "monero-btc-bitfinex.30s.sh",
			"dir": "Cryptocurrency/Monero",
			"docsPlugin": "Cryptocurrency/Monero/monero-btc-bitfinex.30s.sh.html",
			"docsCategory": "Cryptocurrency/Monero.html",
			"pathSegments": [
				"Cryptocurrency",
				"Monero"
			],
			"categoryPathSegments": [
				{
					"path": "Cryptocurrency",
					"text": "Cryptocurrency",
					"isLast": false
				},
				{
					"path": "Cryptocurrency/Monero",
					"text": "Monero",
					"isLast": true
				}
			],
			"title": "Monero BTC price at Bitfinex",
			"version": "v1.0",
			"author": "Monero.how",
			"authors": [
				{
					"name": "Monero.how",
					"githubUsername": "monerohow",
					"imageURL": "https://avatars.githubusercontent.com/u/24931986?v=4",
					"bio": "",
					"primary": true
				}
			],
			"desc": "Shows the last Monero price (in BTC) on the Bitfinex exchange.",
			"imageURL": "https://raw.githubusercontent.com/monerohow/misc/master/mac-menu-bar-light-and-dark.jpg",
			"dependencies": null,
			"aboutURL": "https://www.monero.how",
			"lastUpdated": "2021-03-08T15:21:46.679192Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "Cryptocurrency/Monero/monero-btc-kraken.30s.sh",
					"filename": "monero-btc-kraken.30s.sh",
					"content": "#!/bin/bash\n\n# \u003cbitbar.title\u003eMonero BTC price at Kraken\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev1.0\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eMonero.how\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003emonerohow\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eShows the last Monero price (in BTC) on the Kraken exchange\u003c/bitbar.desc\u003e\n# \u003cbitbar.image\u003ehttps://raw.githubusercontent.com/monerohow/misc/master/mac-menu-bar-light-and-dark.jpg\u003c/bitbar.image\u003e\n# \u003cbitbar.abouturl\u003ehttps://www.monero.how\u003c/bitbar.abouturl\u003e\n#\n# Visit https://www.monero.how for Monero tutorials, paper wallets and the latest Monero news\n# \n\nmoneroIconBase64='iVBORw0KGgoAAAANSUhEUgAAABoAAAAeCAYAAAAy2w7YAAAACXBIWXMAABYlAAAWJQFJUiTwAAAAE3RFWHRTb2Z0d2FyZQBtb25lcm8uaG9398/iYQAAAyxJREFUeNrclstrE1EUxu9MJkWrtvWxKmgXRrG4KBRELFUqVtFKqnUnLkRF1L9AwYXBpeBCEVcuXIgbQRG0rYraGokP4iok5KHZqJi0TUwnD9I8/U48I9Mwk7FNcOGBX7i599zz3ee5I7lcLmFh/eAgGAAOsA5IIAm+AA+YBN5GQZQGbXvBJTAMZIP2DWArOASuglfgGnhuFMwowApwG7wEB0x86o1muA88A3fAKiuhTvAYXODOy7Ez4AlYbya0EjzgWTRrQ+AhWG0kdB3sF62zPeBWvdBucJ7L0+BrEwI/wGsun9QGrwld0e2JGxwGsWWIJIATvNDV0f2RSaiPj7Jma4CPO8wtQSQFRsEn0KGrp/u3Q+bRGx1hryRJR3iUVjYP3zG+vEbmJIFBs96VSsWDACMWy5iAjxO+U9Vq1cxnQOa0sshsNptIJpPC7/eLQqHwUZZls2VMoW20VCq5A4GASCQStb4G1kNCaxddcUkS5XJZxONxoaqqCIfDYmFhwYuA9cs4j7oxDMRDPuQ7MzMjIFqLUWcdslEGIOd8Pi/sdvvFTCbTFwqFSMyDwCOcTFWaJUSmWKRXUZTL6CMVi0Vhlut+Giav36Pqx1KMZ7NZBwVEkNoy0nKh7I5EIiKdTvfAZwK+O9HHbJNUEoo2yH8q6CYxzMwRDAZJzAOmaZaYySa0PaU9YF+zHPqNnokpzk2aFXVrrBW2sNgIBD5TO8+ERLbrfbkvrV9BF3NaQcNNLMUj/KFpSygnaWMNNpXEJiFGl7vIy9WrX2rqk8vlRHt7+w0c93taTJS/K2jMplKpIDloJ46ONt0J/C/VLcFmDIQetpJeRDtD9BONRgXizWIgsxQDoqKrq0soPp+P7oodlYM8AiQmWZvNRoON3Way4d3oM0SzisX+3G8ZdW/b2toKCh1HBK6g8iw43kTWpid/mAaou7S0Je6aBo+8DM5x5m6VfQCntcOlP4ZpcAy8aYHIe3CUM7rheZ/jbH63CZH7/GUUs/oKyoBTLLiU2dETQfnwhH4mf/NdN87Qw0U5bhdngE4tqfKT/w5MWO2v1OANaanJ4h/Z/yf0S4ABAI1oQOxFaPzhAAAAAElFTkSuQmCC'\n\nxmrLast=$(curl -s \"https://api.kraken.com/0/public/Ticker?pair=XMRXBT\" | tr -d '{}\"[]' | tr ':,' '\\n' | grep -A1 \"^c$\" | tail -1)\nprintf \"%.*f | image=%s\\n\" 5 \"$xmrLast\" \"$moneroIconBase64\"\necho \"---\"\necho \"Live chart | href=\\\"https://www.monero.how/monero-chart\\\"\"\necho \"Monero.how homepage | href=\\\"https://www.monero.how\\\"\"\n\n"
				}
			],
			"path": "Cryptocurrency/Monero/monero-btc-kraken.30s.sh",
			"filename": "monero-btc-kraken.30s.sh",
			"dir": "Cryptocurrency/Monero",
			"docsPlugin": "Cryptocurrency/Monero/monero-btc-kraken.30s.sh.html",
			"docsCategory": "Cryptocurrency/Monero.html",
			"pathSegments": [
				"Cryptocurrency",
				"Monero"
			],
			"categoryPathSegments": [
				{
					"path": "Cryptocurrency",
					"text": "Cryptocurrency",
					"isLast": false
				},
				{
					"path": "Cryptocurrency/Monero",
					"text": "Monero",
					"isLast": true
				}
			],
			"title": "Monero BTC price at Kraken",
			"version": "v1.0",
			"author": "Monero.how",
			"authors": [
				{
					"name": "Monero.how",
					"githubUsername": "monerohow",
					"imageURL": "https://avatars.githubusercontent.com/u/24931986?v=4",
					"bio": "",
					"primary": true
				}
			],
			"desc": "Shows the last Monero price (in BTC) on the Kraken exchange",
			"imageURL": "https://raw.githubusercontent.com/monerohow/misc/master/mac-menu-bar-light-and-dark.jpg",
			"dependencies": null,
			"aboutURL": "https://www.monero.how",
			"lastUpdated": "2021-03-08T15:21:46.679082Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "Cryptocurrency/Monero/monero-btc-poloniex.30s.sh",
					"filename": "monero-btc-poloniex.30s.sh",
					"content": "#!/bin/bash\n\n# \u003cbitbar.title\u003eMonero BTC price at Poloniex\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev1.0\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eMonero.how\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003emonerohow\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eShows the last Monero price (in BTC) on the Poloniex exchange\u003c/bitbar.desc\u003e\n# \u003cbitbar.image\u003ehttps://raw.githubusercontent.com/monerohow/misc/master/mac-menu-bar-light-and-dark.jpg\u003c/bitbar.image\u003e\n# \u003cbitbar.abouturl\u003ehttps://www.monero.how\u003c/bitbar.abouturl\u003e\n#\n# Visit https://www.monero.how for Monero tutorials, paper wallets and the latest Monero news\n# \n\nmoneroIconBase64='iVBORw0KGgoAAAANSUhEUgAAABoAAAAeCAYAAAAy2w7YAAAACXBIWXMAABYlAAAWJQFJUiTwAAAAE3RFWHRTb2Z0d2FyZQBtb25lcm8uaG9398/iYQAAAyxJREFUeNrclstrE1EUxu9MJkWrtvWxKmgXRrG4KBRELFUqVtFKqnUnLkRF1L9AwYXBpeBCEVcuXIgbQRG0rYraGokP4iok5KHZqJi0TUwnD9I8/U48I9Mwk7FNcOGBX7i599zz3ee5I7lcLmFh/eAgGAAOsA5IIAm+AA+YBN5GQZQGbXvBJTAMZIP2DWArOASuglfgGnhuFMwowApwG7wEB0x86o1muA88A3fAKiuhTvAYXODOy7Ez4AlYbya0EjzgWTRrQ+AhWG0kdB3sF62zPeBWvdBucJ7L0+BrEwI/wGsun9QGrwld0e2JGxwGsWWIJIATvNDV0f2RSaiPj7Jma4CPO8wtQSQFRsEn0KGrp/u3Q+bRGx1hryRJR3iUVjYP3zG+vEbmJIFBs96VSsWDACMWy5iAjxO+U9Vq1cxnQOa0sshsNptIJpPC7/eLQqHwUZZls2VMoW20VCq5A4GASCQStb4G1kNCaxddcUkS5XJZxONxoaqqCIfDYmFhwYuA9cs4j7oxDMRDPuQ7MzMjIFqLUWcdslEGIOd8Pi/sdvvFTCbTFwqFSMyDwCOcTFWaJUSmWKRXUZTL6CMVi0Vhlut+Giav36Pqx1KMZ7NZBwVEkNoy0nKh7I5EIiKdTvfAZwK+O9HHbJNUEoo2yH8q6CYxzMwRDAZJzAOmaZaYySa0PaU9YF+zHPqNnokpzk2aFXVrrBW2sNgIBD5TO8+ERLbrfbkvrV9BF3NaQcNNLMUj/KFpSygnaWMNNpXEJiFGl7vIy9WrX2rqk8vlRHt7+w0c93taTJS/K2jMplKpIDloJ46ONt0J/C/VLcFmDIQetpJeRDtD9BONRgXizWIgsxQDoqKrq0soPp+P7oodlYM8AiQmWZvNRoON3Way4d3oM0SzisX+3G8ZdW/b2toKCh1HBK6g8iw43kTWpid/mAaou7S0Je6aBo+8DM5x5m6VfQCntcOlP4ZpcAy8aYHIe3CUM7rheZ/jbH63CZH7/GUUs/oKyoBTLLiU2dETQfnwhH4mf/NdN87Qw0U5bhdngE4tqfKT/w5MWO2v1OANaanJ4h/Z/yf0S4ABAI1oQOxFaPzhAAAAAElFTkSuQmCC'\n\nxmrLast=$(curl -s https://poloniex.com/public?command=returnTicker | tr '}' '\\n' | grep BTC_XMR | tr -d '{}\"' | tr ':,' '\\n' | grep -A1 \"last\" | tail -1)\nprintf \"%.*f | image=%s\\n\" 5 \"$xmrLast\" \"$moneroIconBase64\"\necho \"---\"\necho \"Live chart | href=\\\"https://www.monero.how/monero-chart\\\"\"\necho \"Monero.how homepage | href=\\\"https://www.monero.how\\\"\"\n\n"
				}
			],
			"path": "Cryptocurrency/Monero/monero-btc-poloniex.30s.sh",
			"filename": "monero-btc-poloniex.30s.sh",
			"dir": "Cryptocurrency/Monero",
			"docsPlugin": "Cryptocurrency/Monero/monero-btc-poloniex.30s.sh.html",
			"docsCategory": "Cryptocurrency/Monero.html",
			"pathSegments": [
				"Cryptocurrency",
				"Monero"
			],
			"categoryPathSegments": [
				{
					"path": "Cryptocurrency",
					"text": "Cryptocurrency",
					"isLast": false
				},
				{
					"path": "Cryptocurrency/Monero",
					"text": "Monero",
					"isLast": true
				}
			],
			"title": "Monero BTC price at Poloniex",
			"version": "v1.0",
			"author": "Monero.how",
			"authors": [
				{
					"name": "Monero.how",
					"githubUsername": "monerohow",
					"imageURL": "https://avatars.githubusercontent.com/u/24931986?v=4",
					"bio": "",
					"primary": true
				}
			],
			"desc": "Shows the last Monero price (in BTC) on the Poloniex exchange",
			"imageURL": "https://raw.githubusercontent.com/monerohow/misc/master/mac-menu-bar-light-and-dark.jpg",
			"dependencies": null,
			"aboutURL": "https://www.monero.how",
			"lastUpdated": "2021-03-08T15:21:46.7193Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "Cryptocurrency/Monero/monero-cny-bter.30s.sh",
					"filename": "monero-cny-bter.30s.sh",
					"content": "#!/bin/bash\n\n# \u003cbitbar.title\u003eMonero CNY price at Bter\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev1.0\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eMonero.how\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003emonerohow\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eShows the last Monero price (in CNY) on the Bter exchange\u003c/bitbar.desc\u003e\n# \u003cbitbar.image\u003ehttps://raw.githubusercontent.com/monerohow/misc/master/mac-menu-bar-light-and-dark.jpg\u003c/bitbar.image\u003e\n# \u003cbitbar.abouturl\u003ehttps://www.monero.how\u003c/bitbar.abouturl\u003e\n#\n# Visit https://www.monero.how for Monero tutorials, paper wallets and the latest Monero news\n# \n\nmoneroIconBase64='iVBORw0KGgoAAAANSUhEUgAAABoAAAAeCAYAAAAy2w7YAAAACXBIWXMAABYlAAAWJQFJUiTwAAAAE3RFWHRTb2Z0d2FyZQBtb25lcm8uaG9398/iYQAAAyxJREFUeNrclstrE1EUxu9MJkWrtvWxKmgXRrG4KBRELFUqVtFKqnUnLkRF1L9AwYXBpeBCEVcuXIgbQRG0rYraGokP4iok5KHZqJi0TUwnD9I8/U48I9Mwk7FNcOGBX7i599zz3ee5I7lcLmFh/eAgGAAOsA5IIAm+AA+YBN5GQZQGbXvBJTAMZIP2DWArOASuglfgGnhuFMwowApwG7wEB0x86o1muA88A3fAKiuhTvAYXODOy7Ez4AlYbya0EjzgWTRrQ+AhWG0kdB3sF62zPeBWvdBucJ7L0+BrEwI/wGsun9QGrwld0e2JGxwGsWWIJIATvNDV0f2RSaiPj7Jma4CPO8wtQSQFRsEn0KGrp/u3Q+bRGx1hryRJR3iUVjYP3zG+vEbmJIFBs96VSsWDACMWy5iAjxO+U9Vq1cxnQOa0sshsNptIJpPC7/eLQqHwUZZls2VMoW20VCq5A4GASCQStb4G1kNCaxddcUkS5XJZxONxoaqqCIfDYmFhwYuA9cs4j7oxDMRDPuQ7MzMjIFqLUWcdslEGIOd8Pi/sdvvFTCbTFwqFSMyDwCOcTFWaJUSmWKRXUZTL6CMVi0Vhlut+Giav36Pqx1KMZ7NZBwVEkNoy0nKh7I5EIiKdTvfAZwK+O9HHbJNUEoo2yH8q6CYxzMwRDAZJzAOmaZaYySa0PaU9YF+zHPqNnokpzk2aFXVrrBW2sNgIBD5TO8+ERLbrfbkvrV9BF3NaQcNNLMUj/KFpSygnaWMNNpXEJiFGl7vIy9WrX2rqk8vlRHt7+w0c93taTJS/K2jMplKpIDloJ46ONt0J/C/VLcFmDIQetpJeRDtD9BONRgXizWIgsxQDoqKrq0soPp+P7oodlYM8AiQmWZvNRoON3Way4d3oM0SzisX+3G8ZdW/b2toKCh1HBK6g8iw43kTWpid/mAaou7S0Je6aBo+8DM5x5m6VfQCntcOlP4ZpcAy8aYHIe3CUM7rheZ/jbH63CZH7/GUUs/oKyoBTLLiU2dETQfnwhH4mf/NdN87Qw0U5bhdngE4tqfKT/w5MWO2v1OANaanJ4h/Z/yf0S4ABAI1oQOxFaPzhAAAAAElFTkSuQmCC'\n\nxmrLast=$(curl -s http://data.bter.com/api/1/ticker/xmr_cny | tr -d '{}\"' | tr ':,' '\\n' | grep -A1 \"last\" | tail -1)\nprintf \"¥%.*f | image=%s\\n\" 2 \"$xmrLast\" \"$moneroIconBase64\"\necho \"---\"\necho \"Live chart | href=\\\"https://www.monero.how/monero-chart\\\"\"\necho \"Monero.how homepage | href=\\\"https://www.monero.how\\\"\"\n\n"
				}
			],
			"path": "Cryptocurrency/Monero/monero-cny-bter.30s.sh",
			"filename": "monero-cny-bter.30s.sh",
			"dir": "Cryptocurrency/Monero",
			"docsPlugin": "Cryptocurrency/Monero/monero-cny-bter.30s.sh.html",
			"docsCategory": "Cryptocurrency/Monero.html",
			"pathSegments": [
				"Cryptocurrency",
				"Monero"
			],
			"categoryPathSegments": [
				{
					"path": "Cryptocurrency",
					"text": "Cryptocurrency",
					"isLast": false
				},
				{
					"path": "Cryptocurrency/Monero",
					"text": "Monero",
					"isLast": true
				}
			],
			"title": "Monero CNY price at Bter",
			"version": "v1.0",
			"author": "Monero.how",
			"authors": [
				{
					"name": "Monero.how",
					"githubUsername": "monerohow",
					"imageURL": "https://avatars.githubusercontent.com/u/24931986?v=4",
					"bio": "",
					"primary": true
				}
			],
			"desc": "Shows the last Monero price (in CNY) on the Bter exchange",
			"imageURL": "https://raw.githubusercontent.com/monerohow/misc/master/mac-menu-bar-light-and-dark.jpg",
			"dependencies": null,
			"aboutURL": "https://www.monero.how",
			"lastUpdated": "2021-03-08T15:21:46.763163Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "Cryptocurrency/Monero/monero-usd-bitfinex.30s.sh",
					"filename": "monero-usd-bitfinex.30s.sh",
					"content": "#!/bin/bash\n\n# \u003cbitbar.title\u003eMonero USD price at Bitfinex\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev1.0\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eMonero.how\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003emonerohow\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eShows the last Monero price (in USD) on the Bitfinex exchange.\u003c/bitbar.desc\u003e\n# \u003cbitbar.image\u003ehttps://raw.githubusercontent.com/monerohow/misc/master/mac-menu-bar-light-and-dark.jpg\u003c/bitbar.image\u003e\n# \u003cbitbar.abouturl\u003ehttps://www.monero.how\u003c/bitbar.abouturl\u003e\n#\n# Visit https://www.monero.how for Monero tutorials, paper wallets and the latest Monero news\n# \n\nmoneroIconBase64='iVBORw0KGgoAAAANSUhEUgAAABoAAAAeCAYAAAAy2w7YAAAACXBIWXMAABYlAAAWJQFJUiTwAAAAE3RFWHRTb2Z0d2FyZQBtb25lcm8uaG9398/iYQAAAyxJREFUeNrclstrE1EUxu9MJkWrtvWxKmgXRrG4KBRELFUqVtFKqnUnLkRF1L9AwYXBpeBCEVcuXIgbQRG0rYraGokP4iok5KHZqJi0TUwnD9I8/U48I9Mwk7FNcOGBX7i599zz3ee5I7lcLmFh/eAgGAAOsA5IIAm+AA+YBN5GQZQGbXvBJTAMZIP2DWArOASuglfgGnhuFMwowApwG7wEB0x86o1muA88A3fAKiuhTvAYXODOy7Ez4AlYbya0EjzgWTRrQ+AhWG0kdB3sF62zPeBWvdBucJ7L0+BrEwI/wGsun9QGrwld0e2JGxwGsWWIJIATvNDV0f2RSaiPj7Jma4CPO8wtQSQFRsEn0KGrp/u3Q+bRGx1hryRJR3iUVjYP3zG+vEbmJIFBs96VSsWDACMWy5iAjxO+U9Vq1cxnQOa0sshsNptIJpPC7/eLQqHwUZZls2VMoW20VCq5A4GASCQStb4G1kNCaxddcUkS5XJZxONxoaqqCIfDYmFhwYuA9cs4j7oxDMRDPuQ7MzMjIFqLUWcdslEGIOd8Pi/sdvvFTCbTFwqFSMyDwCOcTFWaJUSmWKRXUZTL6CMVi0Vhlut+Giav36Pqx1KMZ7NZBwVEkNoy0nKh7I5EIiKdTvfAZwK+O9HHbJNUEoo2yH8q6CYxzMwRDAZJzAOmaZaYySa0PaU9YF+zHPqNnokpzk2aFXVrrBW2sNgIBD5TO8+ERLbrfbkvrV9BF3NaQcNNLMUj/KFpSygnaWMNNpXEJiFGl7vIy9WrX2rqk8vlRHt7+w0c93taTJS/K2jMplKpIDloJ46ONt0J/C/VLcFmDIQetpJeRDtD9BONRgXizWIgsxQDoqKrq0soPp+P7oodlYM8AiQmWZvNRoON3Way4d3oM0SzisX+3G8ZdW/b2toKCh1HBK6g8iw43kTWpid/mAaou7S0Je6aBo+8DM5x5m6VfQCntcOlP4ZpcAy8aYHIe3CUM7rheZ/jbH63CZH7/GUUs/oKyoBTLLiU2dETQfnwhH4mf/NdN87Qw0U5bhdngE4tqfKT/w5MWO2v1OANaanJ4h/Z/yf0S4ABAI1oQOxFaPzhAAAAAElFTkSuQmCC'\n\nxmrLast=$(curl -s https://api.bitfinex.com/v1/pubticker/xmrusd | tr -d '{}\"' | tr ':,' '\\n' | grep -A1 \"last_price\" | tail -1)\nprintf \"$%.*f | image=%s\\n\" 2 \"$xmrLast\" \"$moneroIconBase64\"\necho \"---\"\necho \"Live chart | href=\\\"https://www.monero.how/monero-chart\\\"\"\necho \"Monero.how homepage | href=\\\"https://www.monero.how\\\"\"\n\n"
				}
			],
			"path": "Cryptocurrency/Monero/monero-usd-bitfinex.30s.sh",
			"filename": "monero-usd-bitfinex.30s.sh",
			"dir": "Cryptocurrency/Monero",
			"docsPlugin": "Cryptocurrency/Monero/monero-usd-bitfinex.30s.sh.html",
			"docsCategory": "Cryptocurrency/Monero.html",
			"pathSegments": [
				"Cryptocurrency",
				"Monero"
			],
			"categoryPathSegments": [
				{
					"path": "Cryptocurrency",
					"text": "Cryptocurrency",
					"isLast": false
				},
				{
					"path": "Cryptocurrency/Monero",
					"text": "Monero",
					"isLast": true
				}
			],
			"title": "Monero USD price at Bitfinex",
			"version": "v1.0",
			"author": "Monero.how",
			"authors": [
				{
					"name": "Monero.how",
					"githubUsername": "monerohow",
					"imageURL": "https://avatars.githubusercontent.com/u/24931986?v=4",
					"bio": "",
					"primary": true
				}
			],
			"desc": "Shows the last Monero price (in USD) on the Bitfinex exchange.",
			"imageURL": "https://raw.githubusercontent.com/monerohow/misc/master/mac-menu-bar-light-and-dark.jpg",
			"dependencies": null,
			"aboutURL": "https://www.monero.how",
			"lastUpdated": "2021-03-08T15:21:46.835406Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "Cryptocurrency/Monero/monero-usd-kraken.30s.sh",
					"filename": "monero-usd-kraken.30s.sh",
					"content": "#!/bin/bash\n\n# \u003cbitbar.title\u003eMonero USD price at Kraken\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev1.0\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eMonero.how\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003emonerohow\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eShows the last Monero price (in USD) on the Kraken exchange\u003c/bitbar.desc\u003e\n# \u003cbitbar.image\u003ehttps://raw.githubusercontent.com/monerohow/misc/master/mac-menu-bar-light-and-dark.jpg\u003c/bitbar.image\u003e\n# \u003cbitbar.abouturl\u003ehttps://www.monero.how\u003c/bitbar.abouturl\u003e\n#\n# Visit https://www.monero.how for Monero tutorials, paper wallets and the latest Monero news\n# \n\nmoneroIconBase64='iVBORw0KGgoAAAANSUhEUgAAABoAAAAeCAYAAAAy2w7YAAAACXBIWXMAABYlAAAWJQFJUiTwAAAAE3RFWHRTb2Z0d2FyZQBtb25lcm8uaG9398/iYQAAAyxJREFUeNrclstrE1EUxu9MJkWrtvWxKmgXRrG4KBRELFUqVtFKqnUnLkRF1L9AwYXBpeBCEVcuXIgbQRG0rYraGokP4iok5KHZqJi0TUwnD9I8/U48I9Mwk7FNcOGBX7i599zz3ee5I7lcLmFh/eAgGAAOsA5IIAm+AA+YBN5GQZQGbXvBJTAMZIP2DWArOASuglfgGnhuFMwowApwG7wEB0x86o1muA88A3fAKiuhTvAYXODOy7Ez4AlYbya0EjzgWTRrQ+AhWG0kdB3sF62zPeBWvdBucJ7L0+BrEwI/wGsun9QGrwld0e2JGxwGsWWIJIATvNDV0f2RSaiPj7Jma4CPO8wtQSQFRsEn0KGrp/u3Q+bRGx1hryRJR3iUVjYP3zG+vEbmJIFBs96VSsWDACMWy5iAjxO+U9Vq1cxnQOa0sshsNptIJpPC7/eLQqHwUZZls2VMoW20VCq5A4GASCQStb4G1kNCaxddcUkS5XJZxONxoaqqCIfDYmFhwYuA9cs4j7oxDMRDPuQ7MzMjIFqLUWcdslEGIOd8Pi/sdvvFTCbTFwqFSMyDwCOcTFWaJUSmWKRXUZTL6CMVi0Vhlut+Giav36Pqx1KMZ7NZBwVEkNoy0nKh7I5EIiKdTvfAZwK+O9HHbJNUEoo2yH8q6CYxzMwRDAZJzAOmaZaYySa0PaU9YF+zHPqNnokpzk2aFXVrrBW2sNgIBD5TO8+ERLbrfbkvrV9BF3NaQcNNLMUj/KFpSygnaWMNNpXEJiFGl7vIy9WrX2rqk8vlRHt7+w0c93taTJS/K2jMplKpIDloJ46ONt0J/C/VLcFmDIQetpJeRDtD9BONRgXizWIgsxQDoqKrq0soPp+P7oodlYM8AiQmWZvNRoON3Way4d3oM0SzisX+3G8ZdW/b2toKCh1HBK6g8iw43kTWpid/mAaou7S0Je6aBo+8DM5x5m6VfQCntcOlP4ZpcAy8aYHIe3CUM7rheZ/jbH63CZH7/GUUs/oKyoBTLLiU2dETQfnwhH4mf/NdN87Qw0U5bhdngE4tqfKT/w5MWO2v1OANaanJ4h/Z/yf0S4ABAI1oQOxFaPzhAAAAAElFTkSuQmCC'\n\nxmrLast=$(curl -s \"https://api.kraken.com/0/public/Ticker?pair=xmrusd\" | tr -d '{}\"[]' | tr ':,' '\\n' | grep -A1 \"^c$\" | tail -1)\nprintf \"$%.*f | image=%s\\n\" 2 \"$xmrLast\" \"$moneroIconBase64\"\necho \"---\"\necho \"Live chart | href=\\\"https://www.monero.how/monero-chart\\\"\"\necho \"Monero.how homepage | href=\\\"https://www.monero.how\\\"\"\n\n"
				}
			],
			"path": "Cryptocurrency/Monero/monero-usd-kraken.30s.sh",
			"filename": "monero-usd-kraken.30s.sh",
			"dir": "Cryptocurrency/Monero",
			"docsPlugin": "Cryptocurrency/Monero/monero-usd-kraken.30s.sh.html",
			"docsCategory": "Cryptocurrency/Monero.html",
			"pathSegments": [
				"Cryptocurrency",
				"Monero"
			],
			"categoryPathSegments": [
				{
					"path": "Cryptocurrency",
					"text": "Cryptocurrency",
					"isLast": false
				},
				{
					"path": "Cryptocurrency/Monero",
					"text": "Monero",
					"isLast": true
				}
			],
			"title": "Monero USD price at Kraken",
			"version": "v1.0",
			"author": "Monero.how",
			"authors": [
				{
					"name": "Monero.how",
					"githubUsername": "monerohow",
					"imageURL": "https://avatars.githubusercontent.com/u/24931986?v=4",
					"bio": "",
					"primary": true
				}
			],
			"desc": "Shows the last Monero price (in USD) on the Kraken exchange",
			"imageURL": "https://raw.githubusercontent.com/monerohow/misc/master/mac-menu-bar-light-and-dark.jpg",
			"dependencies": null,
			"aboutURL": "https://www.monero.how",
			"lastUpdated": "2021-03-08T15:21:46.855345Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "Cryptocurrency/Monero/monero-usd-poloniex.30s.sh",
					"filename": "monero-usd-poloniex.30s.sh",
					"content": "#!/bin/bash\n\n# \u003cbitbar.title\u003eMonero USD price at Poloniex\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev1.0\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eMonero.how\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003emonerohow\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eShows the last Monero price (in USD) on the Poloniex exchange\u003c/bitbar.desc\u003e\n# \u003cbitbar.image\u003ehttps://raw.githubusercontent.com/monerohow/misc/master/mac-menu-bar-light-and-dark.jpg\u003c/bitbar.image\u003e\n# \u003cbitbar.abouturl\u003ehttps://www.monero.how\u003c/bitbar.abouturl\u003e\n#\n# Visit https://www.monero.how for Monero tutorials, paper wallets and the latest Monero news\n# \n\nmoneroIconBase64='iVBORw0KGgoAAAANSUhEUgAAABoAAAAeCAYAAAAy2w7YAAAACXBIWXMAABYlAAAWJQFJUiTwAAAAE3RFWHRTb2Z0d2FyZQBtb25lcm8uaG9398/iYQAAAyxJREFUeNrclstrE1EUxu9MJkWrtvWxKmgXRrG4KBRELFUqVtFKqnUnLkRF1L9AwYXBpeBCEVcuXIgbQRG0rYraGokP4iok5KHZqJi0TUwnD9I8/U48I9Mwk7FNcOGBX7i599zz3ee5I7lcLmFh/eAgGAAOsA5IIAm+AA+YBN5GQZQGbXvBJTAMZIP2DWArOASuglfgGnhuFMwowApwG7wEB0x86o1muA88A3fAKiuhTvAYXODOy7Ez4AlYbya0EjzgWTRrQ+AhWG0kdB3sF62zPeBWvdBucJ7L0+BrEwI/wGsun9QGrwld0e2JGxwGsWWIJIATvNDV0f2RSaiPj7Jma4CPO8wtQSQFRsEn0KGrp/u3Q+bRGx1hryRJR3iUVjYP3zG+vEbmJIFBs96VSsWDACMWy5iAjxO+U9Vq1cxnQOa0sshsNptIJpPC7/eLQqHwUZZls2VMoW20VCq5A4GASCQStb4G1kNCaxddcUkS5XJZxONxoaqqCIfDYmFhwYuA9cs4j7oxDMRDPuQ7MzMjIFqLUWcdslEGIOd8Pi/sdvvFTCbTFwqFSMyDwCOcTFWaJUSmWKRXUZTL6CMVi0Vhlut+Giav36Pqx1KMZ7NZBwVEkNoy0nKh7I5EIiKdTvfAZwK+O9HHbJNUEoo2yH8q6CYxzMwRDAZJzAOmaZaYySa0PaU9YF+zHPqNnokpzk2aFXVrrBW2sNgIBD5TO8+ERLbrfbkvrV9BF3NaQcNNLMUj/KFpSygnaWMNNpXEJiFGl7vIy9WrX2rqk8vlRHt7+w0c93taTJS/K2jMplKpIDloJ46ONt0J/C/VLcFmDIQetpJeRDtD9BONRgXizWIgsxQDoqKrq0soPp+P7oodlYM8AiQmWZvNRoON3Way4d3oM0SzisX+3G8ZdW/b2toKCh1HBK6g8iw43kTWpid/mAaou7S0Je6aBo+8DM5x5m6VfQCntcOlP4ZpcAy8aYHIe3CUM7rheZ/jbH63CZH7/GUUs/oKyoBTLLiU2dETQfnwhH4mf/NdN87Qw0U5bhdngE4tqfKT/w5MWO2v1OANaanJ4h/Z/yf0S4ABAI1oQOxFaPzhAAAAAElFTkSuQmCC'\n\nxmrLast=$(curl -s https://poloniex.com/public?command=returnTicker | tr '}' '\\n' | grep USDT_XMR | tr -d '{}\"' | tr ':,' '\\n' | grep -A1 \"last\" | tail -1)\nprintf \"$%.*f | image=%s\\n\" 2 \"$xmrLast\" \"$moneroIconBase64\"\necho \"---\"\necho \"Live chart | href=\\\"https://www.monero.how/monero-chart\\\"\"\necho \"Monero.how homepage | href=\\\"https://www.monero.how\\\"\"\n\n"
				}
			],
			"path": "Cryptocurrency/Monero/monero-usd-poloniex.30s.sh",
			"filename": "monero-usd-poloniex.30s.sh",
			"dir": "Cryptocurrency/Monero",
			"docsPlugin": "Cryptocurrency/Monero/monero-usd-poloniex.30s.sh.html",
			"docsCategory": "Cryptocurrency/Monero.html",
			"pathSegments": [
				"Cryptocurrency",
				"Monero"
			],
			"categoryPathSegments": [
				{
					"path": "Cryptocurrency",
					"text": "Cryptocurrency",
					"isLast": false
				},
				{
					"path": "Cryptocurrency/Monero",
					"text": "Monero",
					"isLast": true
				}
			],
			"title": "Monero USD price at Poloniex",
			"version": "v1.0",
			"author": "Monero.how",
			"authors": [
				{
					"name": "Monero.how",
					"githubUsername": "monerohow",
					"imageURL": "https://avatars.githubusercontent.com/u/24931986?v=4",
					"bio": "",
					"primary": true
				}
			],
			"desc": "Shows the last Monero price (in USD) on the Poloniex exchange",
			"imageURL": "https://raw.githubusercontent.com/monerohow/misc/master/mac-menu-bar-light-and-dark.jpg",
			"dependencies": null,
			"aboutURL": "https://www.monero.how",
			"lastUpdated": "2021-03-08T15:21:46.855888Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "Cryptocurrency/nomics_bitbar.py",
					"filename": "nomics_bitbar.py",
					"content": "#!/usr/bin/env LC_ALL=en_US.UTF-8 /usr/local/bin/python\n\n'''\n    All metadata is placed here\n'''\n# \u003cbitbar.title\u003eNomics.com Cryptocurrency Tickers\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev1.0\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eDaniel Anderson\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003edtand\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eProvides price updates and 24h change for the top ten cryptocurrencies by marketcap.\u003c/bitbar.desc\u003e\n# \u003cbitbar.image\u003ehttps://i.ibb.co/4SD8cZs/Screen-Shot-2019-11-25-at-6-16-56-PM.png\u003c/bitbar.image\u003e\n# \u003cbitbar.dependencies\u003epython,requests\u003c/bitbar.dependencies\u003e\n# \u003cbitbar.abouturl\u003ehttps://nomics.com\u003c/bitbar.abouturl\u003e\nimport requests\n\n\n## Base url for api\nBASE_URL = 'https://api.nomics.com/v1'\n\n## Tickers endpoint\nENDPOINT = 'currencies/ticker'\n\n## FREE API key\nAPI_KEY = '4465bf5e9801e08b9a3e04084c7ea3c3'\n\n## Returns top ten cryptocurrencies\ndef get_top_ten():\n    url = \"{}/currencies/ticker?key={}\".format(BASE_URL, API_KEY)\n    response = requests.get(url)\n    data = response.json()\n    top_ten = []\n    i = 0 \n    for ticker in data:\n        if i \u003e= 10:\n            break\n        top_ten.append(ticker[\"id\"])\n        i = i + 1\n    return top_ten\n\n## Returns ticker for provided symbol\ndef get_tickers(symbols):\n    params = {\n        \"ids\": symbols\n    }\n    url = '{}/{}?key={}'.format(BASE_URL, ENDPOINT, API_KEY)\n    response = requests.get(url, params=params)\n    data = response.json()\n    return data\n\n## Pads string to certain length\ndef pad_string(string, length):\n    padding = length - len(string)\n    return string.ljust(padding)\n\n## Returns the string specification for stdout\n## for bitbar interpreter\ndef generate_bitbar_format(tickers):\n    std_out_strings = []\n    i = 1\n    for ticker in tickers:\n        symbol   = ticker['symbol']\n\n        price    = round(float(ticker['price']),4)\n\n        if price \u003c 1.00:\n            price = '${:,.4f}'.format(price)\n        else:\n            price = '${:,.2f}'.format(price)\n\n        p = abs(float(ticker['1d']['price_change_pct']))\n        percent  = round(p * 100, 2)\n        percent  = str(percent) + \"%\"\n\n        col_one = pad_string(symbol + \": \" + price, 24)\n\n        if float(ticker['1d']['price_change_pct']) \u003e= 0:\n            std_out_strings.append(col_one + \"\\t+\" + percent + \" | color=green\")\n        else:\n            std_out_strings.append(col_one + \"\\t-\" + percent + \" | color=red\")\n\n        i = i + 1\n\n    return std_out_strings\n\n## Print output with bitbar formatting between new lines\ndef output_values(values):\n    print(\" Nomics.com | image=iVBORw0KGgoAAAANSUhEUgAAADYAAAA2CAYAAACMRWrdAAABk2lDQ1BJQ0MgUHJvZmlsZQAAKJF9kL1LQmEUxh+vhVFGgw0ODReyWjTMIGpLDUQwEDPIauh+qFfQ6+V6pYLGoKVBaOhj6Wtoaa7VoTUIiiKIlv6DvpaQ23m9hlbUgZfz43nPOe95H4DbFDQt3+YHCqqhJyIhfi41zzue0AU3XBjDkCCVtGA8HgPFV/4e77ewsXztY7N+3/8b3XK6JAE2nnhS0nSDeIm4f9nQGK8T9+q0FPEO46zFp4xFi6v1mmQiTHxDzEuKIBO/EnslRS8AHJvvkQsy6dyUxSpjhbHY0ptt4UK+LDX2ZD90ptXZGVZPpw8RRDGNOHiIKCOHPAz4KKuklJCg+5CRXjFYc7ioreq5rGLwQXIozUdVadjLB/wjEwDz+6ePTa14AIy/AfZKUxO3gfMNwH3f1Dz7QA95dXahCbpQl+x0uEwGeD4hm1OA6wroXChlRgPWj5whoP3RNF8GAMcWUKuY5sehadaOqPkBqKqWd41ZOL4DkmtA7BLY3QMGs/Tm4h8eddQ9avjwb03Dx0/wyngPzfkFKgAAAAlwSFlzAAAuIwAALiMBeKU/dgAAAVlpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IlhNUCBDb3JlIDUuNC4wIj4KICAgPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4KICAgICAgPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIKICAgICAgICAgICAgeG1sbnM6dGlmZj0iaHR0cDovL25zLmFkb2JlLmNvbS90aWZmLzEuMC8iPgogICAgICAgICA8dGlmZjpPcmllbnRhdGlvbj4xPC90aWZmOk9yaWVudGF0aW9uPgogICAgICA8L3JkZjpEZXNjcmlwdGlvbj4KICAgPC9yZGY6UkRGPgo8L3g6eG1wbWV0YT4KTMInWQAAExxJREFUaAWtmumTHdV5xp/Tt++dO/to3xAYgcAIwmKxJbEDXgIuB5JyUiJxEsehXEU+pJLKf8DwLyRVqZAPMQmuioPKibEowGUSFMwmhGIEJcKiAEK7Rvtsd+vu/J5z75VGI80izJF6um/3Oe/7Pu921iDK6GiRbNqjsJXnrVtD5nf/8t2iv7xfN2hKtzcntCmf1FqdVr8mlYQ+ZWEJX4Z0KBnUO6XlenPpsD64/8kw6baFiuSxe5Xs2a4CmrkUCr8/X4qwRUpu5MOjfA8K1JG2PVL0Nce0sXZYd+QT+rVsQlfkp9RXnFUp6YMoPMOQjhb9+jAZ0OuDV+vt3/unMO62o3zeBL13YT8KvVAURdBjCoEvFgCQ6YbntVETur3U0G3lhjaEhpblNQ0XU6qojiRlqTSgRtKrM3mPjjYq+rhI9TaMd1VWa+9DW0MjMtoCoxthNNoW3ALAFyYK27cr+fvtBh6yxx8pyn17tAGl3V6q62auDaGu1QU8AVeBfxA8UWuz1KOz6tHJrKyPm1W9VSzRzhW36v1v/R0tKE+pKKE0gGGt0GH81OZiuBl0fTKt+4tJfbU0pevSmnoBU8ozpUWuxPBdQonGKZbrUQMGk60e7SsN6oVKn54/uFxv//VzoY7lAqoMepSH0Laa+Qnv0FZ/DPnojUXl+lQ3Fk19M5/WfZVpXRWmNYiYlaKlUpHBMzKEJ9y5WqGiVlZVPevTR8WAfoEFn2sNac/3XtBJTFTYY9LHYiuQGtSEvgTB301b+hra2lSeUppNAx8wxhMxhc5DC6txWU9YdTnwryzlGsky9S3h1bYHi7fCtjBlHzEjt47tZ4B6VkXP0bO6mY8PEgAP5E3dgjITwTPDOaN/dkBFh+aF2SeNyFNqahXgVzRzPCrRT/75G9rxPemEMbmeHsEVvrxLX6qc0B8Vp/WdyoSW52gLmbN6QKoCsqjXdbslCskfq7PErZdbqNJgWB+hvW3VJfpB9aTe+9beUHcMC9e7h7r3bm/H1A9UVIsyykv1J+VcD3BtVKYwlQvdKI+g4HgB0zZzjKikUsjsElyzaCzReD6srWGpfli/XjsefiLUUte9e7c24nL3E1NfLwGq0VLAGM0MqUtBCS4Y67Xptv9Ghv4ThJcqn0aSHlw2IeB7SvoKrnnw9ArVR/+02EuMtR7H98eoF91PRVov66Zqpj/uyXQfpryqCSV4ZlTIA5VwXOvs4gJPZCpaOEAtV6vSAOQpDWUl3dNKdbJyUGdo9FbiTNRT02ac5qtFXTdkWAomeQt/xiCRAbSSS11wRga+IUgrKGsUynDhSjGta5vT+iZuvHnDq1pq6XDP/CESxV9dW/SsTXXnQKaHego9AKhrs8I6UU58R8+wI1yKn99FnoDmOeB+BTzzVh31TuoalPrlZEx3vPg3xUg6cUCb0rpuA9jG8rTSCbTWpHX8XxC8mPxS/mBhIe7QcVZIyAR2kayBO5VqGiKD3oaPbu47o3eodcyg/paYGvhEm3G7PygVxLJ0jcO0ASDa2/vwesjOZa02v1jJpudfglcVddx3cFqlLNXVWY9uPf4W3UF2QnclNW0oTauXrCTi0sUaweLzF4RAhvjHmiyZGZYrMkxentBIua6rG02tfZEuxKBKZd1cyfX7aaEHqW9LBarGmLJyHKvzguqIE3m269KEXALPHJODoZrQVTTHdXdKr7AJF1zBh9TZD0Q5xN2gXay/jnG6r7p3PszEnth3ERbVSWkDgJmWJrlWH/ml1iy9TYPFQW1Jm3ogaeoag681SRfYyd6B2d3ZzekdM3ni+hi4o1PaYXkiCJ4tuiQydGtKN6QAupLoH0EAFAlli+qH9m2m4O2Xl/gbmdCmWzn+RkQs1N+qaGPrNM+51lcG9Ntq6Sr4Jc0GSWIKTjVA4b4zml+Cw/yvYocIAVJpCv1h+t0rUnxvOG+oiubs3xbOTIytK+f8VP3VDSh0nDEH297uh7DYsta47sI1bm4xJKPPuQ6iVbRbtEqkyV5AVeEHMI9o4uVIWzxns43FIgAswfuquMBQyhgwtdZI6W35OkJ26i98QwhrzMIEOrPYl9EqY9TYGtPK/DAaNIB+9U4HMiYummOphC7FoHzF4ZI7FANykOPK85VZSo89v8WwW0O75LBK83HSOi9Ms/1nPpIXfnNMOUAMxo5OhxtIvcI6pNYYB309Ul/lC8TdFbwnNbTOEnuH+X6AzpgxYDhLohkiPlAKA1sxtBLjVI8q2iUK1nme5xaV6+8ZimvRUeIeHgZfLqbIgvGisEYExnBI2XHT5ffV0uANjFmvUNG/EkMuBfMAfBJyPn1O7RSgjkmTAJw6SBs6hOZRwHkoQYcXhfGY3eCsvAXAde1CzW4pUud1l8vyQFe26/TDk1E3MaommoeB+r4hLb9LWnGTNLJORe8SQNkaVgK80GbIqF+j/jiKOPWRNHaNdPpJQqyG9bB2qY+qg9SnDslgwYLT2DYXQEhxpdCdVFzwZS5yVoQvW8qg6PvsegnCLblXWgOo1UyMRq5Q6F8qMdovsGxMtiYZeaCBFuCmscqyq6ThtdJhXHXsFcC9RCXcObXlcFHZcosAR63zBfk8FXExY4s7f7FUruWYIgO6UzSoArdb9lvShvuldbci6Gq0DugIaFbPFJmg4jI0StDoG0b+VVyAq45IB+BRexm6WC/FctZE0QF3TjuzpATCRbLboS67RFAEUwOGyQZc7yttUFfejoAdUCbq5BITzBwcLGiKAgaWtxWRII1ddj/3iReR1pYDeIw1PONctpwFw644m8XlAUMIuyDzaGUEv409co/0hfuk9ZtJGGjelpoPzEwBInCEdJz34narrmt/rRNbjTexmhXHe3cjkdnUzNbzPwN2EaWrebvGAKD4bbfvxVJr7sD9bmm7XwrgKCyIFwMuupZp25eQpBfrLCdW190pLf0uDLB+E1d3h89M/bLKwsBmmN0uaCYN/F9rYI4Aq4ivYZ4dLzEebEbaxKBd5J0W5xRhy638InShXUFhzOrjtCFmYfOYIY/buVgv7afzfxcGhkajoHZD4orpiDJcpId0vpxlJlJ6dL8IylVngDnPZu6naDWL1fGKEoobXNHOlkPrcUU+OfN6ccHeEgFaJl+dwqcZv9ov5wbW0UFs4UikX2FkETOhm/ZhpSFAOaU76GM9/+kAc53LLp32PfSPA4AzsDLPngl4ZSzGGi7pTivaqCPjpfjMDWxmbVzARAvudLBxTsNoQv2k5wqMPRm7WGczCSziuSssVT2iqWKdARRXuRue8IqLIPaaRaa7xQGDkQeqBXem4yoRB1UCnc637YaLkPtyqzhmqwCq0HGzxMY0uW2khSzV5bM4YB1txoyHxhLchClHdMEYI11qn+PdVnOWdSftEU6c0nRcdTFsFgdsFqVzAT/DfWZV+Xx/AsiYfF2qfLasaEodqjHjEWP5GBcp3yP6zpDsUvx+pXem66ThBVuvEsWuxoqcC90sbosLRQi7RzYwJojKSPkeHbDEFpNJHLnPIvyr/oxrIqwQNo/Al07awDy1jx3/LHC43aw3yLmgAG5iy2AhNgfiCAFsmjrJ6NzgABmZWZufUzG9BnQnAVX/X3gC0Mpj7tge8iyCz9zAOjqI8gLM0wevlZUYlbtMH2W6BOOp01jNruKKvmgXgbrS5ZQOPzexJ0yegP5+AO6Dp+lzOTNayVEm1++0+WwxZugWFmu5D/EE0DPd+l5W/z+QzgDOfVu3GFT36r6b7x6VgGQuVo6VNHFcOgmo8YNt2dkbY2WUCrhkHOnHyv7TLp/dFd3e2rG2EMIpOAfUiZ3SkfcRwMkEcDG5zLCaE0AE6eYzAF/0zHcPgl3qCD/2oXT0TeZluzvditO9lecxakcJPM1bFpc8IBHltcYQ0FMT0598DmAbzk8s47zKFA1iLgGsoE6JjxCOIxfe1Ymrk59Kh/5HOv4MND5mXLCCD1YQSo3K7bRd6LY4YEZFie6I5jxHSnFJVrh05iXpE1zTGvfseZBJYxSU31GQTttIYNafaOHOO4M6AZBPX0dZrwLyPXigwBISeuAdrTWr/Xw/03n4XtjOFTvatjXYh1aZTOUVpmPcvfzmHLtmUwccv7uWuIDQTIbQc0zV8ARb6tMd0r6nibGX2i5YYiwa1xkNrBvHM9tfQPjCH9Fi1LXIHbEvrHDuF19j5vMLMwJE4skf47iMWDjK9yZZa4p482LO0Jr2xLFM/9NOY9zbJfIxoMakwgTZb2xv2/2OvYZ7vwhdgJZW0gx6BfOxhUBZtC7x7j0FTlxX7L5Y8G6xrD0zhFzSzx2XaRgcV+0PSSZkymXXzgCHAojLuGJL4oi7MSSJMIESTh3E4ruIqZ9C4//aiSmCMg9c/VJZkLfzF2RMHePOUhdjnqet9QPjuHqExRJizCN9j0jO/BjMHwHyKlzySq71rC0uY2W2lzAElLNnfZzBBP3gGVL6xCGUgUKKAwiDAuKym7Mfnf9ClupK2PG47s94d4xZzMsDF1vQqGs5tMNecLSel7ibO7EEl2Wr3IywgCTZcGKCdRv6Q6/6TpH5nNqt0xTlVFbx0bFq97OlTNuly6v9a7F/Q+opQVwwRbhFW87SUGLMuR1u6bkah0tUJlum3G097ws0DpCpGZ3AJ7CTmJF46kz1c3im1UH1eCRjGZyQ2CAJzoDejI7lckBZJteHFldIyTx54n0qhjFRff7YEZynhYvr+kKwODLg2QNWJopFWK28woIpG3Ih1FRn5/Fg1q+DuFuJjYj17Auv92CXxdGCfiqws1o4pkxiPkshojnGEh/8gg3AOPLtZXmEk0NpGNAELxucGMg9/abijLrzke+SRgoyZGxFbHiwzNCrKAZZpmAPrFJRib7IO2AHmJw+my3TXsZ+69LT+hqWWT99BuvifqZAXIS4nhF/Xt4f2wNgBdavs1Q3kRRVHSJjnaHP8emH6I5ddXQ00/05N6cLaxTMn3LipCidIqZOEVNndHxqUq82U/0wrNFPiLO3cVP/Q6Xne5ELyczNbvYXpjNxEYtoaLH4Op6UOeNFUL8HwuNolU3G6FHRDWASt0+jJmZTmut3gkNaQexjs21Z4hRC0gIUMfafbB39aPKY9nznR2E/x5kOs2l8io346D4otWDZLcPydmi7yUW7JzNZ2u0snytyFU1OGdgoAGqx6HScc14fJuw3vpFX9EnWq5oXUMo0olXugyTUdT5ZEBtJxH2hPTn3fi800jJsyQHHsqCfc0RiK8d8Xv6LQ+w6m+iwxuC3rzGgMx53dnh6uuVIWQRDU2nnG9h5VTBYduK3nkOXvLEj6V2n3ZyN2M3Lfc1+ziwA3P0N4DKEpd38xdo1ca6csxscDFGK5T2wOIpynscq/wqj7d9XGO94jAB0DH5vEd+/ZAo0jhISNvd9FMLAuke35mXckS1n055owjPcj/bqQN6n3SPX683k20+E080+7YLRq0WvPqGTLMzIQiJ092CJrXfJi5cWJ6enL2wpUrpP1xwmA77Iuah/I1H818Onw2mD+kdwW9qXT+gUmxtvAupnHML6iFBoovWUgy1WZeQZ6c7B095h2QDFCT96C/wQdPtbvdpR79PO+/8hHLNrqu9Kvcvu5HOtQb3cHNE04ztbNkWL3oAwO59visSobq1yTC9qFsOQ8XiD1tIq1BgMn6j16JVWWU/QIb/6ZwwyABW2o9VHrCgD3BWaHMv7GIu9MNWn17MBHSF7etstxVOCK5mueUSoHX6d37llct9rGXGPtDWgaY5d2DDP5ss4NEhJfDKNg5PTbMTt5tzff3By7enWUu0vDTNZTtmewgq9dKZoM41uxuEWrFPy796C/phrqIeUvoyYWqlPi+V6GjpP1lbpjX1x8FGErVuU3NvV/qhieXg7I6tV+oBTa0+FEf17c4U+8IGrfniapmmbh3lhGV9Rhip3yzRU5tsSeK7QoXxE2/CAH6PMXd//aRgfRXnpo7Axry2/0PEnf0OvkB2nCPiTOM3dXOs5lFklfafEXYr+4ukbtOi+y4vCGb7QJGCncOdjeVX/zfMzfSN67c+3B49Hwui9Km3l4SFbmmRWPGpzkJ3hHhDi8QeL16uHOMzpQxklfR23WsuxoT5O8KQtQCCa8xHG4gHlkHFbDL1aWKdGPB0ihHZw2uCZRqJd+3bqGNVkTFgej40N48BKP+Ms8NF3dRMHve6Ih8c4Z8X64XJS1hD3KmO4hOFTnnCIFrc7S3wcwb8/4YDWbkC9Mb5Be/5ya5gwXVvKjB7aikpihvYvEJ47rtvm+dSWoneC88eMRO7k/NUtHEm6mhHIajpuxkWoLjgnoY2gGivEZ0nrxxndfMwJ093NQe0cukHvdM8GR6VR16CswfDYqO2A9UY7AL9drDw1pjvZjv1NhltfRJ/rmEEPAawE8aZ7dwAdpN94p4yF+oe088Ft4XiHXrIdBTMrKbagZTI/cs0sWBKkTNt86Bkh2jyf+Z1iyWRNt8Lz15kW3cK4cT38GHnSI+AhBsXI4iC832f/4LXSWr1BGB0x5VFw21IU0yv+Hwim37hI2Q16AAAAAElFTkSuQmCC\")\n    print(\"Go to nomics.com for all assets | href=https://nomics.com\")\n    for i,value in enumerate(values):\n        print(value)\n    print('Refresh | refresh=true')\n\n## Wrapper method for generating output and printing it\ndef std_out(tickers):\n    output_values(generate_bitbar_format(tickers))\n\ndef main():\n    top_ten = get_top_ten()\n    tickers = get_tickers(\",\".join(top_ten))\n    std_out(tickers)\n\nif __name__ == \"__main__\":\n    main()\n\n"
				}
			],
			"path": "Cryptocurrency/nomics_bitbar.py",
			"filename": "nomics_bitbar.py",
			"dir": "Cryptocurrency",
			"docsPlugin": "Cryptocurrency/nomics_bitbar.py.html",
			"docsCategory": "Cryptocurrency.html",
			"pathSegments": [
				"Cryptocurrency"
			],
			"categoryPathSegments": [
				{
					"path": "Cryptocurrency",
					"text": "Cryptocurrency",
					"isLast": true
				}
			],
			"title": "Nomics.com Cryptocurrency Tickers",
			"version": "v1.0",
			"author": "Daniel Anderson",
			"authors": [
				{
					"name": "Daniel Anderson",
					"githubUsername": "dtand",
					"imageURL": "https://avatars.githubusercontent.com/u/8932569?v=4",
					"bio": "Your average pojo.",
					"primary": true
				}
			],
			"desc": "Provides price updates and 24h change for the top ten cryptocurrencies by marketcap.",
			"imageURL": "https://i.ibb.co/4SD8cZs/Screen-Shot-2019-11-25-at-6-16-56-PM.png",
			"dependencies": [
				"python",
				"requests"
			],
			"aboutURL": "https://nomics.com",
			"lastUpdated": "2021-03-08T15:21:47.727051Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "Cryptocurrency/Ripple/xrp-usd.py",
					"filename": "xrp-usd.py",
					"content": "#!/usr/bin/python\n# coding=utf-8\n#\n# \u003cbitbar.title\u003eRipplecoin Ticker ($1USD)\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev1.0\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eimpshum\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003eimpshum\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eDisplays current Ripplecoin price for $1 from Coinmarketcap\u003c/bitbar.desc\u003e\n# \u003cbitbar.image\u003ehttp://i.imgur.com/2xOj6Pu.jpg\u003c/bitbar.image\u003e\n#\n# by impshum\n\nfrom urllib import urlopen\nurl = urlopen('https://coinmarketcap-nexuist.rhcloud.com/api/xrp').read()\n\nimport json\nresult = json.loads(url)\n\ndef flow():\n    if result ['change'] \u003e '0':\n        print (' $%.4f | image=iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QAyQACAALwzISXAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH4AQHACkSBTjB+AAAALNJREFUOMvVk70NAjEMhb87WYiGBZAQU7ABNSVSWpZgEEagsJDoKBELUCEKFuBuCKTw0xyQC0lICe5i+/k9/wT+3opUUJQhcAUqa8I5ZQT4tANwioGTCkQZA9vmOQE2oUJFhL0DXBz33RpKUfCLfLTQJMx9IlEWuQr6QB3prGtNS1lwiMvEYo7ekNsKRBkB+y+rH1hDFVOwy7ids+gbVzrsM6CXeYDTF85xroB1ZoHb73ymB5RhJkpZTihGAAAAAElFTkSuQmCC color=#000000'% float(result['price']['usd']))\n    else:\n        print (' $%.4f | image=iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QABACnAADQ9FZaAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH4AQHACQ1FZwK3gAAAMRJREFUOMvNkjEKAjEQRZ+jKNjYKh5AbzCdjVcQj+BFPIKlp7EMeAJrUbASQVCEr80uG9cNbqe/Cgn/5WUI/DqNfBHM+kCzbs+lPUAr2pwBq5qABbB+M8gszkDvS/kOdAG5VBgEM4ApsP0CGLukjxlEoA0wSZR3Lo0qhxhZDIBDAmDA0wsBLD51CZeOwLKivHbprZx6AkAHuEXbD5fawYwywMqAzOKeDTTPvKqcTGZBMLsGs0utn5gADYEHcKp9e9ni//MCDtNCE3qjsIwAAAAASUVORK5CYII= color=#000000'% float(result['price']['usd']))\n\nflow()\n"
				}
			],
			"path": "Cryptocurrency/Ripple/xrp-usd.py",
			"filename": "xrp-usd.py",
			"dir": "Cryptocurrency/Ripple",
			"docsPlugin": "Cryptocurrency/Ripple/xrp-usd.py.html",
			"docsCategory": "Cryptocurrency/Ripple.html",
			"pathSegments": [
				"Cryptocurrency",
				"Ripple"
			],
			"categoryPathSegments": [
				{
					"path": "Cryptocurrency",
					"text": "Cryptocurrency",
					"isLast": false
				},
				{
					"path": "Cryptocurrency/Ripple",
					"text": "Ripple",
					"isLast": true
				}
			],
			"title": "Ripplecoin Ticker ($1USD)",
			"version": "v1.0",
			"author": "impshum",
			"authors": [
				{
					"name": "impshum",
					"githubUsername": "impshum",
					"imageURL": "https://avatars.githubusercontent.com/u/3229127?v=4",
					"bio": "If it wasn't for those damn whelks!",
					"primary": true
				}
			],
			"desc": "Displays current Ripplecoin price for $1 from Coinmarketcap",
			"imageURL": "http://i.imgur.com/2xOj6Pu.jpg",
			"dependencies": null,
			"aboutURL": "",
			"lastUpdated": "2021-03-08T15:21:47.056983Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "Cryptocurrency/Ripple/xrp-gbp.py",
					"filename": "xrp-gbp.py",
					"content": "#!/usr/bin/python\n# coding=utf-8\n#\n# \u003cbitbar.title\u003eRipplecoin Ticker (£1GBP)\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev1.0\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eimpshum\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003eimpshum\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eDisplays current Ripplecoin price for £1 from Coinmarketcap\u003c/bitbar.desc\u003e\n# \u003cbitbar.image\u003e\u003c/bitbar.image\u003e\n#\n# by impshum\n\nfrom urllib import urlopen\nurl = urlopen('https://coinmarketcap-nexuist.rhcloud.com/api/xrp').read()\n\nimport json\nresult = json.loads(url)\n\ndef flow():\n    if result ['change'] \u003e '0':\n        print (' £%.4f | image=iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QAyQACAALwzISXAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH4AQHACkSBTjB+AAAALNJREFUOMvVk70NAjEMhb87WYiGBZAQU7ABNSVSWpZgEEagsJDoKBELUCEKFuBuCKTw0xyQC0lICe5i+/k9/wT+3opUUJQhcAUqa8I5ZQT4tANwioGTCkQZA9vmOQE2oUJFhL0DXBz33RpKUfCLfLTQJMx9IlEWuQr6QB3prGtNS1lwiMvEYo7ekNsKRBkB+y+rH1hDFVOwy7ids+gbVzrsM6CXeYDTF85xroB1ZoHb73ymB5RhJkpZTihGAAAAAElFTkSuQmCC color=#000000'% float(result['price']['gbp']))\n    else:\n        print (' £%.4f | image=iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QABACnAADQ9FZaAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH4AQHACQ1FZwK3gAAAMRJREFUOMvNkjEKAjEQRZ+jKNjYKh5AbzCdjVcQj+BFPIKlp7EMeAJrUbASQVCEr80uG9cNbqe/Cgn/5WUI/DqNfBHM+kCzbs+lPUAr2pwBq5qABbB+M8gszkDvS/kOdAG5VBgEM4ApsP0CGLukjxlEoA0wSZR3Lo0qhxhZDIBDAmDA0wsBLD51CZeOwLKivHbprZx6AkAHuEXbD5fawYwywMqAzOKeDTTPvKqcTGZBMLsGs0utn5gADYEHcKp9e9ni//MCDtNCE3qjsIwAAAAASUVORK5CYII= color=#000000'% float(result['price']['gbp']))\n\nflow()\n"
				}
			],
			"path": "Cryptocurrency/Ripple/xrp-gbp.py",
			"filename": "xrp-gbp.py",
			"dir": "Cryptocurrency/Ripple",
			"docsPlugin": "Cryptocurrency/Ripple/xrp-gbp.py.html",
			"docsCategory": "Cryptocurrency/Ripple.html",
			"pathSegments": [
				"Cryptocurrency",
				"Ripple"
			],
			"categoryPathSegments": [
				{
					"path": "Cryptocurrency",
					"text": "Cryptocurrency",
					"isLast": false
				},
				{
					"path": "Cryptocurrency/Ripple",
					"text": "Ripple",
					"isLast": true
				}
			],
			"title": "Ripplecoin Ticker (£1GBP)",
			"version": "v1.0",
			"author": "impshum",
			"authors": [
				{
					"name": "impshum",
					"githubUsername": "impshum",
					"imageURL": "https://avatars.githubusercontent.com/u/3229127?v=4",
					"bio": "If it wasn't for those damn whelks!",
					"primary": true
				}
			],
			"desc": "Displays current Ripplecoin price for £1 from Coinmarketcap",
			"imageURL": "https://xbarapp.com/public/img/xbar-2048.png",
			"dependencies": null,
			"aboutURL": "",
			"lastUpdated": "2021-03-08T15:21:47.019709Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "Cryptocurrency/SurBTC-Ticker.10m.sh",
					"filename": "SurBTC-Ticker.10m.sh",
					"content": "#!/bin/sh\n\n# \u003cbitbar.title\u003eSurBTC Ticker\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev1.0\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eAgustin Feuerhake\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003eagustinf\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eShows prices and volume for cryptocurrencies in SurBTC\u003c/bitbar.desc\u003e\n# \u003cbitbar.image\u003ehttps://raw.githubusercontent.com/platanus/surbtc-bitbar-plugin/master/image/image.png\u003c/bitbar.image\u003e\n# \u003cbitbar.dependencies\u003ebash\u003cbitbar.dependencies\u003e\n\nbitcoin_icon='iVBORw0KGgoAAAANSUhEUgAAACQAAAAkCAQAAABLCVATAAAACXBIWXMAABYlAAAWJQFJUiTwAAABY0lEQVRIx2P4z0AdyEBzg1DAdIYfQJgCZHmCWdsYMAFRBs0BC2UAWT5g1p6hbZAggwIcrgALVQNZSWDWAQY24g3qwRtJ/xgeMqxkCGJgotQgGLzAoEUdg/4zvGQQIxzYLAyODF/gQv0MlgwWDK4MOQxbgV5DKG0nLtZ2wIUykII2EMmoU8QZtAWrQQwMB+HiDygzaDNc/CQlBskwfIKLN5JrkAxDFsMTuOh9BiFSDXoHDI2HDB9RlJ1kECc2r20hkI5OMXhQxyAQzCTNoDJgaAgAvaLLEMkwn+EbkuLvDBLkR78yUoD/Z0gn3yAGhnwk5V2UGBRGLYNmICkvIGzQLqwG8TA0oJQAVvgMymcoYehg+AUXWgoM0kygWC/DbpQ4+89wjYERt0FiRNeNX4GlFJ505EykMacZDPGn7HwCBnxiOMcwjcGJcOEvzqADh2vBQk1AVhaYdZCBc7TKpqJBA9ZiAwDMH49EXcmY2QAAAABJRU5ErkJggg=='\neth_icon='iVBORw0KGgoAAAANSUhEUgAAACQAAAAkCAYAAADhAJiYAAAACXBIWXMAABYlAAAWJQFJUiTwAAAC/UlEQVRYw+WYX6gMcRTH997158GD/7Z7mzm/8/vN7KZNN1ohL+vBG+GmyN8Hrrh0S3nQxQPPIg9S8i9SJEUePVGKuOF6Q0qkkD9JQv6M7xmzzO6dXcvO7JJbp+bOTr/zmXO+55zfb1Ke56X+Jkv980D1/GnS8zXRPFy21/N8okDGmEnG5luOUjsN8/qWAznERx2bHgqQo/jl5M7O8S0DcpWaBYivISDPKHWoVUDtABgQiDCQAGaZZzYdCJHYEABUAokN1BJ47ECiE9FLDSBPK9XbNCA4Oxh2HgUEe5XryE1IHMjYZjqcfakDCPf5SNJAbYbo2lDHVYAgcKnExIBcorURTmsBedrmm5UCjwWIiMZiPDyPdEp8Drpajut3kcBEm2IHMor3l785fQTEcehkAaLTD1ukLLUM9/phjyu09Np13YmxAWWVmoqFPwfpeSrpQbQWoxdd8AUeThnR3Sxxn8O8GjPu6s8o8bG4gNqw4BV/gGrdA0frAHD7lxpCVAC8G88vBMwpiShgZzcMlCPSkg7YLjh+9ruilsgC7IxjYQ3mpQ0DyRvi7T5UcVYPUNhOgifdsIZc5iLCPfinQBD5W6R8az6fH9F4hBzHDrSYRpPbWDbD6miMSNcJtIwOf+8UrNUQkCyGijoPmGmymGVZ4yDSAz+qriqQulHq0thVjsb/+1zSK2Mpe7xlt5S3DNXSwNRad2GMXBoCBOHjuTVSnWJyHRTD2bgb4+HSFEeE+iSFfhpsXgKwywDaZoj3SDT83oVNGu5d/76L5CcS2ViBujKZUXBwL5SSO7A58lsxVRwmFkQuI03Q39oGOsKpZG4iwxXOZiAFn8JakR6DqFChUBgOwC1oEW/Kfifem+x+iHhHRFnfB8z2iKE6iBk2MukdY1pGSR2j472xzJSmbGGVUlyWmgggpHJzU08dEO6q6kDqYlD2zT0oomGergTSil+UOnPTgZC6MYB6VHFy7W7t2R69CFF54H9sQPNs+ceG4JzWi0itkOaZONB/9wXtG+MF7xgwhWr8AAAAAElFTkSuQmCC'\n\n# shellcheck disable=SC2154\nif [ \"$BitBarDarkMode\" ]; then\n  # OSX has Dark Mode enabled.\n  base_color=white\nelse\n  # OSX does not have Dark Mode\n  base_color=black\nfi\n\n\nbtc=\"$(curl -s 'https://www.surbtc.com/api/v2/markets/btc-clp/ticker.json')\"\neth=\"$(curl -s 'https://www.surbtc.com/api/v2/markets/eth-clp/ticker.json')\"\npreprocess (){\n  echo \"$1\"|\n  egrep -o \"\\\"$2\\\":\\[\\\"([0-9]+\\.?[0-9]+)\\\"\" |\n  sed \"s/\\\"$2\\\":\\[//\" |\n  sed 's/\\\"//g' |\n  sed 's/\\.[0-9]\\{0,9\\}//' |\n  sed -e ': L\n  s/\\([0-9]\\{1,19\\}\\)\\([0-9]\\{3\\}\\)/\\1\\.\\2/\n  t L' |\n  sed -e \"s/^/$3 $/\"|\n  sed -e \"s/$/$4/\"\n}\nbtc_last_price() {\n  preprocess \"$btc\" \"last_price\" \"\" \"\"\n}\neth_last_price() {\n  preprocess \"$eth\" \"last_price\" \"\" \"\"\n}\necho \"|templateImage=$bitcoin_icon\"\necho \"---\"\necho \"BITCOIN $(btc_last_price) |templateImage=$bitcoin_icon\"\npreprocess \"$btc\" \"min_ask\" \"  ASK\" \"|size=11 color=green\"\npreprocess \"$btc\" \"max_bid\" \"  BID\" \"|size=11 color=red\"\npreprocess \"$btc\" \"volume\" \"24hr VOL\" \"|size=11 color=$base_color\"\necho \"---\"\necho \"ETHER $(eth_last_price) |templateImage=$eth_icon\"\npreprocess \"$eth\" \"min_ask\" \"  ASK\" \"|size=11 color=green\"\npreprocess \"$eth\" \"max_bid\" \"  BID\" \"|size=11 color=red\"\npreprocess \"$eth\" \"volume\" \"24hr VOL\" \"|size=11 color=$base_color\"\necho \"---\"\necho \"SurBTC.com | href=\\\"https://www.surbtc.com/\\\"\"\n"
				}
			],
			"path": "Cryptocurrency/SurBTC-Ticker.10m.sh",
			"filename": "SurBTC-Ticker.10m.sh",
			"dir": "Cryptocurrency",
			"docsPlugin": "Cryptocurrency/SurBTC-Ticker.10m.sh.html",
			"docsCategory": "Cryptocurrency.html",
			"pathSegments": [
				"Cryptocurrency"
			],
			"categoryPathSegments": [
				{
					"path": "Cryptocurrency",
					"text": "Cryptocurrency",
					"isLast": true
				}
			],
			"title": "SurBTC Ticker",
			"version": "v1.0",
			"author": "Agustin Feuerhake",
			"authors": [
				{
					"name": "Agustin Feuerhake",
					"githubUsername": "agustinf",
					"imageURL": "https://avatars.githubusercontent.com/u/313750?v=4",
					"bio": "",
					"primary": true
				}
			],
			"desc": "Shows prices and volume for cryptocurrencies in SurBTC",
			"imageURL": "https://raw.githubusercontent.com/platanus/surbtc-bitbar-plugin/master/image/image.png",
			"dependencies": null,
			"aboutURL": "",
			"lastUpdated": "2021-03-08T15:21:47.072497Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "Cryptocurrency/Vertcoin/vtc-btc-bittrex_detail.30s.sh",
					"filename": "vtc-btc-bittrex_detail.30s.sh",
					"content": "#!/bin/bash\n\n# \u003cbitbar.title\u003eVertcoin BTC price at Bittrex\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev1.0\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eCem Yildirim\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003ecemyld\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eShows the last Vertcoin price (in BTC) on the Bittrex exchange.\u003c/bitbar.desc\u003e\n# \u003cbitbar.image\u003ehttps://imgur.com/DEOGHG6.jpg\u003c/bitbar.image\u003e\n# \u003cbitbar.abouturl\u003ehttps://www.vertcoin.org/bitbar.abouturl\u003e\n#\nBitBarDarkMode=${BitBarDarkMode}\n\n\nvtcIconBase64=\"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\"\nRESULT=$(curl -s \"https://bittrex.com/api/v1.1/public/getmarketsummary?market=btc-vtc\")\nvtcLast=$(echo \"$RESULT\" | egrep -o '\"Last\":\\d+\\.?\\d{0,5}' | sed 's/\"Last\"://')\n\nprintf \"%.*f | templateImage=%s\\n\" 5 \"$vtcLast\" \"$vtcIconBase64\"\necho \"---\"\necho -n \"Ask \"; echo -n \"$RESULT\" | egrep -o '\"Ask\":\\d+\\.?\\d{0,6}' | sed 's/\"Ask\"://' | sed 's/$/Ƀ/';\necho -n \"Bid \"; echo \"$RESULT\" | egrep -o '\"Bid\":\\d+\\.?\\d{0,6}' | sed 's/\"Bid\"://' | sed 's/$/Ƀ/';\necho -n \"Low \"; echo \"$RESULT\" | egrep -o '\"Low\":\\d+\\.?\\d{0,6}' | sed 's/\"Low\"://' | sed 's/$/Ƀ/';\necho -n \"High \"; echo \"$RESULT\" | egrep -o '\"High\":\\d+\\.?\\d{0,6}' | sed 's/\"High\"://' | sed 's/$/Ƀ/';\necho -n \"Volume \"; echo \"$RESULT\" | egrep -o '\"Volume\":\\d+\\.?\\d{0,2}' | sed 's/\"Volume\"://' | sed 's/$/Ƀ/';\necho -n \"Updated At \"; date  +\"%F %T\"\necho \"Live Graph | href=\\\"https://bittrex.com/Market/Index?MarketName=BTC-VTC\\\"\"\n"
				}
			],
			"path": "Cryptocurrency/Vertcoin/vtc-btc-bittrex_detail.30s.sh",
			"filename": "vtc-btc-bittrex_detail.30s.sh",
			"dir": "Cryptocurrency/Vertcoin",
			"docsPlugin": "Cryptocurrency/Vertcoin/vtc-btc-bittrex_detail.30s.sh.html",
			"docsCategory": "Cryptocurrency/Vertcoin.html",
			"pathSegments": [
				"Cryptocurrency",
				"Vertcoin"
			],
			"categoryPathSegments": [
				{
					"path": "Cryptocurrency",
					"text": "Cryptocurrency",
					"isLast": false
				},
				{
					"path": "Cryptocurrency/Vertcoin",
					"text": "Vertcoin",
					"isLast": true
				}
			],
			"title": "Vertcoin BTC price at Bittrex",
			"version": "v1.0",
			"author": "Cem Yildirim",
			"authors": [
				{
					"name": "Cem Yildirim",
					"githubUsername": "cemyld",
					"imageURL": "https://avatars.githubusercontent.com/u/6137137?v=4",
					"bio": "",
					"primary": true
				}
			],
			"desc": "Shows the last Vertcoin price (in BTC) on the Bittrex exchange.",
			"imageURL": "https://imgur.com/DEOGHG6.jpg",
			"dependencies": null,
			"aboutURL": "",
			"lastUpdated": "2021-03-08T15:21:47.098007Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "Cryptocurrency/Vertcoin/vtc-btc-bittrex.30s.sh",
					"filename": "vtc-btc-bittrex.30s.sh",
					"content": "#!/bin/bash\n\n# \u003cbitbar.title\u003eVertcoin BTC price at Bittrex\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev1.0\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eCem Yildirim\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003ecemyld\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eShows the last Vertcoin price (in BTC) on the Bittrex exchange.\u003c/bitbar.desc\u003e\n# \u003cbitbar.image\u003ehttps://imgur.com/DEOGHG6.jpg\u003c/bitbar.image\u003e\n# \u003cbitbar.abouturl\u003ehttps://www.vertcoin.org/bitbar.abouturl\u003e\n#\n\n\nvtcIconBase64=\"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\"\nvtcLast=$(curl -s https://bittrex.com/api/v1.1/public/getticker?market=btc-vtc | tr -d '{}\"' | tr ':,' '\\n' | grep -A1 \"Last\" | tail -1)\nprintf \"%.*f | templateImage=%s\\n\" 5 \"$vtcLast\" \"$vtcIconBase64\"\necho \"---\"\necho \"Live Graph | href=\\\"https://bittrex.com/Market/Index?MarketName=BTC-VTC\\\"\"\n"
				}
			],
			"path": "Cryptocurrency/Vertcoin/vtc-btc-bittrex.30s.sh",
			"filename": "vtc-btc-bittrex.30s.sh",
			"dir": "Cryptocurrency/Vertcoin",
			"docsPlugin": "Cryptocurrency/Vertcoin/vtc-btc-bittrex.30s.sh.html",
			"docsCategory": "Cryptocurrency/Vertcoin.html",
			"pathSegments": [
				"Cryptocurrency",
				"Vertcoin"
			],
			"categoryPathSegments": [
				{
					"path": "Cryptocurrency",
					"text": "Cryptocurrency",
					"isLast": false
				},
				{
					"path": "Cryptocurrency/Vertcoin",
					"text": "Vertcoin",
					"isLast": true
				}
			],
			"title": "Vertcoin BTC price at Bittrex",
			"version": "v1.0",
			"author": "Cem Yildirim",
			"authors": [
				{
					"name": "Cem Yildirim",
					"githubUsername": "cemyld",
					"imageURL": "https://avatars.githubusercontent.com/u/6137137?v=4",
					"bio": "",
					"primary": true
				}
			],
			"desc": "Shows the last Vertcoin price (in BTC) on the Bittrex exchange.",
			"imageURL": "https://imgur.com/DEOGHG6.jpg",
			"dependencies": null,
			"aboutURL": "",
			"lastUpdated": "2021-03-08T15:21:47.121443Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "Cryptocurrency/Ripple/xrpusd.1m.sh",
					"filename": "xrpusd.1m.sh",
					"content": "#!/bin/bash\n\n# Shows last Ripple (XRP) price in USD.\n#\n# \u003cbitbar.title\u003eXRP last price\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev1.0\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eKevin Bost\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003ekevbost\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eShows last Ripple (XRP) price in USD.\u003c/bitbar.desc\u003e\n# \u003cbitbar.image\u003ehttp://i.imgur.com/iAMBYVv.png\u003c/bitbar.image\u003e\n#\n# by Kevin Bost\n# Based on Ethereum bitbar plugin by Nikita Zhavoronkov\n\necho -n \"ˣʳᵖ\"; curl -s \"https://coinmarketcap-nexuist.rhcloud.com/api/xrp/price\" | egrep -o '\"usd\":[0-9]+(\\.)?([0-9]{2})?' | sed 's/\"usd\"://' | sed 's/\\\"//g'\n"
				}
			],
			"path": "Cryptocurrency/Ripple/xrpusd.1m.sh",
			"filename": "xrpusd.1m.sh",
			"dir": "Cryptocurrency/Ripple",
			"docsPlugin": "Cryptocurrency/Ripple/xrpusd.1m.sh.html",
			"docsCategory": "Cryptocurrency/Ripple.html",
			"pathSegments": [
				"Cryptocurrency",
				"Ripple"
			],
			"categoryPathSegments": [
				{
					"path": "Cryptocurrency",
					"text": "Cryptocurrency",
					"isLast": false
				},
				{
					"path": "Cryptocurrency/Ripple",
					"text": "Ripple",
					"isLast": true
				}
			],
			"title": "XRP last price",
			"version": "v1.0",
			"author": "Kevin Bost",
			"authors": [
				{
					"name": "Kevin Bost",
					"githubUsername": "kevbost",
					"imageURL": "https://avatars.githubusercontent.com/u/1672548?v=4",
					"bio": "",
					"primary": true
				}
			],
			"desc": "Shows last Ripple (XRP) price in USD.",
			"imageURL": "http://i.imgur.com/iAMBYVv.png",
			"dependencies": null,
			"aboutURL": "",
			"lastUpdated": "2021-03-08T15:21:47.089393Z",
			"vars": null
		}
	]
}