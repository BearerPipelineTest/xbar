{
	"plugin": {
		"files": [
			{
				"path": "Dev/Docker/docker-status.1m.sh",
				"filename": "docker-status.1m.sh",
				"content": "#!/usr/bin/env bash\n#\n# \u003cbitbar.title\u003eDocker Status\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev1.2\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eManoj Mahalingam\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003emanojlds\u003c/bitbar.author.github\u003e\n# \u003cbitbar.image\u003ehttps://cloud.githubusercontent.com/assets/191378/12255368/1e671b32-b919-11e5-8166-6d975396f408.png\u003c/bitbar.image\u003e\n# \u003cbitbar.desc\u003eDisplays the status of docker machines and running containers\u003c/bitbar.desc\u003e\n# \u003cbitbar.dependencies\u003eshell,docker\u003c/bitbar.dependencies\u003e\n#\n# Docker status plugin\n# by Manoj Mahalingam (@manojlds)\n#\n# Displays the status of docker machines and running containers\n\nexport PATH=\"/usr/local/bin:/usr/bin:$PATH\"\necho \"‚öìÔ∏è | dropdown=false\"\necho \"---\"\n\nfunction containers() {\n  CONTAINERS=\"$(docker ps -a --format \"{{.Names}} ({{.Image}})|{{.ID}}|{{.Status}}\")\"\n  if [ -z \"$CONTAINERS\" ]; then\n    echo \"No running containers\"\n  else\n    LAST_CONTAINER=$(echo \"$CONTAINERS\" | tail -n1 )\n    echo \"${CONTAINERS}\" | while read -r CONTAINER; do\n      CONTAINER_NAME=$(echo \"$CONTAINER\" | awk -F\"|\" '{print $1}')\n      CONTAINER_ID=$(echo \"$CONTAINER\" | awk -F\"|\" '{print $2}')\n      CONTAINER_STATE=$(echo \"$CONTAINER\" | awk -F\"|\" '{print $3}')\n      SYM=\"‚îú üíª \"\n      if [ \"$CONTAINER\" = \"$LAST_CONTAINER\" ]; then SYM=\"‚îî üíª \"; fi\n      case \"$CONTAINER_STATE\" in\n        *Up*) echo \"$SYM $CONTAINER_NAME | color=green bash=\\\"$(command -v docker)\\\" param1=stop param2=$CONTAINER_ID terminal=false refresh=true\";;\n        *Exited*) echo \"$SYM $CONTAINER_NAME | color=red bash=\\\"$(command -v docker)\\\" param1=start param2=$CONTAINER_ID terminal=false refresh=true\";;\n      esac\n    done\n  fi\n}\n\nif command -v docker-machine \u003e /dev/null; then\n    DOCKER_MACHINES=\"$(docker-machine ls -q)\"\nfi\nif command -v dlite \u003e /dev/null; then\n    DLITE=\"$(command -v dlite)\"\nfi\nif command -v docker \u003e /dev/null; then\n    DOCKER_NATIVE=\"$(command -v docker)\"\nfi\n\nif test -z \"$DOCKER_MACHINES\" \u0026\u0026 test -z \"$DLITE\" \u0026\u0026 test -z \"$DOCKER_NATIVE\"; then\n  echo \"No docker machine, dlite or docker native found\"\n  exit 0\nfi\n\nif [ -n \"$DOCKER_NATIVE\" ]; then\n  MACHINE=\"$($DOCKER_NATIVE -v)\"\n  CONTAINERS=\"$($DOCKER_NATIVE ps -a --format \"{{.Names}} ({{.Image}})|{{.ID}}|{{.Status}}\")\"\n  if [ -n \"$CONTAINERS\" ]; then\n    echo \"üîµ  $MACHINE | bash=\\\"$DOCKER_NATIVE\\\" param1=stop terminal=false refresh=true\"\n    containers\n  fi\n  exit 0\nfi\n\nif [ -n \"$DLITE\" ]; then\n  MACHINE=\"$($DLITE ip)\"\n  CONTAINERS=\"$(docker ps -a --format \"{{.Names}} ({{.Image}})|{{.ID}}|{{.Status}}\")\"\n  if [ -z \"$CONTAINERS\" ]; then\n    echo \"üî¥  $MACHINE | bash=\\\"$DLITE\\\" param1=start terminal=false refresh=true\"\n  else\n    echo \"üîµ  $MACHINE | bash=\\\"$DLITE\\\" param1=stop terminal=false refresh=true\"\n    containers\n  fi\n  exit 0\nfi\n\nif [ -n \"$DOCKER_MACHINES\" ]; then\n  DM_EXEC=$(command -v docker-machine)\n  echo \"${DOCKER_MACHINES}\" | while read -r machine; do\n    STATUS=$($DM_EXEC status \"$machine\")\n    if [ \"$STATUS\" = \"Running\" ]; then\n      echo \"üîµ  $machine | bash=\\\"$DM_EXEC\\\" param1=stop param2=$machine terminal=false refresh=true\"\n      ENV=$($DM_EXEC env --shell sh \"$machine\")\n      eval \"$ENV\"\n      containers\n    else\n      echo \"üî¥  $machine | bash=\\\"$DM_EXEC\\\" param1=start param2=$machine terminal=false refresh=true\"\n    fi\n    echo \"---\"\n  done\nfi\n\nif [ -n \"$CONTAINERS\" ]; then\n  echo \"Docker VM Containers\"\n  containers\nfi\n"
			}
		],
		"path": "Dev/Docker/docker-status.1m.sh",
		"filename": "docker-status.1m.sh",
		"dir": "Dev/Docker",
		"docsPlugin": "Dev/Docker/docker-status.1m.sh.html",
		"docsCategory": "Dev/Docker.html",
		"pathSegments": [
			"Dev",
			"Docker"
		],
		"categoryPathSegments": [
			{
				"path": "Dev",
				"text": "Dev",
				"isLast": false
			},
			{
				"path": "Dev/Docker",
				"text": "Docker",
				"isLast": true
			}
		],
		"title": "Docker Status",
		"version": "v1.2",
		"author": "Manoj Mahalingam",
		"authors": [
			{
				"name": "Manoj",
				"githubUsername": "manojlds",
				"imageURL": "https://avatars.githubusercontent.com/u/191378?v=4",
				"bio": "Principal Engineer @avalara. Previously @indix @thoughtworks. #kubernetes #terraform #docker #scala #javascript #nodejs. Author of http://bit.ly/learningci ",
				"primary": true
			}
		],
		"desc": "Displays the status of docker machines and running containers",
		"imageURL": "https://cloud.githubusercontent.com/assets/191378/12255368/1e671b32-b919-11e5-8166-6d975396f408.png",
		"dependencies": [
			"shell",
			"docker"
		],
		"aboutURL": "",
		"lastUpdated": "2021-03-08T15:21:47.905143Z",
		"vars": null
	}
}