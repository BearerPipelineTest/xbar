{
	"plugin": {
		"files": [
			{
				"path": "Dev/Jira/jira-issues.10m.py",
				"filename": "jira-issues.10m.py",
				"content": "#!/usr/local/bin/python3\n\n# \u003cbitbar.title\u003eJira issues\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev1.0\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eStefano Teodorani\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003eteopost\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eShow your jira issues\u003c/bitbar.desc\u003e\n# \u003cbitbar.image\u003ehttps://i.ibb.co/3SZ6D30/Schermata-2019-11-23-alle-19-26-24.png\u003c/bitbar.image\u003e\n# \u003cbitbar.dependencies\u003epython\u003c/bitbar.dependencies\u003e\n# \u003cbitbar.abouturl\u003ehttps://www.stefanoteodorani.it/\u003c/bitbar.abouturl\u003e\n\n\nimport requests\nimport json\nimport base64\n\nfrom urllib.parse import quote\nfrom requests.packages.urllib3.exceptions import InsecureRequestWarning\n\nclass Jira:\n    base_url = \"\"\n    juser = \"\"\n    jpwd = \"\"\n    s = \"\"\n    issue_count = 0\n    issue_results = \"\"\n    max_results = 50\n    active_jql = \"\"\n\n    def __init__(self, BaseUrl, UserName, Password):\n        self.base_url = BaseUrl\n        self.juser = UserName\n        self.jpwd = Password\n\n        self.s = requests.Session()\n\n        requests.packages.urllib3.disable_warnings(InsecureRequestWarning)\n\n    def Query(self, jql):\n        self.active_jql = jql\n        #expansion = 'summary,issuetype,status,assignee,renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations'\n        expansion = 'summary,issuetype,status,assignee'\n        payload = {'jql' : jql, 'maxResults' : self.max_results, 'fields' : expansion}\n        # renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations\n        r = self.s.get(self.base_url + \"/rest/api/2/search\", params=payload, verify=False, auth=(self.juser, self.jpwd))\n        parsed = json.loads(r.text)\n        self.issue_count, self.issue_results = parsed['total'],parsed['issues']\n\n    def PrintIssues(self, filter, assignee=''):\n        # print gray title\n        print(filter)\n        for issue in self.issue_results:\n            #print(issue)\n            status = issue['fields']['status']['name']\n            summary = issue['fields']['summary'].replace('|', '-')\n\n            if filter.upper() == 'DEBUG':\n                print('DEBUG: ' + status + '-' + summary)\n\n            try:\n                assignee = \" ▸\" + issue['fields']['assignee']['name']\n            except:\n                assignee = \"\"\n\n            assignee = \"\"\n            iconurl = issue['fields']['issuetype']['iconUrl']\n            key = issue['key']\n\n            line = key + ': ' + summary + assignee + ' | href=' + self.base_url + '/browse/' + key + ' image=' + self.render_icon_string(iconurl)\n            if status.upper() != 'DEBUG':\n                if status.upper() == filter.upper():\n                    if assignee == '':\n                        print(line)\n                    elif assignee == assignee:\n                        print(line)\n\n    def render_icon_string(self, iconurl):\n        if 'viewavatar' in iconurl:\n            retvalue = iconurl + '\u0026format=png'\n            retvalue = retvalue.replace('size=medium', 'size=xsmall')\n        else:\n            retvalue = iconurl\n        return str(base64.b64encode(self.s.get(retvalue).content))[2:-1]\n\ndef print_title(toprint):\n    print(toprint)\n    print('---')\n\ndef print_separator():\n    print('---')\n\n# ====\n# MAIN\n# ====\nif __name__ == '__main__':\n\n    QUERY_NAME = \"Issues\"\n\n    JIRAURL = \"\u003center-jira-url\u003e\"\n    USERNAME = \"\u003cput here usernema\u003e\"\n    PASSWORD = \"\u003cput here password\u003e\"\n    JQL = \"resolution = Unresolved\"\n\n    Cloud = Jira(JIRAURL, USERNAME, PASSWORD)\n    Cloud.Query(JQL)\n\n    tot_count=str(Cloud.issue_count)\n\n    if tot_count == 0:\n        print_title(QUERY_NAME)\n    else:\n        print_title(QUERY_NAME + \": \" + tot_count)\n\n    Cloud.PrintIssues('Triage')\n    Cloud.PrintIssues('Riaperta')\n    Cloud.PrintIssues('Waiting for support')\n    Cloud.PrintIssues('Waiting for customer')\n    Cloud.PrintIssues('In corso')\n    # Add here your preferrend jira workflow steps\n\n    print_separator()\n\n    print(\"▸ Go to Jira...\" + ' | href=' + Cloud.base_url + '/issues/?jql=' + quote(Cloud.active_jql, ''))\n"
			}
		],
		"path": "Dev/Jira/jira-issues.10m.py",
		"filename": "jira-issues.10m.py",
		"dir": "Dev/Jira",
		"docsPlugin": "Dev/Jira/jira-issues.10m.py.html",
		"docsCategory": "Dev/Jira.html",
		"pathSegments": [
			"Dev",
			"Jira"
		],
		"categoryPathSegments": [
			{
				"path": "Dev",
				"text": "Dev",
				"isLast": false
			},
			{
				"path": "Dev/Jira",
				"text": "Jira",
				"isLast": true
			}
		],
		"title": "Jira issues",
		"version": "v1.0",
		"author": "Stefano Teodorani",
		"authors": [
			{
				"name": "Stefano Teodorani",
				"githubUsername": "teopost",
				"imageURL": "https://avatars.githubusercontent.com/u/2573389?v=4",
				"bio": "",
				"primary": true
			}
		],
		"desc": "Show your jira issues",
		"imageURL": "https://i.ibb.co/3SZ6D30/Schermata-2019-11-23-alle-19-26-24.png",
		"dependencies": [
			"python"
		],
		"aboutURL": "https://www.stefanoteodorani.it/",
		"lastUpdated": "2021-03-08T15:21:49.486823Z",
		"vars": null
	}
}