{
	"plugin": {
		"files": [
			{
				"path": "Dev/travis-check.2m.py",
				"filename": "travis-check.2m.py",
				"content": "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\n# \u003cbitbar.title\u003eTravisCI Check\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev1.3\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eChris Tomkins-Tinch\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003etomkinsc\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eThis plugin displays the build status of repositories listed on TravisCI.\u003c/bitbar.desc\u003e\n# \u003cbitbar.image\u003ehttps://cloud.githubusercontent.com/assets/53064/12126193/a775fada-b3bd-11e5-9ae2-091c9c38b1da.png\u003c/bitbar.image\u003e\n# \u003cbitbar.dependencies\u003epython\u003c/bitbar.dependencies\u003e\n\n# Chris Tomkins-Tinch\n# github.com/tomkinsc\n\n# Keith Cirkel\n# github.com/keithamus\n\n# version history\n# 1.0\n#   initial commit\n# 1.1\n#   refactor by @keithamus to remove travispy dependency\n# 1.2\n#   additions by @seripap, adding an 'in progress' view, fixed missing status levels, added global TLD config\n# 1.3\n#   additions by @seripap, Fixed canceled builds\n\n# Dependencies:\n#   travis API key\n\nimport json\nimport urllib2\n\n# You need to set your TRAVIS_KEY to an API key for travis.\n# -- Please note that this IS NOT the 'Token' listed on the Travis CI website\n# -- Again, this is NOT the token on https://travis-ci.org/profile/your-name\n# The easiest way to get this key is to use the official travis client\n# (`gem install travis`), and run `travis_token`.\nTRAVIS_KEY = 'YOUR TRAVIS TOKEN (Run `travis token` to retreive it)'\n\n# If you don't want to check all repos, then specify the ones you do wish to\n# check here, and this plugin will only get the details of these repos.\n# If you do not specify the `repos_to_check` option - it will fetch all repos\n# available in your account.\n# If you do not include the 'branches' key, then only the master branch\n# will be checked.\n# repos_to_check = [\n#     {'name':'account/repo-name', 'branches':['master', 'some-feature']},\n# ]\n\n# If you set INCLUDE_PULL_REQUESTS to `True`, then this script will get the\n# status of both pull requests and commits. By default, it only gets the status\n# of commits (pushes).\nINCLUDE_PULL_REQUESTS = False\n\n# SUPER SECRET FEATURE!\n# Instead of listing the repos you want to check in an array above, you can\n# use a hidden feature of Travis v3 - stars. Repositories can be starred,\n# and if SECRET_FILTER_BY_STAR is set to `True` then this script will only\n# show the starred repositories.\n# How do you star a repository? As of writing Travis has no UI for it (check\n# their roadmap (http://next.travis-ci.com/) to see when it might be\n# implemented). The only way to star a repository right now, is to curl the\n# v3 api, like so:\n# curl -X POST https://api.travis-ci.org/repo/ACCOUNT%2FREPO/star -H \"Accept: application/vnd.travis-ci.3+json\" -H \"Authorization: token YOUR_TOKEN\"\n# (Pay particular attention to the headers, and replace\n# ACCOUNT, REPO and YOUR_TOKEN as necessary)\nSECRET_FILTER_BY_STAR = False\n\n# For enterprise travis, change the .org/ to .com/\nTRAVIS_TLD = '.org/'\n\nTRAVIS_URL = 'https://api.travis-ci' + TRAVIS_TLD\n\n# ======================================\n\nSYMBOLS = {\n    'passed': u'✔︎',\n    'created': u'⛬',\n    'starting': u'⛬',\n    'started': u'⛬',\n    'failed': u'✘',\n    'queued': u'⚠',\n    'errored': u'⚠',\n    'canceled': u' ⃠',\n}\nCOLORS = {\n    'passed': 'green',\n    'created': 'yellow',\n    'starting': 'yellow',\n    'started': 'yellow',\n    'failed': 'red',\n    'queued': 'yellow',\n    'errored': 'yellow',\n    'canceled': 'gray',\n}\nNO_SYMBOL = u'❂'\n\n\ndef request(uri):\n    request = urllib2.Request(TRAVIS_URL + uri, headers={\n        'Authorization': 'token ' + TRAVIS_KEY,\n        'Accept': 'application/vnd.travis-ci.3+json'\n    })\n    try:\n        response = urllib2.urlopen(request)\n        return json.load(response)\n\n    except:\n        print(\"travis-check error\")\n        print(\"---\")\n        print(\"Maybe you need to edit the plugin and set your access token?\")\n        print(\" (could also be an API/HTTP error)\")\n        exit(1)\n\ndef get_all_repos_for_account():\n    url = 'repos?repository.active=true\u0026sort_by=name\u0026limit=200'\n    if SECRET_FILTER_BY_STAR:\n        url += '\u0026starred=true'\n    repos = request(url)\n    all_repos = []\n    for repo in repos['repositories']:\n        if repo and 'slug' in repo:\n            all_repos.append({'name': repo['slug']})\n\n    return all_repos\n\n\ndef update_statuses(repos):\n    output = []\n    fail_count = 0\n    currently_building = 0\n    canceled = 0\n\n    output.append(u'{} | color=green'.format(SYMBOLS['passed']))\n    output.append('---')\n\n    for repo in repos:\n        if 'branches' in repo and len(repo['branches']):\n            branch_list = repo['branches']\n        else:\n            branch_list = ['master']\n\n        for branch_name in branch_list:\n            url = 'repo/' + urllib2.quote(repo['name'], safe='') + '/builds?limit=1\u0026branch.name=' + branch_name\n            if not INCLUDE_PULL_REQUESTS:\n                url += '\u0026event_type=push'\n            build = request(url)\n            if 'builds' in build and len(build['builds']):\n                build = build['builds'][0]\n                color = 'color={}'.format(COLORS[build['state']]) if COLORS.get(build['state']) else ''\n                symbol = SYMBOLS[build['state']] or NO_SYMBOL\n                href = 'href=https://travis-ci' + TRAVIS_TLD + '{}/builds/{}'.format(repo['name'], build['id'])\n                output_msg = u'{symbol} {repo_name} ({branch_name}) {status}'.format(symbol=symbol, repo_name=repo['name'], branch_name=branch_name, status=build['state'])\n                output.append(u'{} | {} {}'.format(output_msg, href, color))\n\n                if build['state'] == \"started\" or build['state'] == \"starting\" or build['state'] == \"queued\" or build['state'] == \"created\":\n                    currently_building += 1\n                elif build['state'] == \"failed\":\n                    fail_count += 1\n                elif build['state'] == \"canceled\":\n                    canceled += 1\n\n    if fail_count \u003e 0:\n        output[0] = u'{}{} | color=red'.format(SYMBOLS['failed'], fail_count)\n\n    if currently_building \u003e 0:\n        output[0] = u'{}{} | color=yellow'.format(SYMBOLS['started'], currently_building)        \n\n    if canceled \u003e 0:\n        output[0] = u'{}{} | color=gray'.format(SYMBOLS['canceled'], canceled)\n\n    for line in output:\n        print line.encode('utf-8')\n\n\nif __name__ == '__main__':\n    try:\n        repos_to_check\n    except NameError:\n        repos_to_check = get_all_repos_for_account()\n\n    update_statuses(repos_to_check)\n"
			}
		],
		"path": "Dev/travis-check.2m.py",
		"filename": "travis-check.2m.py",
		"dir": "Dev",
		"docsPlugin": "Dev/travis-check.2m.py.html",
		"docsCategory": "Dev.html",
		"pathSegments": [
			"Dev"
		],
		"categoryPathSegments": [
			{
				"path": "Dev",
				"text": "Dev",
				"isLast": true
			}
		],
		"title": "TravisCI Check",
		"version": "v1.3",
		"author": "Chris Tomkins-Tinch",
		"authors": [
			{
				"name": "Chris Tomkins-Tinch",
				"githubUsername": "tomkinsc",
				"imageURL": "https://avatars.githubusercontent.com/u/53064?v=4",
				"bio": "",
				"primary": true
			}
		],
		"desc": "This plugin displays the build status of repositories listed on TravisCI.",
		"imageURL": "https://cloud.githubusercontent.com/assets/53064/12126193/a775fada-b3bd-11e5-9ae2-091c9c38b1da.png",
		"dependencies": [
			"python"
		],
		"aboutURL": "",
		"lastUpdated": "2021-03-08T15:21:52.468726Z",
		"vars": null
	}
}