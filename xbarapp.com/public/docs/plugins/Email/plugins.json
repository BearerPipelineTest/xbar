{
	"plugins": [
		{
			"files": [
				{
					"path": "Email/gmail-checker.sh",
					"filename": "gmail-checker.sh",
					"content": "#!/bin/sh\n\n# \u003cbitbar.title\u003eGmail Checker\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev1.0.1\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eNadav Cohen\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003enadavc\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eChecks gmail and displays inbox count\u003c/bitbar.desc\u003e\n# \u003cbitbar.image\u003ehttp://i.imgur.com/LYrIphK.png\u003c/bitbar.image\u003e\n\nUSERNAME=\"GMAIL_USERNAME\"\nPASSWORD=\"GMAIL_PASSWORD\"\nCOLOR=black\nRESULT=$(curl -s -u $USERNAME:$PASSWORD \"https://mail.google.com/mail/feed/atom\" | egrep -o '\u003cfullcount\u003e[0-9]*' | cut -c 12-)\n\nif [ \"$RESULT\" -ne \"0\" ]; then\n   COLOR=red\nfi\n\necho \"ðŸ“¬ $RESULT|color=$COLOR\"\n"
				}
			],
			"path": "Email/gmail-checker.sh",
			"filename": "gmail-checker.sh",
			"dir": "Email",
			"docsPlugin": "Email/gmail-checker.sh.html",
			"docsCategory": "Email.html",
			"pathSegments": [
				"Email"
			],
			"categoryPathSegments": [
				{
					"path": "Email",
					"text": "Email",
					"isLast": true
				}
			],
			"title": "Gmail Checker",
			"version": "v1.0.1",
			"author": "Nadav Cohen",
			"authors": [
				{
					"name": "Nadav Cohen",
					"githubUsername": "nadavc",
					"imageURL": "https://avatars.githubusercontent.com/u/610392?v=4",
					"bio": "",
					"primary": true
				}
			],
			"desc": "Checks gmail and displays inbox count",
			"imageURL": "http://i.imgur.com/LYrIphK.png",
			"dependencies": null,
			"aboutURL": "",
			"lastUpdated": "2021-03-08T15:21:52.827348Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "Email/gmail-checker-improved.1m.pl",
					"filename": "gmail-checker-improved.1m.pl",
					"content": "#!/usr/bin/perl -w\n# \u003cbitbar.title\u003eGmail Checker Improved\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev1.0\u003c/bitbar.version\u003e\n# \u003cbitbar.author.github\u003eaxeloz\u003c/bitbar.author.github\u003e\n# \u003cbitbar.author\u003eAxel\u003c/bitbar.author\u003e\n# \u003cbitbar.desc\u003eGmail unread emails checker.\u003c/bitbar.desc\u003e\n# \u003cbitbar.dependencies\u003eperl,gmail\u003c/bitbar.dependencies\u003e\n# \u003cbitbar.image\u003ehttps://i.imgur.com/gYYJB7U.png\u003c/bitbar.image\u003e\n\nuse strict;\nuse LWP::Simple;\nuse LWP::UserAgent;\nuse Mozilla::CA;\nuse XML::Simple;\nuse Encode;\nuse POSIX;\n\nmy $url = 'https://mail.google.com/mail/feed/atom';\nmy $user = '\u003cusername\u003e';\nmy $password = '\u003cpassword\u003e';\nmy $output;\n\nmy $ua = LWP::UserAgent-\u003enew;\n$ua-\u003ecredentials('mail.google.com:443', 'mail.google.com', $user, $password);\n\nmy $content = $ua-\u003eget($url);\ndie \"Couldn't get $url\" unless defined $content;\n\nsub clevercut {\n\tmy ($txt, $max) = @_;\n\t\n\tif (length($txt) \u003e $max) {\n\t\treturn (substr $txt, 0, $max ).' [...]';\n\t}\n\treturn $txt;\n}\n\n\nif ($content-\u003estatus_line eq '200 OK') {\n\tmy $xs = XML::Simple-\u003enew();\n\tmy $ref = XMLin($content-\u003econtent, ForceArray=\u003e'entry');\n\n\tif ($ref-\u003e{fullcount}-\u003e[0] \u003e 0) {\n\t\t$output .= \"ðŸ“¬ \".$ref-\u003e{fullcount}-\u003e[0].\"\\n\";\n\t\t$output .= \"---\\n\";\n\t\t\n\t\tif ($ref-\u003e{fullcount}-\u003e[0] == 1) {\n\t\t\t$output .= \"You have 1 new message | size=16 \\n\";\n\t\t}\n\t\telse {\n\t\t\t$output .= \"You have \".$ref-\u003e{fullcount}-\u003e[0].\" new messages | size=16 \\n\";\n\t\t}\n\t\t$output .= \"  | size=14 color=black \\n\";\n\t\t\n\t\tforeach my $email (@{ $ref-\u003e{entry} }) {\n\t\t\t$output .= \"Â» \".clevercut(encode(\"utf8\", $email-\u003e{title}-\u003e[0]), 30).\" | href=\".$email-\u003e{link}-\u003e[0]-\u003e{href}.\"\\n\";\n\t\t}\n\t\t\n\t}\n\telse {\n\t\t$output .= \"ðŸ“ª\\n\";\n\t\t$output .= \"---\\n\";\n\t\t$output .= \"No new message | size=16 \\n\";\n\t}\n}\n$output .= \"---\\n\";\n$output .= \"âž¤ Open Mailbox |href=https://www.gmail.com\\n\";\nprint $output.\"\\n\";\n"
				}
			],
			"path": "Email/gmail-checker-improved.1m.pl",
			"filename": "gmail-checker-improved.1m.pl",
			"dir": "Email",
			"docsPlugin": "Email/gmail-checker-improved.1m.pl.html",
			"docsCategory": "Email.html",
			"pathSegments": [
				"Email"
			],
			"categoryPathSegments": [
				{
					"path": "Email",
					"text": "Email",
					"isLast": true
				}
			],
			"title": "Gmail Checker Improved",
			"version": "v1.0",
			"author": "Axel",
			"authors": [
				{
					"name": "Axel",
					"githubUsername": "axeloz",
					"imageURL": "https://avatars.githubusercontent.com/u/1597611?v=4",
					"bio": "",
					"primary": true
				}
			],
			"desc": "Gmail unread emails checker.",
			"imageURL": "https://i.imgur.com/gYYJB7U.png",
			"dependencies": [
				"perl",
				"gmail"
			],
			"aboutURL": "",
			"lastUpdated": "2021-03-08T15:21:52.824909Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "Email/mu-email-checker.sh",
					"filename": "mu-email-checker.sh",
					"content": "#!/bin/bash\n\n# \u003cbitbar.title\u003eMu Email Checker\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev1.0.1\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eAndrew Sanchez\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003eandrewsanchez\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eDisplays results of basic mu find commands\u003c/bitbar.desc\u003e\n# \u003cbitbar.image\u003ehttp://i67.tinypic.com/104pa1w.png\u003c/bitbar.image\u003e\n\n# Count total number of emails in inbox, unread mail and drafts indexed with mu\n# Also includes the output for unread emails in the drop down menu\n# Based on a blog post by Ben Maughan at the excellent pragmaticemacs.com\n# http://pragmaticemacs.com/emacs/an-unobtrusive-email-monitor-for-mu4e-on-the-mac/\n# See related post to include mails in outbox using postfix\n# http://pragmaticemacs.com/emacs/using-postfix-instead-of-smtpmail-to-send-email-in-mu4e/\n\nmu=\"/usr/local/bin/mu\"\n\n# mu find patterns\npinbox=\"maildir:/INBOX\"\npunread=\"$pinbox AND flag:unread\"\npdrafts=\"maildir:/drafts\"\n\n# Total mail in inbox\ntotal=\"$(\"$mu\" find \"$pinbox\" | wc -l)\"\n\n# Unread mails in inbox\nunread=\"$(\"$mu\" find \"$punread\" 2\u003e /dev/null)\"\nunread_total=\"$(\"$mu\" find \"$punread\" 2\u003e /dev/null | wc -l)\"\n\n# Drafts\ndrafts=\"$(\"$mu\" find \"$pdrafts\" | wc -l)\"\n\nif [ \"$unread_total\" -gt 0 ]\nthen\n    printf \"ðŸ“ª %i/%i/%i\\n\" \"$unread_total\" \"$total\" \"$drafts\"\n    echo ---\n    echo \"$unread\"\nfi\n"
				}
			],
			"path": "Email/mu-email-checker.sh",
			"filename": "mu-email-checker.sh",
			"dir": "Email",
			"docsPlugin": "Email/mu-email-checker.sh.html",
			"docsCategory": "Email.html",
			"pathSegments": [
				"Email"
			],
			"categoryPathSegments": [
				{
					"path": "Email",
					"text": "Email",
					"isLast": true
				}
			],
			"title": "Mu Email Checker",
			"version": "v1.0.1",
			"author": "Andrew Sanchez",
			"authors": [
				{
					"name": "Andrew Sanchez",
					"githubUsername": "andrewsanchez",
					"imageURL": "https://avatars.githubusercontent.com/u/11708906?v=4",
					"bio": "",
					"primary": true
				}
			],
			"desc": "Displays results of basic mu find commands",
			"imageURL": "http://i67.tinypic.com/104pa1w.png",
			"dependencies": null,
			"aboutURL": "",
			"lastUpdated": "2021-03-08T15:21:52.861084Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "Email/notmuch-mail-count.30s.rb",
					"filename": "notmuch-mail-count.30s.rb",
					"content": "#!/usr/bin/env ruby\n# encoding: UTF-8\n\n# \u003cbitbar.title\u003eNotmuch inbox \u0026 unread counter\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev1.0\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eSlamet Kristanto\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003edrselump14\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eShow mutt inbox using notmuch inbox and unread\u003c/bitbar.desc\u003e\n# \u003cbitbar.image\u003ehttps://www.dropbox.com/s/cgkjb7hv6s1yx1a/Screenshot%202017-02-08%2020.40.02.png?raw=1\u003c/bitbar.image\u003e\n# \u003cbitbar.dependencies\u003emutt,notmuch\u003c/bitbar.dependencies\u003e\n\ninbox = `/usr/local/bin/notmuch search tag:inbox tag:unread`\n\nmails = inbox.split(\"\\n\")\ncount = mails.length\nif count \u003e 0\n  puts \"ðŸ“® #{count} | color=red size=12\"\nelse\n  puts ''\nend\n\nputs \"---\"\n\nmails.each do |m|\n  mail = m.gsub(/thread.*\\]/,'')[0..25].gsub(/\\|/,':')\n  puts \"#{mail} | color=green size=12 bash='/usr/local/bin/mutt' \"\nend\n\n"
				}
			],
			"path": "Email/notmuch-mail-count.30s.rb",
			"filename": "notmuch-mail-count.30s.rb",
			"dir": "Email",
			"docsPlugin": "Email/notmuch-mail-count.30s.rb.html",
			"docsCategory": "Email.html",
			"pathSegments": [
				"Email"
			],
			"categoryPathSegments": [
				{
					"path": "Email",
					"text": "Email",
					"isLast": true
				}
			],
			"title": "Notmuch inbox \u0026 unread counter",
			"version": "v1.0",
			"author": "Slamet Kristanto",
			"authors": [
				{
					"name": "Kris",
					"githubUsername": "drselump14",
					"imageURL": "https://avatars.githubusercontent.com/u/1251454?v=4",
					"bio": "vim,tmux,alfred, ruby, rails, python, golang, typescript, swift, java, c, c++, elixir, terraform, terragrunt, serverless, AWS\r\n",
					"primary": true
				}
			],
			"desc": "Show mutt inbox using notmuch inbox and unread",
			"imageURL": "https://www.dropbox.com/s/cgkjb7hv6s1yx1a/Screenshot%202017-02-08%2020.40.02.png?raw=1",
			"dependencies": [
				"mutt",
				"notmuch"
			],
			"aboutURL": "",
			"lastUpdated": "2021-03-08T15:21:52.902156Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "Email/offlineimap-notification.1s.py",
					"filename": "offlineimap-notification.1s.py",
					"content": "#!/usr/bin/env python\n# - * -coding: utf - 8 - * -\n#\n# \u003cbitbar.title\u003eOfflineimap Checker and notification\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev1.1\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eAndros Fenollosa\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003etanrax\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eAlert new emails and displays inbox count\u003c/bitbar.desc\u003e\n# \u003cbitbar.image\u003ehttps://programadorwebvalencia.com/wp-content/uploads/2016/07/Screen-Shot-2016-07-06-at-18.42.35.jpg\u003c/bitbar.image\u003e\nimport os\nimport pickle\nimport tempfile\nimport re\nfrom os.path import expanduser\n\n# Location\nPATH_MAIL = os.path.join(expanduser(\"~\"), 'Mail')\nDIR_NEW = 'INBOX/new'\nICON_EMPTY = 'ðŸ“ª'\nICON_NEWS = 'ðŸ“¬'\n\n# Variables\nSAVE_LOCATION = os.path.join(tempfile.gettempdir(),\n                             'offlineimap-notification.pkl')\ndata_save = False\nnum_news = 0\ndata_temp = {}\n\ntry:\n    dateFile = open(SAVE_LOCATION)\n    data_temp = pickle.load(dateFile)\nexcept:\n    pass\n\n\ndef send_alert_osx(mail_from, mail_subject):\n    os.system('osascript -e \\'display notification \\\n    \"{mail_subject}\" with title \"{mail_from}\" sound name \"Blow\"\\''\n              .format(mail_from=mail_from, mail_subject=mail_subject))\n\n\ndef get_fields(path_mail):\n    '''\n    Function get elements: email from, email to and Subject\n\n    return list(mail_from, mail_to, mail_subject)\n    '''\n    mail_from = False\n    mail_from_temp = False\n    mail_to = False\n    mail_to_temp = False\n    mail_subject = False\n    mail_subject_temp = False\n    f = open(path_mail, 'r')\n    for line in f:\n        mail_from_temp = re.search('(?\u003c=[Ff]rom\\: )(.*)(?=)', line)\n        mail_to_temp = re.search('(?\u003c=[Tt]o\\: )(.*)(?=)', line)\n        mail_subject_temp = re.search('(?\u003c=[Ss]ubject\\: )(.*)(?=)', line)\n        if mail_from_temp:\n            mail_from = mail_from_temp.group(1)\n        if mail_to_temp:\n            mail_to = mail_to_temp.group(1)\n        if mail_subject_temp:\n            mail_subject = mail_subject_temp.group(1)\n\n    return {'mail_from': mail_from,\n            'mail_to': mail_to,\n            'mail_subject': mail_subject}\n\n\n# Get info INGOX news\n# Loop folders INBOX\nlist_dirs = os.listdir(os.path.join(PATH_MAIL))\ndata_news_emails = []\nfor name in list_dirs:\n    path_news_INBOX = os.path.join(PATH_MAIL, name, DIR_NEW)\n    if os.path.isdir(path_news_INBOX):\n        # Loop mails news\n        for name in os.listdir(path_news_INBOX):\n            mail = os.path.join(path_news_INBOX, name)\n            if os.path.isfile(mail):\n                num_news += 1\n                data_news_emails.append(get_fields(mail))\n\n# Send notifications\n# Check changes\nif data_news_emails != data_temp:\n    # Send native alert\n    for item in data_news_emails:\n        if item not in data_temp:\n            print(item)\n            send_alert_osx(item['mail_from'], item['mail_subject'])\n\n# Save\ndata_save = open(SAVE_LOCATION, 'w+')\npickle.dump(data_news_emails, data_save)\n\n# Print\nicon = ICON_EMPTY\nif num_news \u003e 0:\n    icon = ICON_NEWS\nprint('{icon}{num_news}'.format(icon=icon, num_news=num_news))\n"
				}
			],
			"path": "Email/offlineimap-notification.1s.py",
			"filename": "offlineimap-notification.1s.py",
			"dir": "Email",
			"docsPlugin": "Email/offlineimap-notification.1s.py.html",
			"docsCategory": "Email.html",
			"pathSegments": [
				"Email"
			],
			"categoryPathSegments": [
				{
					"path": "Email",
					"text": "Email",
					"isLast": true
				}
			],
			"title": "Offlineimap Checker and notification",
			"version": "v1.1",
			"author": "Andros Fenollosa",
			"authors": [
				{
					"name": "Andros Fenollosa",
					"githubUsername": "tanrax",
					"imageURL": "https://avatars.githubusercontent.com/u/4553672?v=4",
					"bio": "Teacher, Web Developer, CEO of Sapps, blogger, podcaster and Shepherd of Zombie Sheep. Lover of Clojure, Python and Linux.",
					"primary": true
				}
			],
			"desc": "Alert new emails and displays inbox count",
			"imageURL": "https://programadorwebvalencia.com/wp-content/uploads/2016/07/Screen-Shot-2016-07-06-at-18.42.35.jpg",
			"dependencies": null,
			"aboutURL": "",
			"lastUpdated": "2021-03-08T15:21:52.926305Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "Email/simple-gmail-checker.sh",
					"filename": "simple-gmail-checker.sh",
					"content": "#!/bin/bash\n# \u003cbitbar.title\u003eSimple Gmail Checker\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev0.1.0\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eMurat Bastas\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003emurat\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eChecks gmail and displays inbox count + unread mails' subjects\u003c/bitbar.desc\u003e\n# \u003cbitbar.dependencies\u003esh,libxml2\u003c/bitbar.dependencies\u003e\n\nUSERNAME=\"example@gmail.com\"\nPASSWORD=\"verysecretpassword\"\n\nRESULT=$(curl -s -u $USERNAME:$PASSWORD \"https://mail.google.com/mail/feed/atom\" | xmllint --format -)\nCOUNT=$(echo \"$RESULT\" | grep -E -o '\u003cfullcount\u003e[0-9]*' | cut -c 12-)\nENTRIES=$(echo \"$RESULT\" | sed -n 's|\u003ctitle\u003e\\(.*\\)\u003c/title\u003e|\\1|p' | tr -s ' ')\n\nif [ \"$COUNT\" -ne 0 ]; then\n  echo \"ðŸ“¬ $COUNT | color=white\"\nelse\n  echo \"ðŸ“­\"\nfi\necho \"---\"\n\ncount=0\necho \"$ENTRIES\" | while read -r line || [[ -n $line ]];\ndo\n  if [ $count -eq 1 ]; then\n    echo \"---\"\n  fi\n\n  echo \"$line | href=https://mail.google.com\"\n  (( count++ ))\ndone\n\n"
				}
			],
			"path": "Email/simple-gmail-checker.sh",
			"filename": "simple-gmail-checker.sh",
			"dir": "Email",
			"docsPlugin": "Email/simple-gmail-checker.sh.html",
			"docsCategory": "Email.html",
			"pathSegments": [
				"Email"
			],
			"categoryPathSegments": [
				{
					"path": "Email",
					"text": "Email",
					"isLast": true
				}
			],
			"title": "Simple Gmail Checker",
			"version": "v0.1.0",
			"author": "Murat Bastas",
			"authors": [
				{
					"name": "Murat Bastas",
					"githubUsername": "murat",
					"imageURL": "https://avatars.githubusercontent.com/u/1137480?v=4",
					"bio": "developer",
					"primary": true
				}
			],
			"desc": "Checks gmail and displays inbox count + unread mails' subjects",
			"imageURL": "https://xbarapp.com/public/img/xbar-2048.png",
			"dependencies": [
				"sh",
				"libxml2"
			],
			"aboutURL": "",
			"lastUpdated": "2021-03-08T15:21:52.940031Z",
			"vars": null
		}
	]
}