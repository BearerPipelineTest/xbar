{
	"plugin": {
		"files": [
			{
				"path": "Environment/conda-envs.15m.py",
				"filename": "conda-envs.15m.py",
				"content": "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\n# \u003cbitbar.title\u003eAnaconda Environments\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev1.2\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eDarius Morawiec\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003enok\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eUseful BitBar plugin to list all created conda environments and to open a new session with a chosen environment.\u003c/bitbar.desc\u003e\n# \u003cbitbar.image\u003ehttps://github.com/nok/conda-envs/blob/master/themes/dark.png?raw=true\u003c/bitbar.image\u003e\n# \u003cbitbar.dependencies\u003econda\u003c/bitbar.dependencies\u003e\n# \u003cbitbar.abouturl\u003ehttps://github.com/nok/conda-envs\u003c/bitbar.abouturl\u003e\n\n\nimport os\nimport subprocess as subp\n\n\n# User settings:\nCONDA_PATH = '~/anaconda/bin/conda'\nCHECK_VERSION = True\nCHECK_SIZE = True\n\n# BitBar related constants:\nLINE = '---'  # cutting line\n\n\nclass Color:\n    GREEN = '#3bb15c'\n    BLUE = '#4a90f3'\n\n\nclass Env:\n    def __init__(self, name, path):\n        conda = os.path.expanduser(CONDA_PATH)\n        cmd = [conda, 'env', 'export', '-n', name]\n        deps = subp.check_output(cmd, stderr=subp.STDOUT).strip()\n\n        self.name = name\n\n        if CHECK_SIZE:\n            du = ['du', '-hs', path]\n            size = subp.check_output(du, stderr=subp.STDOUT).strip().split()[0]\n            name += ' (%s)' % size\n\n        version = None\n        if CHECK_VERSION:\n            for dep in deps.splitlines():\n                if '- python=' in dep:\n                    version = dep.split('=')[1]\n                    name += ' (%s)' % version\n                    break\n\n        self.meta = name\n        self.version = version\n\n    @property\n    def color(self):\n        \"\"\"\n        Return the color to the used Python version.\n\n        Python 2.X: #3bb15c\n        Python 3.X: #4a90f3\n\n        :return: string: The color in hexadecimal format.\n        \"\"\"\n        return Color.GREEN if self.version.startswith('2') else Color.BLUE\n\n    def __str__(self):\n        \"\"\"\n        Return the environment settings in BitBar format.\n\n        :return: string: The environment settings in BitBar format.\n        \"\"\"\n        cmd = '{meta} | bash=source param1=activate param2={name} ' + \\\n              'terminal=true refresh=false'\n        meta = self.__dict__\n        if self.version is not None:\n            cmd += ' color={color}'\n            meta.update({'color': self.color})\n        return cmd.format(**meta)\n\n\ndef is_conda_installed():\n    \"\"\"\n    Check whether conda is installed locally.\n\n    :return: bool: Check whether conda is installed locally.\n    \"\"\"\n    conda = os.path.expanduser(CONDA_PATH)\n    try:\n        subp.check_output([conda], stderr=subp.STDOUT).strip()\n    except:\n        print(LINE)\n        print('Download Aanaconda | href=https://www.continuum.io/downloads')\n        exit(-1)\n\n\ndef get_conda_envs():\n    \"\"\"\n    Create a list of all parsed environments.\n\n    :return: list: The list of environment instances.\n    \"\"\"\n    conda = os.path.expanduser(CONDA_PATH)\n    cmd = [conda, 'env', 'list']\n    out = subp.check_output(cmd, stderr=subp.STDOUT).strip()\n    envs = []\n    for env in out.splitlines():\n        if not env.strip().startswith('#'):\n            tuple = env.split()\n            name = tuple[0]\n            path = tuple[1]\n            try:\n                env = Env(name, path)\n                envs.append(env)\n            except:\n                pass\n    return envs\n\n\ndef print_menu(envs):\n    \"\"\"\n    Print the BitBar menu.\n\n    :param envs: The parsed environment instances.\n    \"\"\"\n    if len(envs) \u003e 0:\n        print(LINE)\n        for idx, env in enumerate(envs):\n            print(env)\n        if CHECK_VERSION:\n            print(LINE)\n            print('Python 2 | color=%s' % Color.GREEN)\n            print('Python 3 | color=%s' % Color.BLUE)\n    print(LINE)\n    conda = os.path.expanduser(CONDA_PATH)\n    cmd = [conda, '--version']\n    ver = subp.check_output(cmd, stderr=subp.STDOUT).strip()\n    print(ver)\n\n\ndef main():\n    print('ùóî')  # Print always the letter 'A' of 'Anaconda'\n    is_conda_installed()\n    envs = get_conda_envs()\n    print_menu(envs)\n\n\nif __name__ == \"__main__\":\n    main()\n"
			}
		],
		"path": "Environment/conda-envs.15m.py",
		"filename": "conda-envs.15m.py",
		"dir": "Environment",
		"docsPlugin": "Environment/conda-envs.15m.py.html",
		"docsCategory": "Environment.html",
		"pathSegments": [
			"Environment"
		],
		"categoryPathSegments": [
			{
				"path": "Environment",
				"text": "Environment",
				"isLast": true
			}
		],
		"title": "Anaconda Environments",
		"version": "v1.2",
		"author": "Darius Morawiec",
		"authors": [
			{
				"name": "Darius Morawiec",
				"githubUsername": "nok",
				"imageURL": "https://avatars.githubusercontent.com/u/670641?v=4",
				"bio": "",
				"primary": true
			}
		],
		"desc": "Useful BitBar plugin to list all created conda environments and to open a new session with a chosen environment.",
		"imageURL": "https://github.com/nok/conda-envs/blob/master/themes/dark.png?raw=true",
		"dependencies": [
			"conda"
		],
		"aboutURL": "https://github.com/nok/conda-envs",
		"lastUpdated": "2021-03-08T15:21:53.069451Z",
		"vars": null
	}
}