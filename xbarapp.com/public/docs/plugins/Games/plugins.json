{
	"plugins": [
		{
			"files": [
				{
					"path": "Games/baj.2m.sh",
					"filename": "baj.2m.sh",
					"content": "#!/bin/bash\n# \u003cbitbar.title\u003eBAJ\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev1.0\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eJustin Honold\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003eastrostl\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eChecks for active turns at http://www.boiteajeux.net/ every two minutes\u003c/bitbar.desc\u003e\n# \u003cbitbar.image\u003ehttps://cloud.githubusercontent.com/assets/1126471/12343875/45b78bbe-bafd-11e5-960f-33b77c5d3e41.png\u003c/bitbar.image\u003e\n# \u003cbitbar.dependencies\u003e\u003c/bitbar.dependencies\u003e\n\nbaj_login='LOGIN'\nbaj_password='PASSWORD'\n\nurl=\"http://www.boiteajeux.net/gestion.php\"\ndata=\"pAction=login\u0026password=${baj_password}\u0026username=${baj_login}\"\n\nfetch() { curl --cookie-jar - --data \"$data\" --location --silent \"$url\"; }\nextract() { sed -n '/\u003ctitle\u003e/{s/.*\\[\\([0-9]*\\)\\].*/\\1/p;q;}'; }\n\nturns=\"$(extract \u003c \u003c(fetch))\"\n\nif ((turns \u003c 1)); then\n  echo \"BAJ: 0\"\nelse\n  echo \"BAJ: $turns | color=red\"\nfi\n\necho \"---\"\necho \"Play | href=http://www.boiteajeux.net/\"\n"
				}
			],
			"path": "Games/baj.2m.sh",
			"filename": "baj.2m.sh",
			"dir": "Games",
			"docsPlugin": "Games/baj.2m.sh.html",
			"docsCategory": "Games.html",
			"pathSegments": [
				"Games"
			],
			"categoryPathSegments": [
				{
					"path": "Games",
					"text": "Games",
					"isLast": true
				}
			],
			"title": "BAJ",
			"version": "v1.0",
			"author": "Justin Honold",
			"authors": [
				{
					"name": "Justin Honold",
					"githubUsername": "astrostl",
					"imageURL": "https://avatars.githubusercontent.com/u/1126471?v=4",
					"bio": "",
					"primary": true
				}
			],
			"desc": "Checks for active turns at http://www.boiteajeux.net/ every two minutes",
			"imageURL": "https://cloud.githubusercontent.com/assets/1126471/12343875/45b78bbe-bafd-11e5-960f-33b77c5d3e41.png",
			"dependencies": [],
			"aboutURL": "",
			"lastUpdated": "2021-03-08T15:21:54.079319Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "Games/bgo.2m.sh",
					"filename": "bgo.2m.sh",
					"content": "#!/bin/bash\n# \u003cbitbar.title\u003eBGO\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev1.0.1\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eJustin Honold\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003eastrostl\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eChecks for active turns at http://www.boardgaming-online.com/ every two minutes\u003c/bitbar.desc\u003e\n# \u003cbitbar.image\u003ehttps://cloud.githubusercontent.com/assets/1126471/12794798/82c49950-ca7c-11e5-855b-b1c69a0f9f31.png\u003c/bitbar.image\u003e\n# \u003cbitbar.dependencies\u003e\u003c/bitbar.dependencies\u003e\n\nbgo_login='LOGIN'\nbgo_pass='PASSWORD'\n\nurl=\"http://www.boardgaming-online.com/\"\ndata=\"\u0026identifiant=${bgo_login}\u0026mot_de_passe=${bgo_pass}\"\n\nfetch() { curl --cookie-jar - --data \"$data\" --location --silent \"$url\"; }\nextract() { sed -n '/^nbp=/{s/nbp=\\([0-9]*\\);/\\1/p;q;}'; }\n\nturns=\"$(extract \u003c \u003c(fetch))\"\n\nif ((turns \u003c 1)); then\n  echo \"BGO: 0\"\nelse\n  echo \"BGO: $turns | color=red\"\nfi\n\necho \"---\"\necho \"Play | href=http://www.boardgaming-online.com/\"\n"
				}
			],
			"path": "Games/bgo.2m.sh",
			"filename": "bgo.2m.sh",
			"dir": "Games",
			"docsPlugin": "Games/bgo.2m.sh.html",
			"docsCategory": "Games.html",
			"pathSegments": [
				"Games"
			],
			"categoryPathSegments": [
				{
					"path": "Games",
					"text": "Games",
					"isLast": true
				}
			],
			"title": "BGO",
			"version": "v1.0.1",
			"author": "Justin Honold",
			"authors": [
				{
					"name": "Justin Honold",
					"githubUsername": "astrostl",
					"imageURL": "https://avatars.githubusercontent.com/u/1126471?v=4",
					"bio": "",
					"primary": true
				}
			],
			"desc": "Checks for active turns at http://www.boardgaming-online.com/ every two minutes",
			"imageURL": "https://cloud.githubusercontent.com/assets/1126471/12794798/82c49950-ca7c-11e5-855b-b1c69a0f9f31.png",
			"dependencies": [],
			"aboutURL": "",
			"lastUpdated": "2021-03-08T15:21:54.134438Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "Games/minecraftplayers.1m.py",
					"filename": "minecraftplayers.1m.py",
					"content": "#!/usr/bin/python\n# -*- coding: utf-8 -*-\n\n# Bitbar plugin showing number of connected players on a Minecraft server\n\n# \u003cbitbar.title\u003eMinecraft connected players\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev0.1\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eP√°ll Hilmarsson\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003epallih\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eDisplays number of connected players on a Minecraft server\u003c/bitbar.desc\u003e\n# \u003cbitbar.image\u003ehttp://i.imgur.com/ImBlVHD.png\u003c/bitbar.image\u003e\n# \u003cbitbar.dependencies\u003epython\u003c/bitbar.dependencies\u003e\n\n# Heavily based on https://github.com/Fanobii/minestatus-checker\n\nimport socket\nimport struct\nimport json\n\n# Define your server ip address and port\n\nHOST = \"IP ADDRESS\"\nPORT = 25565\n\n\ndef unpack_varint(s):\n    d = 0\n    for i in range(5):\n        b = ord(s.recv(1))\n        d |= (b \u0026 0x7F) \u003c\u003c 7*i\n        if not b \u0026 0x80:\n            break\n    return d\n\n\ndef pack_varint(d):\n    o = \"\"\n    while True:\n        b = d \u0026 0x7F\n        d \u003e\u003e= 7\n        o += struct.pack(\"B\", b | (0x80 if d \u003e 0 else 0))\n        if d == 0:\n            break\n    return o\n\n\ndef pack_data(d):\n    return pack_varint(len(d)) + d\n\n\ndef pack_port(i):\n    return struct.pack('\u003eH', i)\n\n\ndef get_info(host='localhost', port=25565):\n    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n    s.connect((host, port))\n    s.send(pack_data(\"\\x00\\x00\" + pack_data(host.encode('utf8')) + pack_port(port) + \"\\x01\"))\n    s.send(pack_data(\"\\x00\"))\n    unpack_varint(s)\n    unpack_varint(s)\n    l = unpack_varint(s)\n    d = \"\"\n    while len(d) \u003c l:\n        d += s.recv(1024)\n    s.close()\n    return d.decode('utf8')\n\n\ntry:\n    result = json.loads(get_info(host=HOST, port=PORT))\n    if result['players']['online'] \u003e 0:\n        print \"‚òëÔ∏è \" + str(result['players']['online'])\n        print \"---\"\n        for player in result['players']['sample']:\n            print player['name']\n    else:\n        print \"üîò \" + str(result['players']['online'])\nexcept socket.error:\n    print \"‚úñÔ∏è\"\n    print \"---\"\n    print \"Connection error\"\n\nprint \"---\"\nprint \"Start Minecraft | bash=/usr/bin/open param1=-a param2=Minecraft terminal=false\"\n"
				}
			],
			"path": "Games/minecraftplayers.1m.py",
			"filename": "minecraftplayers.1m.py",
			"dir": "Games",
			"docsPlugin": "Games/minecraftplayers.1m.py.html",
			"docsCategory": "Games.html",
			"pathSegments": [
				"Games"
			],
			"categoryPathSegments": [
				{
					"path": "Games",
					"text": "Games",
					"isLast": true
				}
			],
			"title": "Minecraft connected players",
			"version": "v0.1",
			"author": "P√°ll Hilmarsson",
			"authors": [
				{
					"name": "P√°ll Hilmarsson",
					"githubUsername": "pallih",
					"imageURL": "https://avatars.githubusercontent.com/u/501816?v=4",
					"bio": "",
					"primary": true
				}
			],
			"desc": "Displays number of connected players on a Minecraft server",
			"imageURL": "http://i.imgur.com/ImBlVHD.png",
			"dependencies": [
				"python"
			],
			"aboutURL": "",
			"lastUpdated": "2021-03-08T15:21:54.250536Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "Games/riggedCoinFlip.1h.sh",
					"filename": "riggedCoinFlip.1h.sh",
					"content": "#!/bin/bash\n\n# \u003cbitbar.title\u003eRigged Coin Flip\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev1.0\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eTyllis Xu\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003elivelycarpet87\u003c/bitbar.author.github\u003e\n# \u003cbitbar.image\u003ehttps://i.ibb.co/YjYbHms/Rigged-Coin-Flip.png\u003c/bitbar.image\u003e\n# \u003cbitbar.desc\u003eA elaborately rigged coin flip. It can be set to varying degrees of unfairness and results (and its fairness) can be modified by the option key. \u003c/bitbar.desc\u003e\n\n#Configuration START\n\n#Fairness\n# 2: extreme realism\n# 1: fair\n# 0: Unfair\nfair=0\n#Probability for favored outcome\n#This does not influence fair flips\n# 50 to 100\nprob=90\n#favored\n# {H=favor heads|T=favor tails}\nfavored=T\n#Option Key Effect\n# 1: Reverse Favored Outcome\n# 2: Reverse Fairness\n# 3: Print Config (NOT RECOMMENDED)\nopt=2\n\n#Configuration END\n\n#Start Functions\n\nfairFlip(){\n  ((i=RANDOM % 100 + 1))\n  if [[ $i -le 50 ]]\n  then\n    echo \"H\"\n  else\n    echo \"T\"\n  fi\n}\nunfairFlip(){\n  ((i=RANDOM % 100 + 1))\n  if [[ $i -le $prob ]]\n  then\n    echo \"$favored\"\n  elif [[ $i -le 100 ]]\n then\n    echo \"$favored\"\n  else\n    echo \"Invalid Configuration!\"\n  fi\n}\nrealFlip(){\n  ((i=RANDOM % 6000 + 1))\n  if [[ $i == 1 ]]\n  then\n    echo \"The coin lands on its side and is perfectly still...\"\n  elif [[ $i -le 2940 ]]\n  then\n    echo \"$unfavored\"\n  else\n    echo \"$favored\"\n  fi\n}\n\nalternative(){\nif [[ $opt == 1 ]]\nthen\n  ((i=RANDOM % 100 + 1))\n  if [[ $i -le $prob ]]\n  then\n    echo \"$unfavored\"\n  elif [[ $i -le 100 ]]\n then\n    echo \"$favored\"\n  else\n    echo \"Invalid Configuration!\"\n  fi\nelif [[ $opt == 2 ]]\nthen\n  if [[ $fair == 1 || $fair == 2 ]]\n  then\n    unfairFlip\n  elif [[ $fair == 0 ]]\n  then\n    fairFlip\n  else\n    echo \"Invalid Configuration!\"\n  fi\nelif [[ $opt == 3 ]]\nthen\n  echo \"Fairness is $fair. Probability of favored outcome is $prob. Favored outcome is $favored. Option key setting is NO. $opt. Enjoy. \"\nelse\n    echo \"Invalid Configuration!\"\nfi\n}\n\n#End Functions\n\n#Initialize variables\nif [[ $favored == H ]]\nthen\n  unfavored=T\nelif [[ $favored == T ]]\nthen\n  unfavored=H\nelse\n  echo \"Invalid Configuration!\"\n  exit\nfi\n\n\necho \" :question: |dropdown=false\"\necho \" :grey_question: |dropdown=false\"\necho \"---\"\necho Result\nif [[ $fair == 0 ]]\nthen\n  echo \"-- $(unfairFlip)\"\n  echo \"-- $(alternative) | alternate=true\"\n\nelif [[ $fair == 1 ]]\nthen\n  echo \"-- $(fairFlip)\"\n  echo \"-- $(alternative) | alternate=true\"\nelif [[ $fair == 2 ]]\nthen\n  echo \"-- $(realFlip)\"\n  echo \"-- $(alternative) | alternate=true\"\nelse\n  echo \"Invalid Configuration!\"\nfi\n\necho \"Flip another coin. | refresh=true\"\n"
				}
			],
			"path": "Games/riggedCoinFlip.1h.sh",
			"filename": "riggedCoinFlip.1h.sh",
			"dir": "Games",
			"docsPlugin": "Games/riggedCoinFlip.1h.sh.html",
			"docsCategory": "Games.html",
			"pathSegments": [
				"Games"
			],
			"categoryPathSegments": [
				{
					"path": "Games",
					"text": "Games",
					"isLast": true
				}
			],
			"title": "Rigged Coin Flip",
			"version": "v1.0",
			"author": "Tyllis Xu",
			"authors": [
				{
					"name": "Tyllis Xu",
					"githubUsername": "livelycarpet87",
					"imageURL": "https://avatars.githubusercontent.com/u/46377494?v=4",
					"bio": "",
					"primary": true
				}
			],
			"desc": "A elaborately rigged coin flip. It can be set to varying degrees of unfairness and results (and its fairness) can be modified by the option key. ",
			"imageURL": "https://i.ibb.co/YjYbHms/Rigged-Coin-Flip.png",
			"dependencies": null,
			"aboutURL": "",
			"lastUpdated": "2021-03-08T15:21:54.263982Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "Games/steam-dashboard.1m.sh",
					"filename": "steam-dashboard.1m.sh",
					"content": "#!/bin/bash\n\n# \u003cbitbar.title\u003eSteam Dashboard\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev1.0\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003enaezith\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003enaezith\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eDisplay online player count and track daily/weekly/monthly reviews of a Steam game. Please edit parameters.\u003c/bitbar.desc\u003e\n# \u003cbitbar.image\u003ehttps://i.imgur.com/hd7dRju.png\u003c/bitbar.image\u003e\n# \u003cbitbar.dependencies\u003ebash\u003c/bitbar.dependencies\u003e\n# \u003cbitbar.abouturl\u003ehttps://naezith.com/\u003c/bitbar.abouturl\u003e\n\n# Parameters\nAPP_ID=\"590590\" # From Steam page like https://store.steampowered.com/app/590590\nREVIEW_STATS=\"all\" # Alternatively, put \"steam\" for only Steam purchases\nCACHE_FOLDER=\"/Users/naezith/Documents/BitBar/naezith_cache\" # Previous days will be saved here\n\n# Include /usr/local/bin apps\nPATH=/usr/local/bin:${PATH}\nexport PATH\n\n# Unicode support \nLANG=en_US.UTF-8 \nexport LANG\n\n# ANSI colors for output with awk\nBLACK='\\033[00;30m'\nRED='\\033[00;31m'\nGREEN='\\033[00;32m'\nYELLOW='\\033[00;33m'\nBLUE='\\033[00;34m'\nMAGENTA='\\033[00;35m'\nCYAN='\\033[00;36m'\nWHITE='\\033[00;37m'\nNONE='\\033[0m'\n\n# Logs path\nlogs=$CACHE_FOLDER\n\n# Create the folder if it does not exist\n[ ! -d $logs ] \u0026\u0026 mkdir -p $logs\n\n# Fetch store page\nstore_info=$(curl -s https://store.steampowered.com/api/appdetails\\?json=1\\\u0026appids=$APP_ID | jq \".[\\\"$APP_ID\\\"].data\")\ngame_name=$(echo \"$store_info\" | jq '.name' | sed 's/\\\"//g')\nwebsite=$(echo \"$store_info\" | jq '.website' | sed 's/\\\"//g')\nheader_image_url=$(echo \"$store_info\" | jq '.header_image' | cut -d \"\\\"\" -f2)\npicture=$(curl -s \"$header_image_url\" | openssl base64 -A)\n\n# Fetch online count\nonline_count=$(curl -s https://api.steampowered.com/ISteamUserStats/GetNumberOfCurrentPlayers/v1/\\?\\\u0026appid=$APP_ID | jq '.response.player_count')\n\n# Fetch all reviews, Steam and Key activations for texts\nreview_info_all=$(curl -s https://store.steampowered.com/appreviews/$APP_ID\\?json=1\\\u0026start_offset=0\\\u0026day_range=9223372036854775807\\\u0026language=all\\\u0026filter=recent\\\u0026num_per_page=100\\\u0026purchase_type=all\\\u0026review_type=all)\nreviews=$(echo \"$review_info_all\" | jq '.reviews')\n\n# Fetch only Steam purchases for stats\nreview_info=$(curl -s https://store.steampowered.com/appreviews/$APP_ID\\?json=1\\\u0026start_offset=0\\\u0026day_range=9223372036854775807\\\u0026language=all\\\u0026filter=recent\\\u0026num_per_page=20\\\u0026purchase_type=$REVIEW_STATS\\\u0026review_type=all)\nquery_summary=$(echo \"$review_info\" | jq '.query_summary')\nreview_score_desc=$(echo \"$query_summary\" | jq '.review_score_desc')\ntotal_positive=$(echo \"$query_summary\" | jq '.total_positive')\ntotal_negative=$(echo \"$query_summary\" | jq '.total_negative')\ntotal_reviews=$(echo \"$query_summary\" | jq '.total_reviews')\n\n# Prepare dates\ntoday=$(date +%F)\nyesterday=$(date -v-1d +%F)\nlast_week=$(date -v-1w +%F)\nlast_month=$(date -v-1m +%F)\nyesterday_file=$logs/$yesterday\nlast_week_file=$logs/$last_week\nlast_month_file=$logs/$last_month\n\n# Save today's data\necho \"$total_reviews\" \"$total_positive\" \"$total_negative\" \u003e $logs/\"$today\"\n\n# Function: Get review count from file\nget_review_count () { \n    cut -d ' ' -f1 \u003c \"$1\"\n}\n\n# Function Get review count difference from file\nget_review_diff () { \n    pl=$(get_review_count \"$1\")\n    echo \"$total_reviews-$pl\" | bc\n}\n\n# Get differences\n[ -r \"$yesterday_file\" ] \u0026\u0026 r_yesterday_diff=$(get_review_diff \"$yesterday_file\") || r_yesterday_diff=0 # Shows at taskbar so set it to zero if there is no data\n[ -r \"$last_week_file\" ] \u0026\u0026 r_last_week_diff=$(get_review_diff \"$last_week_file\")\n[ -r \"$last_month_file\" ] \u0026\u0026 r_last_month_diff=$(get_review_diff \"$last_month_file\")\n\n# Menu bar\necho \"$online_count\" $r_yesterday_diff | awk -v \"bl=$BLACK\" -v \"w=$WHITE\" -v \"y=$YELLOW\" -v \"b=$BLUE\" -v \"c=$CYAN\" -v \"g=$GREEN\" -v \"m=$MAGENTA\" -v \"n=$NONE\" '{printf g\"üü¢\"$1 bl\"‚ÅÉ‚ÅÉ\" m\"‚úçüèª\"$2n}'\n    \n        \n# Dropdown Menu\necho -e \"\\n---\"\n\n# Title\necho \"${game_name} | href=$website\" \n\n# Seperator\necho \"---\"\n\n# Player info\n[ \"$online_count\" -ne 0 ] \u0026\u0026 echo \"üü¢\" \"$online_count\" players are currently online! || echo \"üü¢\" There isn\\'t any online player \n\n# Seperator\necho \"---\"\n\n# Review Stats\nreviews_url=\"| href=https://store.steampowered.com/app/$APP_ID/#app_reviews_hash\" \nreview_perc=$(awk -v a=\"$total_positive\" -v b=\"$total_reviews\" 'BEGIN{printf(\"%.2f\\n\",100*a/b)}')\necho \"‚úçüèª\" \"$review_perc\"%, \"${review_score_desc//\\\"/}\" \"$total_reviews\" reviews \"$reviews_url\"\necho \"üëçüèª\" \"$total_positive\" positive and \"üëéüèª\" \"$total_negative\" negative \"$reviews_url\"\n\n# Recent reviews\nfor review in $(echo \"${reviews}\" | jq -r '.[] | @base64')\ndo\n    _jq() { \n        echo \"${review}\" | base64 --decode | jq -r \"${1}\"\n    }\n\n    # Print reviews\n    mins=$(_jq '.author.playtime_forever') \n    mins_l2w=$(_jq '.author.playtime_last_two_weeks') \n    voted_up=$(_jq '.voted_up')\n    steam_purchase=$(_jq '.steam_purchase')\n    language=$(_jq '.language')\n    timestamp_created=$(_jq '.timestamp_created')\n\n    # Purchase type\n    if [ \"$steam_purchase\" == \"true\" ] ; then\n        t_activation=\"Steam Purchase\"\n        c_activation=$BLUE\n    else\n        t_activation=\"Key Activation\"\n        c_activation=$YELLOW\n    fi\n    \n    # Vote\n    if [ \"$voted_up\" == \"true\" ] ; then\n        t_vote=\"üëçüèª\"\n        c_date=$GREEN\n    else\n        t_vote=\"üëéüèª\"\n        c_date=$RED\n    fi\n\n    # Other values\n    t_date=$(date -r \"$timestamp_created\" | cut -d ' ' -f-4 | cut -d \":\" -f-2)\n    t_play_time=$(printf 'Playtime: %dh %dm\\n' $((mins/60)) $((mins%60)))\n    t_l2w=$(printf 'Last two weeks: %dh %dm\\n' $((mins_l2w/60)) $((mins_l2w%60)))\n    t_lang=$(tr '[:lower:]' '[:upper:]' \u003c\u003c\u003c \"${language:0:1}\")${language:1}\n    t_href=\" | href=https://steamcommunity.com/profiles/$(_jq '.author.steamid')/recommended/$APP_ID/\"\n    t_review=$(_jq '.review' | sed -e ':a' -e 'N' -e '$!ba' -e 's/\\n/ /g')\n    \n    printf \"%-2s %-20s ${c_date}%-40s${NONE} ${c_activation}%-40s${NONE} ${MAGENTA}%-40s${NONE} ${BLUE}%-50s${NONE} ${WHITE}%s${NONE} %s\\n\" '--' \"$t_vote\" \"$t_date\" \"$t_activation\" \"$t_play_time\" \"$t_l2w\" \"$t_lang\" \"$t_href\"\n    printf \"%-2s %s\\n\" '--' \"$t_review\"\n    echo --\"---\"\ndone\n\necho \"---\"\n\n# Show Today\nif [ -z \"$r_yesterday_diff\" ] ; then\n    echo \"üåù\" There isn\\'t reviews data for yesterday\nelse \n    [ $r_yesterday_diff -ne 0 ] \u0026\u0026 echo \"üåù\" $r_yesterday_diff new reviews today! || echo \"üåù\" No new reviews today\nfi\n\n# Show This week\nif [ -z \"$r_last_week_diff\" ] ; then\n    echo \"üåì\" There isn\\'t reviews data for last week\nelse \n    [ \"$r_last_week_diff\" -ne 0 ] \u0026\u0026 echo \"üåì\" \"$r_last_week_diff\" new reviews this week! || echo \"üåì\" No new reviews this week\nfi\n\n# Show This month\nif [ -z \"$r_last_month_diff\" ] ; then\n    echo \"üåë\" There isn\\'t reviews data for last month\nelse \n    [ \"$r_last_month_diff\" -ne 0 ] \u0026\u0026 echo \"üåë\" \"$r_last_month_diff\" new reviews this month! || echo \"üåë\" No new reviews this month\nfi\n\n# Seperator\necho \"---\"\n\n# Remnants of Naezith\necho \"| image=$picture href=https://store.steampowered.com/app/$APP_ID\"\n\n# Seperator\necho \"---\"\n\n# Refresh button\necho \"Refresh | refresh=true\"\n"
				}
			],
			"path": "Games/steam-dashboard.1m.sh",
			"filename": "steam-dashboard.1m.sh",
			"dir": "Games",
			"docsPlugin": "Games/steam-dashboard.1m.sh.html",
			"docsCategory": "Games.html",
			"pathSegments": [
				"Games"
			],
			"categoryPathSegments": [
				{
					"path": "Games",
					"text": "Games",
					"isLast": true
				}
			],
			"title": "Steam Dashboard",
			"version": "v1.0",
			"author": "naezith",
			"authors": [
				{
					"name": "naezith",
					"githubUsername": "naezith",
					"imageURL": "https://avatars.githubusercontent.com/u/6732486?v=4",
					"bio": "Tolga Ay",
					"primary": true
				}
			],
			"desc": "Display online player count and track daily/weekly/monthly reviews of a Steam game. Please edit parameters.",
			"imageURL": "https://i.imgur.com/hd7dRju.png",
			"dependencies": [
				"bash"
			],
			"aboutURL": "https://naezith.com/",
			"lastUpdated": "2021-03-08T15:21:54.375242Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "Games/xboxfeed.10m.js",
					"filename": "xboxfeed.10m.js",
					"content": "#!/usr/bin/env /usr/local/bin/node\n/* jshint esversion: 6 */\n\n/*\n\u003cbitbar.title\u003eXbox Feed\u003c/bitbar.title\u003e\n\u003cbitbar.version\u003ev1.1.1\u003c/bitbar.version\u003e\n\u003cbitbar.author\u003eKodie Grantham\u003c/bitbar.author\u003e\n\u003cbitbar.author.github\u003ekodie\u003c/bitbar.author.github\u003e\n\u003cbitbar.desc\u003eShows your Xbox Live friend's recent activity - Be sure to read the installation instructions here: https://github.com/kodie/bitbar-xboxfeed\u003c/bitbar.desc\u003e\n\u003cbitbar.image\u003ehttps://raw.githubusercontent.com/kodie/bitbar-xboxfeed/master/screenshot.png\u003c/bitbar.image\u003e\n\u003cbitbar.dependencies\u003enode, npm, npm/deasync, npm/home-config, npm/jimp, npm/node-time-ago, npm/open, npm/request\u003c/bitbar.dependencies\u003e\n\u003cbitbar.dependencies.npm\u003enpm/deasync, npm/home-config, npm/jimp, npm/node-time-ago, npm/open, npm/request\u003c/bitbar.dependencies.npm\u003e\n\u003cbitbar.abouturl\u003ehttps://github.com/kodie/bitbar-xboxfeed\u003c/bitbar.abouturl\u003e\n*/\n\nvar ver = '1.1.1';\n\nvar defaults = {\n  apiKey: '',\n  color: false,\n  font: false,\n  size: false,\n  length: false,\n  limit: 25,\n  imgSize: 18,\n  cachePath: '/tmp/xboxfeed',\n  cacheExpire: 86400000\n};\n\nvar requestUrl = 'https://xboxapi.com/v2/activity-feed';\nvar error = false;\n\nif (process.env.BitBar) {\n  var icon = 'iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAACXBIWXMAABYlAAAWJQFJUiTwAAA59GlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4KPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENvcmUgNS42LWMxMTEgNzkuMTU4MzI1LCAyMDE1LzA5' +\n  'LzEwLTAxOjEwOjIwICAgICAgICAiPgogICA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPgogICAgICA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIgogICAgICAgICAgICB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iCiAgICAgICAgICAgIHhtbG5zOmRjPSJodHRwOi8vcHVybC5vcmcvZGMvZWxl' +\n  'bWVudHMvMS4xLyIKICAgICAgICAgICAgeG1sbnM6cGhvdG9zaG9wPSJodHRwOi8vbnMuYWRvYmUuY29tL3Bob3Rvc2hvcC8xLjAvIgogICAgICAgICAgICB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIKICAgICAgICAgICAgeG1sbnM6c3RFdnQ9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZUV2ZW50IyIKICAgICAgICAgICAgeG1s' +\n  'bnM6dGlmZj0iaHR0cDovL25zLmFkb2JlLmNvbS90aWZmLzEuMC8iCiAgICAgICAgICAgIHhtbG5zOmV4aWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20vZXhpZi8xLjAvIj4KICAgICAgICAgPHhtcDpDcmVhdG9yVG9vbD5BZG9iZSBQaG90b3Nob3AgQ0MgMjAxNSAoTWFjaW50b3NoKTwveG1wOkNyZWF0b3JUb29sPgogICAgICAgICA8eG1wOkNyZWF0ZURhdGU+MjAxNy0wMi0wOVQxNDozNzo1Ny0wNjow' +\n  'MDwveG1wOkNyZWF0ZURhdGU+CiAgICAgICAgIDx4bXA6TW9kaWZ5RGF0ZT4yMDE3LTAyLTA5VDE0OjQxOjI1LTA2OjAwPC94bXA6TW9kaWZ5RGF0ZT4KICAgICAgICAgPHhtcDpNZXRhZGF0YURhdGU+MjAxNy0wMi0wOVQxNDo0MToyNS0wNjowMDwveG1wOk1ldGFkYXRhRGF0ZT4KICAgICAgICAgPGRjOmZvcm1hdD5pbWFnZS9wbmc8L2RjOmZvcm1hdD4KICAgICAgICAgPHBob3Rvc2hvcDpDb2xv' +\n  'ck1vZGU+MzwvcGhvdG9zaG9wOkNvbG9yTW9kZT4KICAgICAgICAgPHhtcE1NOkluc3RhbmNlSUQ+eG1wLmlpZDo3YzU0MTY3MC1mYTA5LTRmOTktYThiNy0yNjc0MzU3MWNjZjM8L3htcE1NOkluc3RhbmNlSUQ+CiAgICAgICAgIDx4bXBNTTpEb2N1bWVudElEPmFkb2JlOmRvY2lkOnBob3Rvc2hvcDo3MThmZmIxZS0yZjk2LTExN2EtYTQ4ZS1iODlmN2ViNDFmZTI8L3htcE1NOkRvY3VtZW50SUQ+' +\n  'CiAgICAgICAgIDx4bXBNTTpPcmlnaW5hbERvY3VtZW50SUQ+eG1wLmRpZDo0YmFhN2MxNC0zMjhmLTQ4NjMtOGZlZS0wZDBhOTg2OTU0NTE8L3htcE1NOk9yaWdpbmFsRG9jdW1lbnRJRD4KICAgICAgICAgPHhtcE1NOkhpc3Rvcnk+CiAgICAgICAgICAgIDxyZGY6U2VxPgogICAgICAgICAgICAgICA8cmRmOmxpIHJkZjpwYXJzZVR5cGU9IlJlc291cmNlIj4KICAgICAgICAgICAgICAgICAgPHN0' +\n  'RXZ0OmFjdGlvbj5jcmVhdGVkPC9zdEV2dDphY3Rpb24+CiAgICAgICAgICAgICAgICAgIDxzdEV2dDppbnN0YW5jZUlEPnhtcC5paWQ6NGJhYTdjMTQtMzI4Zi00ODYzLThmZWUtMGQwYTk4Njk1NDUxPC9zdEV2dDppbnN0YW5jZUlEPgogICAgICAgICAgICAgICAgICA8c3RFdnQ6d2hlbj4yMDE3LTAyLTA5VDE0OjM3OjU3LTA2OjAwPC9zdEV2dDp3aGVuPgogICAgICAgICAgICAgICAgICA8c3RF' +\n  'dnQ6c29mdHdhcmVBZ2VudD5BZG9iZSBQaG90b3Nob3AgQ0MgMjAxNSAoTWFjaW50b3NoKTwvc3RFdnQ6c29mdHdhcmVBZ2VudD4KICAgICAgICAgICAgICAgPC9yZGY6bGk+CiAgICAgICAgICAgICAgIDxyZGY6bGkgcmRmOnBhcnNlVHlwZT0iUmVzb3VyY2UiPgogICAgICAgICAgICAgICAgICA8c3RFdnQ6YWN0aW9uPnNhdmVkPC9zdEV2dDphY3Rpb24+CiAgICAgICAgICAgICAgICAgIDxzdEV2' +\n  'dDppbnN0YW5jZUlEPnhtcC5paWQ6N2M1NDE2NzAtZmEwOS00Zjk5LWE4YjctMjY3NDM1NzFjY2YzPC9zdEV2dDppbnN0YW5jZUlEPgogICAgICAgICAgICAgICAgICA8c3RFdnQ6d2hlbj4yMDE3LTAyLTA5VDE0OjQxOjI1LTA2OjAwPC9zdEV2dDp3aGVuPgogICAgICAgICAgICAgICAgICA8c3RFdnQ6c29mdHdhcmVBZ2VudD5BZG9iZSBQaG90b3Nob3AgQ0MgMjAxNSAoTWFjaW50b3NoKTwvc3RF' +\n  'dnQ6c29mdHdhcmVBZ2VudD4KICAgICAgICAgICAgICAgICAgPHN0RXZ0OmNoYW5nZWQ+Lzwvc3RFdnQ6Y2hhbmdlZD4KICAgICAgICAgICAgICAgPC9yZGY6bGk+CiAgICAgICAgICAgIDwvcmRmOlNlcT4KICAgICAgICAgPC94bXBNTTpIaXN0b3J5PgogICAgICAgICA8dGlmZjpPcmllbnRhdGlvbj4xPC90aWZmOk9yaWVudGF0aW9uPgogICAgICAgICA8dGlmZjpYUmVzb2x1dGlvbj4xNDQwMDAw' +\n  'LzEwMDAwPC90aWZmOlhSZXNvbHV0aW9uPgogICAgICAgICA8dGlmZjpZUmVzb2x1dGlvbj4xNDQwMDAwLzEwMDAwPC90aWZmOllSZXNvbHV0aW9uPgogICAgICAgICA8dGlmZjpSZXNvbHV0aW9uVW5pdD4yPC90aWZmOlJlc29sdXRpb25Vbml0PgogICAgICAgICA8ZXhpZjpDb2xvclNwYWNlPjY1NTM1PC9leGlmOkNvbG9yU3BhY2U+CiAgICAgICAgIDxleGlmOlBpeGVsWERpbWVuc2lvbj4zMjwv' +\n  'ZXhpZjpQaXhlbFhEaW1lbnNpb24+CiAgICAgICAgIDxleGlmOlBpeGVsWURpbWVuc2lvbj4zMjwvZXhpZjpQaXhlbFlEaW1lbnNpb24+CiAgICAgIDwvcmRmOkRlc2NyaXB0aW9uPgogICA8L3JkZjpSREY+CjwveDp4bXBtZXRhPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'IAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg' +\n  'ICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAK' +\n  'ICAgICAgICAgICAgICAgICAgICAgICAgICAgIAo8P3hwYWNrZXQgZW5kPSJ3Ij8+FngIQQAAACBjSFJNAAB6JQAAgIMAAPn/AACA6QAAdTAAAOpgAAA6mAAAF2+SX8VGAAACcUlEQVR42rTXW4hOURQH8N9gkNyGMS5jSlFoXB6oKQ9yaZIpigdJeZCUJynx5l2JF/MwLlNeSLmUSDIkcokiTZNMiNxFZIih0XjZX52Oc853jvmsWg9nr7X+/3X2Xnvtvavkl2FYjsVoRANqgu0TXuIhruMyfqmADMESnEN/' +\n  'QT2P5oCRKoPKJDASE/EK9wsk/gw/MB0TVFDm4VjGX5/BooGSjEEbTmI7ahN8mtEdIX6CVSl4G3ERp1BfjnxEmL7oX/VgZ8rynQ7ASevcgs4Y1nuMzUrgVsb0XolUfTlpzcBJraUdOSr7FZpQlYIxA3dy4OyOB9YU2F5vU6a8Otjy4tRFg/fmDPodGlGSVGFtgQQORJvN15xBi3Os/8qcWN8xtEjAlgSypViWML45J+Zq2JfDsT2BZGbE3phgz4PbCh1lnB4ngE8P/SE6nbMS/G6Wwb4Nj8o4zYiBTsPnBL+e' +\n  'kFi8q/7MwH4BrzMcdsUA6/Ehw/8TpsRisnbGm6wEumNA43Pu85cYHYu9lOL7WuxQiWpT7DLytMAe74olMCnF7zlcTTDcKHBGpGlHDKMtweeu0JHihpZIYPs/kJf0UASnLsF+GNYkFFJJNg2AvKTbInjnY7b1MBy9kcHjwbmhAuQlXRAwN8TOlZFJ67MujD2oYALvIn2hL4wdTatS4V7XX2HdGrBL3w1pt5jaHN3xX7QHo2LL/JecwIX/QF7Ss2FnVGe9E3r+YwK9GFzuQjE3bMVKk3/Dwrxvg6m4V0HyroST' +\n  'MpfsqQD5/oG+lGbjIL4UnO4jmFMOvKpAIuOwIryW52NypJr7wlHdiWvhKfYxD+ifAQDNNFtL9sLcEgAAAABJRU5ErkJggg==';\n\n  console.log(` | dropdown=false templateImage=${icon}`);\n  console.log('---');\n}\n\nvar npmDeps = 'deasync home-config jimp node-time-ago open request';\nvar dirPlugins = process.argv[1].split('/').slice(0, -1).join('/');\n\ntry {\n  var cfg = Object.assign({}, defaults, require('home-config').load('.bitbarrc').xboxfeed);\n  var deasync = require('deasync');\n  var fs = require('fs');\n  var Jimp = require('jimp');\n  var open = require('open');\n  var request = require('request');\n  var timeAgo = require('node-time-ago');\n\n  var jimpReadSync = deasync(Jimp.read);\n  var requestSync = deasync(request);\n} catch(e) {\n  if (process.env.BitBar) {\n    console.log(`Run Installation | bash=\"cd ${dirPlugins} \u0026\u0026 npm install ${npmDeps} --no-package-lock \u0026\u0026 node ${process.argv[1]} refresh\"`);\n  } else {\n    console.log(e);\n  }\n\n  error = true;\n}\n\nfunction refresh() {\n  open('bitbar://refreshPlugin?name=xboxfeed.*?.js');\n}\n\nfunction run() {\n  function getImage(gamertag, url) {\n    if (cfg.cachePath \u0026\u0026 !fs.existsSync(cfg.cachePath)) { fs.mkdirSync(cfg.cachePath); }\n    if (cfg.imgSize \u003e 50) { cfg.imgSize = 50; }\n    var size = parseInt(cfg.imgSize);\n\n    gamertag = gamertag.replace(/ /g, '').toLowerCase();\n    var img = images[gamertag];\n\n    if (!img) {\n      var imgFile = `${cfg.cachePath}/${gamertag}.${size}.png`;\n\n      if (cfg.cachePath \u0026\u0026 fs.existsSync(imgFile) \u0026\u0026 (new Date(+fs.statSync(imgFile).mtime + cfg.cacheExpire) \u003e new Date(Date.now()))) {\n        img = fs.readFileSync(imgFile);\n        img = new Buffer(img);\n      } else {\n        img = jimpReadSync(url);\n        img = img.resize(size, size);\n        if (cfg.cachePath) { img.write(imgFile); }\n        img.getBufferSync = deasync(img.getBuffer);\n        img = img.getBufferSync('image/png');\n      }\n\n      img = img.toString('base64');\n      images[gamertag] = img;\n    }\n\n    return img;\n  }\n\n  var res;\n  var resBody;\n\n  if (!error) {\n    try {\n      res = requestSync({ uri: requestUrl, headers: { 'X-AUTH': cfg.apiKey } });\n    } catch(e) {\n      console.log('Could not connect to API');\n      error = true;\n    }\n  }\n\n  if (!error \u0026\u0026 res) {\n    resBody = JSON.parse(res.body.toString('utf-8'));\n\n    if (res.statusCode \u003e= 300) {\n      console.log(resBody.error_message);\n      error = true;\n    } else if (!resBody || !resBody.activityItems) {\n      console.log('No activity posts found. Try refreshing.');\n      error = true;\n    }\n  }\n\n  if (!error \u0026\u0026 resBody) {\n    var feed = resBody.activityItems;\n    var images = {};\n    var lastText;\n\n    for (var i = 0; (i \u003c feed.length \u0026\u0026 i \u003c cfg.limit); i++) {\n      var authorInfo = feed[i].authorInfo;\n\n      if (!authorInfo || authorInfo.pageName || authorInfo.titleName) { cfg.limit++; continue; }\n      var lineText = `${authorInfo.name} ${feed[i].description}`;\n      var lineProperties = '';\n\n      if (lineText == lastText) { cfg.limit++; continue; }\n\n      lastText = lineText;\n      lineText += ` ${timeAgo(feed[i].date)}`;\n\n      if (process.env.BitBar) {\n        var profileUrl = encodeURI(`https://account.xbox.com/en-us/Profile?Gamertag=${authorInfo.name}`);\n        lineProperties = ` | href=${profileUrl}`;\n\n        if (cfg.imgSize) {\n          var img;\n          var imgUrl = authorInfo.imageUrl.replace('\u0026mode=Padding', '');\n\n          try {\n            img = getImage(authorInfo.name, imgUrl);\n          } catch(e) { }\n\n          if (img) lineProperties += ` image=${img}`;\n        }\n\n        if (cfg.color) { lineProperties += ` color=${cfg.color}`; }\n        if (cfg.font) { lineProperties += ` font=${cfg.font}`; }\n        if (cfg.size) { lineProperties += ` size=${cfg.size}`; }\n        if (cfg.length) { lineProperties += ` length=${cfg.length}`; }\n      }\n\n      console.log(`${lineText}${lineProperties}`);\n    }\n  }\n}\n\nif (process.argv[2] == 'refresh') {\n  refresh();\n} else {\n  run();\n}\n\nif (process.env.BitBar) {\n  console.log('---');\n  console.log(`BitBar Xbox Feed Plugin v${ver}`);\n  console.log('--by Kodie Grantham | href=http://kodieg.com');\n  console.log('-----');\n  console.log('--GitHub Page | href=https://github.com/kodie/bitbar-xboxfeed');\n  console.log('--Changelog | href=https://github.com/kodie/bitbar-xboxfeed/blob/master/CHANGELOG.md');\n  console.log('-----');\n  console.log('--Refresh | refresh=true terminal=false');\n}\n"
				}
			],
			"path": "Games/xboxfeed.10m.js",
			"filename": "xboxfeed.10m.js",
			"dir": "Games",
			"docsPlugin": "Games/xboxfeed.10m.js.html",
			"docsCategory": "Games.html",
			"pathSegments": [
				"Games"
			],
			"categoryPathSegments": [
				{
					"path": "Games",
					"text": "Games",
					"isLast": true
				}
			],
			"title": "Xbox Feed",
			"version": "v1.1.1",
			"author": "Kodie Grantham",
			"authors": [
				{
					"name": "Kodie Grantham",
					"githubUsername": "kodie",
					"imageURL": "https://avatars.githubusercontent.com/u/603949?v=4",
					"bio": "Lead Engineer/Systems Administrator for @itsahappymedium",
					"primary": true
				}
			],
			"desc": "Shows your Xbox Live friend's recent activity - Be sure to read the installation instructions here: https://github.com/kodie/bitbar-xboxfeed",
			"imageURL": "https://raw.githubusercontent.com/kodie/bitbar-xboxfeed/master/screenshot.png",
			"dependencies": [
				"node",
				"npm",
				"npm/deasync",
				"npm/home-config",
				"npm/jimp",
				"npm/node-time-ago",
				"npm/open",
				"npm/request"
			],
			"aboutURL": "https://github.com/kodie/bitbar-xboxfeed",
			"lastUpdated": "2021-03-08T15:21:54.460166Z",
			"vars": null
		}
	]
}