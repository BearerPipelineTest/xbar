{
	"plugin": {
		"files": [
			{
				"path": "Lifestyle/org-agenda.30m.rb",
				"filename": "org-agenda.30m.rb",
				"content": "#!/usr/bin/env ruby\n# coding: utf-8\n\n# \u003cbitbar.title\u003eAgenda\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev1.0\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eyqrashawn\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003eyqrashawn\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003edisplay emacs org-agenda in bitbar\u003c/bitbar.desc\u003e\n# \u003cbitbar.image\u003ehttps://github.com/yqrashawn/bitbar-plugin-agenda/raw/master/bitbar-ext-org-agenda.png\u003c/bitbar.image\u003e\n# \u003cbitbar.dependencies\u003eruby,emacs\u003c/bitbar.dependencies\u003e\n# \u003cbitbar.abouturl\u003ehttp://yqrashawn.com/2017/11/25/org-agenda-bitbar-plugin/\u003c/bitbar.abouturl\u003e\n\n# for more information please checkout http://yqrashawn.com/2017/11/25/org-agenda-bitbar-plugin/\n# it's on github https://github.com/yqrashawn/bitbar-plugin-agenda\n\nrequire 'open3'\n\nEncoding.default_external = Encoding::UTF_8\nEncoding.default_internal = Encoding::UTF_8\n\n# your exported agenda files directory path eg. \"#{Dir.home}/agendas/work/\"\nagenda_directory = 'your agenda directory'\n\n# the exported txt agenda file that in the agenda_directory eg. 'todos.txt'\nagenda_name = 'todos.txt'\n\n# the agenda custome command which brings the agenda view that you want to export\nagenda_custome_command = 'B'\n\n# function to REALLY kill emacs\n# for spacemacs use (spacemacs/kill-emacs)\nkill_emacs_function = '(let (kill-emacs-hook) (kill-emacs))'\n\n# Change priority color here\ntag_color = 'orange'\n\n# Customise label color-code here (these colors are optimised for a dark theme menubar)\nlabels = {\n  '[#A]' =\u003e 'red',\n  '[#B]' =\u003e 'yellow',\n  '[#C]' =\u003e 'violet'\n}\n\ntag_indicator = 'Headlines with TAGS match: '\n\n# close stdout stderr\nsystem '/usr/local/bin/emacs',\n       '--batch',\n       '-l',\n       '~/.emacs.d/init.el',\n       '--eval',\n       '(run-hooks \\'emacs-startup-hook)',\n       '--eval',\n       \"(progn (org-agenda nil \\\"#{agenda_custome_command}\\\") (org-agenda-write \\\"#{agenda_directory}#{agenda_name}\\\") #{kill_emacs_function})\",\n       :out =\u003e :close,\n       :err =\u003e :close\n\nagenda_file = File.open(\"#{agenda_directory}#{agenda_name}\")\n\nlines = IO.readlines(agenda_file)\n\n# remove empty line\nlines.reject! { |s| s.nil? || s.strip.empty? }\nlines.reject! { |s| s.include?('=====') }\nlines.each.with_index do |line, i|\n  # get url for urls [[https://example.com][example]]\n  url = ''\n  if line.include?('[[http')\n    url = line.slice(/\\[\\[((http?|ftp).*\\]\\[)/)\n    lines[i] = line.sub(url, '')\n    lines[i] = lines[i].sub ']]', ''\n    line = lines[i]\n    url = url.slice(2, url.length - 4)\n  end\n\n  # detect tag line\n  if line.include?(tag_indicator)\n    lines[i] = \"#{line.slice(tag_indicator.length, line.length).delete(\"\\n\")} | color=#{tag_color} font=Hack\"\n  else\n    # get color dpends on priority\n    line_color = ''\n    labels.each { |label, label_color| line_color = label_color if line.include?(label) }\n    line_color = 'white' if line_color.strip.empty?\n\n    # remove TODO, add color, special font for clickable one\n    lines[i] = \"#{line.delete(\"\\n\").squeeze(' ')}|color=#{line_color} #{url.strip.empty? ? '' : \"font=Hack bash=open param1=\" + \"'\" + url + \"'\" + \" terminal=true\"}\"\n  end\nend\n\nputs \"Do: #{lines.length}\"\nputs '---'\nputs lines"
			}
		],
		"path": "Lifestyle/org-agenda.30m.rb",
		"filename": "org-agenda.30m.rb",
		"dir": "Lifestyle",
		"docsPlugin": "Lifestyle/org-agenda.30m.rb.html",
		"docsCategory": "Lifestyle.html",
		"pathSegments": [
			"Lifestyle"
		],
		"categoryPathSegments": [
			{
				"path": "Lifestyle",
				"text": "Lifestyle",
				"isLast": true
			}
		],
		"title": "Agenda",
		"version": "v1.0",
		"author": "yqrashawn",
		"authors": [
			{
				"name": "yqrashawn",
				"githubUsername": "yqrashawn",
				"imageURL": "https://avatars.githubusercontent.com/u/15090582?v=4",
				"bio": "Extremely busy till Nov",
				"primary": true
			}
		],
		"desc": "display emacs org-agenda in bitbar",
		"imageURL": "https://github.com/yqrashawn/bitbar-plugin-agenda/raw/master/bitbar-ext-org-agenda.png",
		"dependencies": [
			"ruby",
			"emacs"
		],
		"aboutURL": "http://yqrashawn.com/2017/11/25/org-agenda-bitbar-plugin/",
		"lastUpdated": "2021-03-08T15:21:55.811978Z",
		"vars": null
	}
}