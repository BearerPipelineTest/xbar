{
	"plugin": {
		"files": [
			{
				"path": "Music/music.10s.sh",
				"filename": "music.10s.sh",
				"content": "#!/bin/bash\n\n# Get current Music status with play/pause button\n#\n# based on Spotify script by Jason Tokoph (jason@tokoph.net),\n# tweaked by Dan Turkel (daturkel@gmail.com),\n# additionally tweaked by Ale≈° Farƒçnik (@alesf)\n# additionally tweaked by Jeffrey Munowitch (@jmunowitch)\n#\n# Shows current track information from Music\n# 10 second refresh might be a little too quick. Tweak to your liking.\n\n# metadata\n# \u003cbitbar.title\u003eMusic Now Playing\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev1.1\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eDan Turkel, Jason Tokoph, Ale≈° Farƒçnik, Jeffrey Munowitch\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003edaturkel\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eDisplay currently playing Music song with artwork. Play/pause, skip forward, skip backward.\u003c/bitbar.desc\u003e\n# \u003cbitbar.image\u003ehttp://i.imgur.com/lBfoFdY.png\u003c/bitbar.image\u003e\n\nif [ \"$1\" = 'launch' ]; then\n  osascript -e 'tell application \"Music\" to activate'\n  exit\nfi\n\nif [ \"$1\" = 'open' ]; then\n  osascript -e 'tell application \"Music\" to reopen'\n  osascript -e 'tell application \"Music\" to activate'\n  exit\nfi\n\nif [ \"$(osascript -e 'application \"Music\" is running')\" = \"false\" ]; then\n  echo \"‚ô´ | size=12\"\n  echo \"---\"\n  echo \"Music is not running\"\n  echo \"Launch Music | bash='$0' param1=launch terminal=false\"\n  exit\nfi\n\nif [ \"$1\" = 'playpause' ]; then\n  osascript -e 'tell application \"Music\" to playpause'\n  exit\nfi\n\nif [ \"$1\" = 'previous' ]; then\n  osascript -e 'tell application \"Music\" to previous track'\n  exit\nfi\n\nif [ \"$1\" = 'next' ]; then\n  osascript -e 'tell application \"Music\" to next track';\n  exit\nfi\n\nBitBarDarkMode=${BitBarDarkMode}\nif [ \"$BitBarDarkMode\" ]; then\n  COLOR0=\"#666666\"\n  COLOR1=\"#ffffff\"\n  COLOR2=\"#666666\"\n  COLOR3=\"#333333\"\nelse\n  COLOR0=\"#333333\"\n  COLOR1=\"#000000\"\n  COLOR2=\"#666666\"\n  COLOR3=\"#999999\"\nfi\n\nstate=$(osascript -e '\ntry \n  tell application \"Music\"\n    with timeout 3 seconds\n      player state as string\n    end timeout\n  end tell\non error errText\n  \"not available\"\nend try  \n');\nif [ \"$state\" = \"not available\" ]; then\n  echo \"‚ô´ | size=12\"\n  echo \"---\"\n  echo \"Music is not available\"\n  exit\nfi\n\ntrack=$(osascript -e'\ntry\ntell application \"Music\" to name of current track as string\non error errText\n  \"no track selected\"\nend try\n');\n\nartist=$(osascript -e'\ntry\n\ttell application \"Music\" to artist of current track as string\non error errText\n    \"\"\nend try\n');\n\nalbum=$(osascript -e'\ntry\n\ttell application \"Music\" to album of current track as string\non error errText\n    \"\"\nend try\n');\n\ntmp_file=$(osascript -e'\ntry\n    tell application \"Music\"\n        tell artwork 1 of current track\n            if format is JPEG picture then\n                set imgFormat to \".jpg\"\n\t\t    else\n                set imgFormat to \".png\"\n            end if\n\t    end tell\n        set albumName to album of current track\n        set albumArtist to album artist of current track\n        if length of albumArtist is 0\n            set albumArtist to artist of current track\n        end if\n        set fileName to (do shell script \"echo \" \u0026 quoted form of albumArtist \u0026 quoted form of albumName \u0026 \" | sed \\\"s/[^a-zA-Z0-9]//g\\\"\") \u0026 imgFormat\n    end tell\n\t(POSIX path of (path to temporary items from user domain)) \u0026 fileName\non error errText\n    \"\"\nend try\n');\n\nif [ ! -f \"$tmp_file\" ]; then\n    osascript -e'\n    try\n        tell application \"Music\"\n            tell artwork 1 of current track\n                set srcBytes to raw data\n                if format is JPEG picture then\n                    set imgFormat to \".jpg\"\n                else\n                    set imgFormat to \".png\"\n                end if\n            end tell\n            set albumName to album of current track\n            set albumArtist to album artist of current track\n            if length of albumArtist is 0\n                set albumArtist to artist of current track\n            end if\n            set fileName to (do shell script \"echo \" \u0026 quoted form of albumArtist \u0026 quoted form of albumName \u0026 \" | sed \\\"s/[^a-zA-Z0-9]//g\\\"\") \u0026 imgFormat\n        end tell\n        set tmpName to ((path to temporary items from user domain) as text) \u0026 fileName\n        set outFile to open for access file tmpName with write permission\n        set eof outFile to 0\n        write srcBytes to outFile\n        close access outFile\n        tell application \"Image Events\"\n            set resImg to open tmpName\n            scale resImg to size 200\n            save resImg\n            close resImg\n        end tell\n    on error errText\n        \"\"\n    end try\n    '\nfi\n\nif [ -f \"$tmp_file\" ]; then\n    base64img=$(base64 \u003c \"$tmp_file\")\nfi\n\nif [ \"$state\" = \"playing\" ]; then\n  state_icon=\"‚ñ∂Ô∏é\"\nelse\n  state_icon=\"ùùûùùû\"\nfi\n\nif [ \"$track\" != \"no track selected\" ]; then\n    echo \"‚ô´ $state_icon $track - $artist | color=$COLOR0 size=12\"\nelse\n    echo \"‚ô´ ‚óºÔ∏é | color=$COLOR0 size=12\"\nfi\n\necho \"---\"\n\nif [ \"$state\" = \"playing\" ]; then\n  echo \"ùùûùùû Pause | bash='$0 'param1=playpause terminal=false refresh=true color=$COLOR0\"\n  echo \"¬´ Previous | bash='$0' param1=previous terminal=false refresh=true color=$COLOR0\"\n  echo \"¬ª Next | bash='$0' param1=next terminal=false refresh=true color=$COLOR0\"\nelse\n  echo \"‚ñ∂Ô∏é Play | bash='$0' param1=playpause terminal=false refresh=true color=$COLOR0\"\nfi\n\necho \"---\"\n\nif [ \"$track\" != \"no track selected\" ] \u0026\u0026 [ \"$base64img\" != \"\" ]; then\n    echo \"| image=$base64img bash='$0' param1=open terminal=false\"\nfi\n\nif [ \"$track\" != \"no track selected\" ]; then\n    echo \"$track | color=$COLOR1\"\n    echo \"$artist | color=$COLOR2\"\n    echo \"$album | size=12 color=$COLOR3 length=30\"\nfi\n\necho '---'\n"
			}
		],
		"path": "Music/music.10s.sh",
		"filename": "music.10s.sh",
		"dir": "Music",
		"docsPlugin": "Music/music.10s.sh.html",
		"docsCategory": "Music.html",
		"pathSegments": [
			"Music"
		],
		"categoryPathSegments": [
			{
				"path": "Music",
				"text": "Music",
				"isLast": true
			}
		],
		"title": "Music Now Playing",
		"version": "v1.1",
		"author": "Dan Turkel,  Jason Tokoph,  Ale≈° Farƒçnik,  Jeffrey Munowitch",
		"authors": [
			{
				"name": "Dan Turkel",
				"githubUsername": "daturkel",
				"imageURL": "https://avatars.githubusercontent.com/u/1828387?v=4",
				"bio": "",
				"primary": true
			},
			{
				"name": "Jason Tokoph",
				"githubUsername": "",
				"imageURL": "",
				"bio": "",
				"primary": false
			},
			{
				"name": "Ale≈° Farƒçnik",
				"githubUsername": "",
				"imageURL": "",
				"bio": "",
				"primary": false
			},
			{
				"name": "Jeffrey Munowitch",
				"githubUsername": "",
				"imageURL": "",
				"bio": "",
				"primary": false
			}
		],
		"desc": "Display currently playing Music song with artwork. Play/pause, skip forward, skip backward.",
		"imageURL": "http://i.imgur.com/lBfoFdY.png",
		"dependencies": null,
		"aboutURL": "",
		"lastUpdated": "2021-03-08T15:21:57.396045Z",
		"vars": null
	}
}