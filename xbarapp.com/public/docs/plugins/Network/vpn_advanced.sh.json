{
	"plugin": {
		"files": [
			{
				"path": "Network/vpn_advanced.sh",
				"filename": "vpn_advanced.sh",
				"content": "#!/bin/bash\n\n# Get current status of a VPN connection with options to connect/disconnect.\n# Working with OpenConnect, but can work with any executable VPN. Commands\n# that require admin permissions should be whitelisted with 'visudo', e.g.:\n#\n#joesmith ALL=(ALL) NOPASSWD: /usr/local/bin/openconnect\n#joesmith ALL=(ALL) NOPASSWD: /usr/bin/killall -2 openconnect\n\n# \u003cbitbar.title\u003eVPN Status\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev1.0\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eJesse Jarzynka\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003ejessejoe\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eDisplays status of a VPN interface with option to connect/disconnect.\u003c/bitbar.desc\u003e\n# \u003cbitbar.image\u003ehttp://i.imgur.com/RkmptwO.png\u003c/bitbar.image\u003e\n\nVPN_EXECUTABLE=/usr/local/bin/openconnect\nVPN_EXECUTABLE_PARAMS=\"--script=$HOME/scripts/vpnc-script-no-dns\" # Optional\nVPN_HOST=\"vpn.mydomain.com\"\nVPN_INTERFACE=\"utun0\"\nVPN_USERNAME=\"joe.smith\"\n# A command that will result in your VPN password. Recommend using\n# \"security find-generic-password -g -a foo\" where foo is an account\n# in your OSX Keychain, to avoid passwords stored in plain text\nGET_VPN_PASSWORD=\"security find-generic-password -g -a joe.smith 2\u003e\u00261 \u003e/dev/null | cut -d'\\\"' -f2\"\n#GET_VPN_PASSWORD=\"cat ~/.vpnpass\"\n#GET_VPN_PASSWORD=\"echo hunter2\" # Not recommended\n# Command to determine if VPN is connected or disconnected\nVPN_CONNECTED=\"/sbin/ifconfig | egrep -A1 $VPN_INTERFACE | grep inet\"\n# Command to run to disconnect VPN\nVPN_DISCONNECT_CMD=\"sudo killall -2 openconnect\"\n\ncase \"$1\" in\n    connect)\n        VPN_PASSWORD=$(eval \"$GET_VPN_PASSWORD\")\n        # VPN connection command, should eventually result in $VPN_CONNECTED,\n        # may need to be modified for VPN clients other than openconnect\n        echo \"$VPN_PASSWORD\" | sudo \"$VPN_EXECUTABLE\" \"$VPN_EXECUTABLE_PARAMS\" --user \"$VPN_USERNAME\" --passwd-on-stdin \"$VPN_HOST\" \u0026\u003e /dev/null \u0026\n        # Wait for connection so menu item refreshes instantly\n        until eval \"$VPN_CONNECTED\"; do sleep 1; done\n        ;;\n    disconnect)\n        eval \"$VPN_DISCONNECT_CMD\"\n        # Wait for disconnection so menu item refreshes instantly\n        until [ -z \"$(eval \"$VPN_CONNECTED\")\" ]; do sleep 1; done\n        ;;\nesac\n\nif [ -n \"$(eval \"$VPN_CONNECTED\")\" ]; then\n    echo \"VPN ✔\"\n    echo '---'\n    echo \"Disconnect VPN | bash='$0' param1=disconnect terminal=false refresh=true\"\n    exit\nelse\n    echo \"VPN ✘\"\n    echo '---'\n    echo \"Connect VPN | bash='$0' param1=connect terminal=false refresh=true\"\n    exit\nfi\n"
			}
		],
		"path": "Network/vpn_advanced.sh",
		"filename": "vpn_advanced.sh",
		"dir": "Network",
		"docsPlugin": "Network/vpn_advanced.sh.html",
		"docsCategory": "Network.html",
		"pathSegments": [
			"Network"
		],
		"categoryPathSegments": [
			{
				"path": "Network",
				"text": "Network",
				"isLast": true
			}
		],
		"title": "VPN Status",
		"version": "v1.0",
		"author": "Jesse Jarzynka",
		"authors": [
			{
				"name": "Jesse Jarzynka",
				"githubUsername": "jessejoe",
				"imageURL": "https://avatars.githubusercontent.com/u/1694586?v=4",
				"bio": "",
				"primary": true
			}
		],
		"desc": "Displays status of a VPN interface with option to connect/disconnect.",
		"imageURL": "http://i.imgur.com/RkmptwO.png",
		"dependencies": null,
		"aboutURL": "",
		"lastUpdated": "2021-03-08T15:22:00.241711Z",
		"vars": null
	}
}