{
	"plugin": {
		"files": [
			{
				"path": "Politics/PredictIt.sh",
				"filename": "PredictIt.sh",
				"content": "#!/bin/bash\n#Todd Houle\n#Jun2016\n\n#Instructions: At the bottom of the script, add a getData line with the contract or market you'd like to follow. You can get the contract name by looking at the PredictIt page and entering they 'symbol' on that page end the end of this script.\n\n# \u003cbitbar.title\u003ePolitical Outcome Predictions\u003c/bitbar.title\u003e \n# \u003cbitbar.version\u003ev1.0\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eTodd Houle\u003c/bitbar.author\u003e\n# \u003cbitbar.image\u003ehttp://i.imgur.com/WVAdSsD.png\u003c/bitbar.image\u003e\n# \u003cbitbar.author.github\u003etmhoule\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eDisplays predictions from PredictIt (who will win elections,etc.) No API key or accounts needed. Watch Trumps chance of winning the election right from your menu bar.\u003c/bitbar.desc\u003e\n\n#Show images in menu.  Comment out one of the lines below.\nuseImages=true\n#useImages=false                                                                                                                                                                                                                                                                 \n\n#must be this percent or higher to show in menu\ncutoff=5\n\necho \"PI\"\necho \"---\"\n\ngetData () {\n    market=$1\n    curl -H \"Accept: application/xml\" -kfs \"https://www.predictit.org/api/marketdata/ticker/$market\" -X GET  | xmllint --format - \u003e \"/private/tmp/$market.$$.xml\" 2\u003e/dev/null\n    Description=$(xpath \"/private/tmp/$market.$$.xml\" 'MarketData/Name' 2\u003e/dev/null| awk -F\\\u003e '{print $2}'|awk -F\\\u003c '{print $1}' 2\u003e/dev/null)\n    echo \"$Description\"\n    IDsInPol=$(xpath \"/private/tmp/$market.$$.xml\" 'MarketData/Contracts' 2\u003e/dev/null|grep -i \"\u003cID\u003e\"| awk -F\\\u003e '{print $2}'|awk -F\\\u003c '{print $1}' 2\u003e/dev/null)\n    PolArry=($IDsInPol)\n    arrayCount=${#PolArry[@]}\n    for onPol in \"${PolArry[@]}\"; do\n        name=$(xmllint --xpath \"string(//Contracts/MarketContract[ID=$onPol]/Name)\" \"/tmp/$market.$$.xml\")\n        curPriceCents=$(xmllint --xpath \"string(//Contracts/MarketContract[ID=$onPol]/LastTradePrice)\" \"/tmp/$market.$$.xml\")\n        curPriceraw=$(echo \"$curPriceCents * 100\" | bc -l|awk -F. '{print $1}')\n        if [ \"$curPriceraw\" -ge \"$cutoff\" ] || [ \"$arrayCount\" = \"1\" ]; then\n            curPrice=$curPriceraw\"%\"\n            imgURL=$(xmllint --xpath \"string(//Contracts/MarketContract[ID=$onPol]/Image)\" \"/tmp/$market.$$.xml\" 2\u003e/dev/null)\n            if [ \"$useImages\" = \"true\" ]; then\n                img=$(curl -kfs \"$imgURL\"|base64)\n            fi\n            linkURL=$(xmllint --xpath \"string(//Contracts/MarketContract[ID=$onPol]/URL)\" \"/tmp/$market.$$.xml\" 2\u003e/dev/null)\n            echo \"--$name - $curPrice |image=$img color=black href=$linkURL\"\n        fi\n    done\n    rm \"/private/tmp/$market.$$.xml\"\n}\n\ngetData DNOM16\ngetData RNOM16\ngetData USPREZ16\n"
			}
		],
		"path": "Politics/PredictIt.sh",
		"filename": "PredictIt.sh",
		"dir": "Politics",
		"docsPlugin": "Politics/PredictIt.sh.html",
		"docsCategory": "Politics.html",
		"pathSegments": [
			"Politics"
		],
		"categoryPathSegments": [
			{
				"path": "Politics",
				"text": "Politics",
				"isLast": true
			}
		],
		"title": "Political Outcome Predictions",
		"version": "v1.0",
		"author": "Todd Houle",
		"authors": [
			{
				"name": "Todd Houle",
				"githubUsername": "tmhoule",
				"imageURL": "https://avatars.githubusercontent.com/u/4460989?v=4",
				"bio": "",
				"primary": true
			}
		],
		"desc": "Displays predictions from PredictIt (who will win elections,etc.) No API key or accounts needed. Watch Trumps chance of winning the election right from your menu bar.",
		"imageURL": "http://i.imgur.com/WVAdSsD.png",
		"dependencies": null,
		"aboutURL": "",
		"lastUpdated": "2021-03-08T15:22:00.796328Z",
		"vars": null
	}
}