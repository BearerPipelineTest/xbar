{
	"plugins": [
		{
			"files": [
				{
					"path": "System/Battery/trackpad-system_profiler.1m.rb",
					"filename": "trackpad-system_profiler.1m.rb",
					"content": "#!/usr/bin/env ruby\n# \u003cbitbar.title\u003eBattery Apple Bluetooth Trackpad\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003e1.0\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eMaxime Bertheau\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003emaxoumime\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eShow battery percentage for Bluetooth Trackpad\u003c/bitbar.desc\u003e\n# \u003cbitbar.image\u003ehttp://i.imgur.com/1FlcPYx.png\u003c/bitbar.image\u003e\n#\n# A lot of thanks to @alexandregz, I just changed \"Keyboard\" to \"Trackpad\" :grin:\n# Works fine with Apple Trackpad\n#\n\nrequire 'yaml'\n\noutput = YAML.load(`system_profiler SPBluetoothDataType`);\n\noutput['Bluetooth']['Devices (Paired, Configured, etc.)'].each do |device|\n        puts \"Trackpad: \"+device[1]['Battery Level'].to_s if device[1]['Minor Type'].eql?('Trackpad') \u0026\u0026 device[1].has_key?('Battery Level')\nend\n"
				}
			],
			"path": "System/Battery/trackpad-system_profiler.1m.rb",
			"filename": "trackpad-system_profiler.1m.rb",
			"dir": "System/Battery",
			"docsPlugin": "System/Battery/trackpad-system_profiler.1m.rb.html",
			"docsCategory": "System/Battery.html",
			"pathSegments": [
				"System",
				"Battery"
			],
			"categoryPathSegments": [
				{
					"path": "System",
					"text": "System",
					"isLast": false
				},
				{
					"path": "System/Battery",
					"text": "Battery",
					"isLast": true
				}
			],
			"title": "Battery Apple Bluetooth Trackpad",
			"version": "1.0",
			"author": "Maxime Bertheau",
			"authors": [
				{
					"name": "Maxime Bertheau",
					"githubUsername": "maxoumime",
					"imageURL": "https://avatars.githubusercontent.com/u/3897798?v=4",
					"bio": "Android Engineer @ FrontApp",
					"primary": true
				}
			],
			"desc": "Show battery percentage for Bluetooth Trackpad",
			"imageURL": "http://i.imgur.com/1FlcPYx.png",
			"dependencies": null,
			"aboutURL": "",
			"lastUpdated": "2021-03-08T15:22:01.977293Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "System/Battery/keyboard-system_profiler.1m.rb",
					"filename": "keyboard-system_profiler.1m.rb",
					"content": "#!/usr/bin/env ruby\n# \u003cbitbar.title\u003eBattery Apple Bluetooth keyboard\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003e1.0\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eAlexandre Espinosa Menor\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003ealexandregz\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eShow battery percentage for Bluetooth Keyboard\u003c/bitbar.desc\u003e\n# \u003cbitbar.image\u003ehttp://i.imgur.com/1FlcPYx.png\u003c/bitbar.image\u003e\n#\n# command from https://github.com/matryer/bitbar-plugins/issues/84 by @keithamus\n# works fine with Apple Keyboard\n#\n\nrequire 'yaml'\n\noutput = YAML.load(`system_profiler SPBluetoothDataType 2\u003e /dev/null`);\n\noutput['Bluetooth']['Devices (Paired, Configured, etc.)'].each do |device|\n        puts \"Keyboard: \"+device[1]['Battery Level'].to_s if device[1]['Minor Type'].eql?('Keyboard') \u0026\u0026 device[1].has_key?('Battery Level')\nend\n"
				}
			],
			"path": "System/Battery/keyboard-system_profiler.1m.rb",
			"filename": "keyboard-system_profiler.1m.rb",
			"dir": "System/Battery",
			"docsPlugin": "System/Battery/keyboard-system_profiler.1m.rb.html",
			"docsCategory": "System/Battery.html",
			"pathSegments": [
				"System",
				"Battery"
			],
			"categoryPathSegments": [
				{
					"path": "System",
					"text": "System",
					"isLast": false
				},
				{
					"path": "System/Battery",
					"text": "Battery",
					"isLast": true
				}
			],
			"title": "Battery Apple Bluetooth keyboard",
			"version": "1.0",
			"author": "Alexandre Espinosa Menor",
			"authors": [
				{
					"name": "Alexandre Espinosa Menor",
					"githubUsername": "alexandregz",
					"imageURL": "https://avatars.githubusercontent.com/u/1374718?v=4",
					"bio": "",
					"primary": true
				}
			],
			"desc": "Show battery percentage for Bluetooth Keyboard",
			"imageURL": "http://i.imgur.com/1FlcPYx.png",
			"dependencies": null,
			"aboutURL": "",
			"lastUpdated": "2021-03-08T15:22:01.741858Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "System/Battery/battery_cycles.12h.sh",
					"filename": "battery_cycles.12h.sh",
					"content": "#!/bin/bash\n# \u003cbitbar.title\u003eBattery Cycles\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003e1.0\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eMaxime Bertheau\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003emaxoumime\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eGet your battery cycles and condition on the menu bar !\u003c/bitbar.desc\u003e\n# \u003cbitbar.image\u003ehttps://nothingreally.botler.me/bitbar.battery-cycles.png\u003c/bitbar.image\u003e\n\n# Get cycles number\ncycles=$(system_profiler SPPowerDataType | grep \"Cycle Count\" | awk '{print $3}')\n\n# If you want to change the emoticon before the number, here are some\n#echo \"ðŸ”‹ $cycles\"\n#echo \"â™¾ $cycles\"\n#echo \"â™½ $cycles\"\n\necho \"â™¾ $cycles\"\n\necho \"---\"\n\n# 1000 cycles maximum\n# Based on the cycles max number provided by Apple for all Macbooks after 2009\n# No way to get the Macbook age from script directly\n\ncolor=green\nif [ \"$cycles\" -gt 1000 ]; then\n    color=red\nelif [ \"$cycles\" -gt 750 ]; then\n    color=orange\nfi\n\necho \"Cycles: $cycles / 1000 | color=$color href='https://support.apple.com/en-us/HT201585'\"\n\n# Get battery condition\ncondition=$(system_profiler SPPowerDataType | grep \"Condition\" | sed -e 's/^.*: //')\n\ncolor=green\nif [ \"$condition\" != \"Normal\" ]; then\n    color=red\nfi\n\necho \"Battery condition: $condition | color=$color\"\n"
				}
			],
			"path": "System/Battery/battery_cycles.12h.sh",
			"filename": "battery_cycles.12h.sh",
			"dir": "System/Battery",
			"docsPlugin": "System/Battery/battery_cycles.12h.sh.html",
			"docsCategory": "System/Battery.html",
			"pathSegments": [
				"System",
				"Battery"
			],
			"categoryPathSegments": [
				{
					"path": "System",
					"text": "System",
					"isLast": false
				},
				{
					"path": "System/Battery",
					"text": "Battery",
					"isLast": true
				}
			],
			"title": "Battery Cycles",
			"version": "1.0",
			"author": "Maxime Bertheau",
			"authors": [
				{
					"name": "Maxime Bertheau",
					"githubUsername": "maxoumime",
					"imageURL": "https://avatars.githubusercontent.com/u/3897798?v=4",
					"bio": "Android Engineer @ FrontApp",
					"primary": true
				}
			],
			"desc": "Get your battery cycles and condition on the menu bar !",
			"imageURL": "https://nothingreally.botler.me/bitbar.battery-cycles.png",
			"dependencies": null,
			"aboutURL": "",
			"lastUpdated": "2021-03-08T15:22:01.71244Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "System/Battery/mAh.10s.sh",
					"filename": "mAh.10s.sh",
					"content": "#!/bin/sh\n\noutput=\"$(system_profiler SPPowerDataType | grep \"Charge Remaining\" | awk '{print $4}')\";\n\ncharge=\"${output} mAh\"\n\necho \"$charge\"\n\n# \u003cbitbar.title\u003eBattery mAh\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev1.0\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eLuca Angioloni\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003eLucaAngioloni\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eShows the mAh of battery remaining.\u003c/bitbar.desc\u003e\n# \u003cbitbar.image\u003ehttp://s32.postimg.org/6k1iq3051/Screen_Shot_2016_04_27_at_20_0$\n# \u003cbitbar.dependencies\u003enone\u003c/bitbar.dependencies\u003e\n"
				}
			],
			"path": "System/Battery/mAh.10s.sh",
			"filename": "mAh.10s.sh",
			"dir": "System/Battery",
			"docsPlugin": "System/Battery/mAh.10s.sh.html",
			"docsCategory": "System/Battery.html",
			"pathSegments": [
				"System",
				"Battery"
			],
			"categoryPathSegments": [
				{
					"path": "System",
					"text": "System",
					"isLast": false
				},
				{
					"path": "System/Battery",
					"text": "Battery",
					"isLast": true
				}
			],
			"title": "Battery mAh",
			"version": "v1.0",
			"author": "Luca Angioloni",
			"authors": [
				{
					"name": "Luca Angioloni",
					"githubUsername": "LucaAngioloni",
					"imageURL": "https://avatars.githubusercontent.com/u/12626501?v=4",
					"bio": "PhD student in Smart Computing at University of Florence.\r\nMaster's Degree in Computer Engineering at University of Florence.\r\n\r\n@LorenzoNorcini is my friend.",
					"primary": true
				}
			],
			"desc": "Shows the mAh of battery remaining.",
			"imageURL": "https://xbarapp.com/public/img/xbar-2048.png",
			"dependencies": [
				"none"
			],
			"aboutURL": "",
			"lastUpdated": "2021-03-08T15:22:01.961Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "System/Battery/battery-status.20s.py",
					"filename": "battery-status.20s.py",
					"content": "#!/usr/bin/env PYTHONIOENCODING=UTF-8 /usr/local/bin/python3\n# -*- coding: utf-8 -*-\n# \u003cbitbar.title\u003eBattery remaining (Python)\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev1.0.0\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eEric Ripa\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003eeripa\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eShow battery charge percentage and time remaining\u003c/bitbar.desc\u003e\n# \u003cbitbar.image\u003ehttp://i.imgur.com/P6aNey5.png\u003c/bitbar.image\u003e\n# \u003cbitbar.dependencies\u003epython\u003c/bitbar.dependencies\u003e\n\nfrom __future__ import print_function\nimport re\nimport sys\nimport subprocess\n\ndef parse_pmset():\n    output = subprocess.check_output([\"/usr/bin/pmset\", \"-g\", \"batt\"])\n    output = output.decode(\"utf-8\").split('\\n')\n    regex = re.compile(r'^.*\\s(?P\u003ccharge\u003e\\d+%);\\s((?P\u003cstatus\u003edischarging|'\n                       r'charging|finishing charge|charged);\\s(?P\u003cremain\u003e\\(no estimate\\)|\\d+:\\d+) '\n                       r'(remaining )?present|AC attached; not charging present): true$')\n\n    battery = {\n        \"charge\": \"unknown\",\n        \"status\": \"unknown\",\n        \"remaining\": \"unknown\",\n    }\n\n    battery_match = regex.match(output[1])\n    if not battery_match:\n        return battery\n\n    battery[\"charge\"] = battery_match.group(\"charge\")\n    battery[\"status\"] = battery_match.group(\"status\")\n    battery[\"remaining\"] = battery_match.group(\"remain\")\n    if battery[\"remaining\"] == \"(no estimate)\":\n        battery[\"remaining\"] = \"calculating..\"\n    if battery[\"remaining\"] == \"0:00\" and battery[\"status\"] == \"charged\":\n        battery[\"remaining\"] = \"âˆž\"\n    return battery\n\ndef main():\n    battery = parse_pmset()\n    refresh_interval = sys.argv[0].split('.')[1]\n    print(\"{}| size=12\".format(battery[\"charge\"]))\n    print(\"---\")\n    print(\"Status: {}\".format(battery[\"status\"]))\n    print(\"Remaining: {}\".format(battery[\"remaining\"]))\n    print(\"Refresh (current interval: {}) | refresh=true\".format(refresh_interval))\n\nif __name__ == '__main__':\n    main()\n"
				}
			],
			"path": "System/Battery/battery-status.20s.py",
			"filename": "battery-status.20s.py",
			"dir": "System/Battery",
			"docsPlugin": "System/Battery/battery-status.20s.py.html",
			"docsCategory": "System/Battery.html",
			"pathSegments": [
				"System",
				"Battery"
			],
			"categoryPathSegments": [
				{
					"path": "System",
					"text": "System",
					"isLast": false
				},
				{
					"path": "System/Battery",
					"text": "Battery",
					"isLast": true
				}
			],
			"title": "Battery remaining (Python)",
			"version": "v1.0.0",
			"author": "Eric Ripa",
			"authors": [
				{
					"name": "Eric Ripa",
					"githubUsername": "eripa",
					"imageURL": "https://avatars.githubusercontent.com/u/1429673?v=4",
					"bio": "",
					"primary": true
				}
			],
			"desc": "Show battery charge percentage and time remaining",
			"imageURL": "http://i.imgur.com/P6aNey5.png",
			"dependencies": [
				"python"
			],
			"aboutURL": "",
			"lastUpdated": "2021-03-08T15:22:01.707844Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "System/Battery/keyboard.1m.sh",
					"filename": "keyboard.1m.sh",
					"content": "#!/bin/sh\n\n# \u003cbitbar.title\u003eKeybard Battery\u003c/bitbar.title\u003e\n# \u003cbitbar.author\u003eMat Ryer\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003ematryer\u003c/bitbar.author.github\u003e\n\nPERCENTAGE=$(ioreg -c AppleBluetoothHIDKeyboard | grep BatteryPercent | fgrep -v \\{ | sed 's/[^[:digit:]]//g')\n\nif [ \"$PERCENTAGE\" ]; then\n        echo \"Keyboard: $PERCENTAGE%\"\n#else\n#        echo \"without bluetooth keyboard?\"\nfi\n\n"
				}
			],
			"path": "System/Battery/keyboard.1m.sh",
			"filename": "keyboard.1m.sh",
			"dir": "System/Battery",
			"docsPlugin": "System/Battery/keyboard.1m.sh.html",
			"docsCategory": "System/Battery.html",
			"pathSegments": [
				"System",
				"Battery"
			],
			"categoryPathSegments": [
				{
					"path": "System",
					"text": "System",
					"isLast": false
				},
				{
					"path": "System/Battery",
					"text": "Battery",
					"isLast": true
				}
			],
			"title": "Keybard Battery",
			"version": "",
			"author": "Mat Ryer",
			"authors": [
				{
					"name": "Mat Ryer",
					"githubUsername": "matryer",
					"imageURL": "https://avatars.githubusercontent.com/u/101659?v=4",
					"bio": "Building pace.dev and firesearch.dev - Gopher, developer, speaker, author (Go Programming Blueprints) - BitBar app getbitbar.com - Co-creator Gopherize.me",
					"primary": true
				}
			],
			"desc": "",
			"imageURL": "https://xbarapp.com/public/img/xbar-2048.png",
			"dependencies": null,
			"aboutURL": "",
			"lastUpdated": "2021-03-08T15:22:01.829481Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "System/Battery/mouse.1m.sh",
					"filename": "mouse.1m.sh",
					"content": "#!/bin/sh\n# \u003cbitbar.title\u003eMouse battery\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003e1.0\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eAlexandre Espinosa Menor\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003ealexandregz\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eShow battery percentage for Bluetooth Mouse\u003c/bitbar.desc\u003e\n# \u003cbitbar.image\u003ehttp://i.imgur.com/IqjZMJg.png\u003c/bitbar.image\u003e\n\n# works fine with Magic Mouse\n\nPERCENTAGE=$(ioreg -n BNBMouseDevice | fgrep BatteryPercent | fgrep -v \\{ | sed 's/[^[:digit:]]//g')\n\nif [ \"$PERCENTAGE\" ]; then\n        echo \"Mouse: $PERCENTAGE%\"\n#else\n#        echo \"without bluetooth mouse?\"\nfi\n\n"
				}
			],
			"path": "System/Battery/mouse.1m.sh",
			"filename": "mouse.1m.sh",
			"dir": "System/Battery",
			"docsPlugin": "System/Battery/mouse.1m.sh.html",
			"docsCategory": "System/Battery.html",
			"pathSegments": [
				"System",
				"Battery"
			],
			"categoryPathSegments": [
				{
					"path": "System",
					"text": "System",
					"isLast": false
				},
				{
					"path": "System/Battery",
					"text": "Battery",
					"isLast": true
				}
			],
			"title": "Mouse battery",
			"version": "1.0",
			"author": "Alexandre Espinosa Menor",
			"authors": [
				{
					"name": "Alexandre Espinosa Menor",
					"githubUsername": "alexandregz",
					"imageURL": "https://avatars.githubusercontent.com/u/1374718?v=4",
					"bio": "",
					"primary": true
				}
			],
			"desc": "Show battery percentage for Bluetooth Mouse",
			"imageURL": "http://i.imgur.com/IqjZMJg.png",
			"dependencies": null,
			"aboutURL": "",
			"lastUpdated": "2021-03-08T15:22:01.948654Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "System/Battery/trackpad.1m.sh",
					"filename": "trackpad.1m.sh",
					"content": "#!/bin/sh\n\n# \u003cbitbar.title\u003eTrackpad Battery\u003c/bitbar.title\u003e\n# \u003cbitbar.author\u003eMat Ryer\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003ematryer\u003c/bitbar.author.github\u003e\n# \u003cbitbar.version\u003e1.0\u003c/bitbar.version\u003e\n\nPERCENTAGE=$(ioreg -n BNBTrackpadDevice | fgrep BatteryPercent | fgrep -v \\{ | sed 's/[^[:digit:]]//g')\n\nif [ \"$PERCENTAGE\" ]; then\n        echo \"Trackpad: $PERCENTAGE%\"\nfi\n"
				}
			],
			"path": "System/Battery/trackpad.1m.sh",
			"filename": "trackpad.1m.sh",
			"dir": "System/Battery",
			"docsPlugin": "System/Battery/trackpad.1m.sh.html",
			"docsCategory": "System/Battery.html",
			"pathSegments": [
				"System",
				"Battery"
			],
			"categoryPathSegments": [
				{
					"path": "System",
					"text": "System",
					"isLast": false
				},
				{
					"path": "System/Battery",
					"text": "Battery",
					"isLast": true
				}
			],
			"title": "Trackpad Battery",
			"version": "1.0",
			"author": "Mat Ryer",
			"authors": [
				{
					"name": "Mat Ryer",
					"githubUsername": "matryer",
					"imageURL": "https://avatars.githubusercontent.com/u/101659?v=4",
					"bio": "Building pace.dev and firesearch.dev - Gopher, developer, speaker, author (Go Programming Blueprints) - BitBar app getbitbar.com - Co-creator Gopherize.me",
					"primary": true
				}
			],
			"desc": "",
			"imageURL": "https://xbarapp.com/public/img/xbar-2048.png",
			"dependencies": null,
			"aboutURL": "",
			"lastUpdated": "2021-03-08T15:22:01.987377Z",
			"vars": null
		},
		{
			"files": [
				{
					"path": "System/Battery/watt-meter.20s.py",
					"filename": "watt-meter.20s.py",
					"content": "#!/usr/local/bin/python3\n\n# \u003cbitbar.title\u003eWatt Meter\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev1.0.0\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003eEric Ripa\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003eeripa\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eShow current watt drain, tries to be smart and highlight high power usage\u003c/bitbar.desc\u003e\n# \u003cbitbar.image\u003ehttp://i.imgur.com/blj2KCP.png\u003c/bitbar.image\u003e\n# \u003cbitbar.dependencies\u003epython3\u003c/bitbar.dependencies\u003e\n\nfrom plistlib import loads\nimport sys\nimport subprocess\n\n# Currently only rough guestimates. Only somewhat tested number on MacBook Air.abs\n# Feel free to update/tweak etc..\nIMPACT = {\n    2: {\n        \"MacBook Air\": {\n            \"high\": 20,\n            \"low\": 10\n        },\n        \"MacBook Pro\": {\n            \"high\": 50,\n            \"low\": 20\n        }\n    },\n    4: {\n        \"MacBook Pro\": {\n            \"high\": 70,\n            \"low\": 30\n        }\n    },\n    6: {\n        \"MacBook Pro\": {\n            \"high\": 80,\n            \"low\": 30\n        }\n    }\n}\n\ndef parse_system_profiler():\n    output = subprocess.check_output([\"/usr/sbin/system_profiler\", \\\n                                     \"-xml\", \"SPPowerDataType\", \"SPHardwareDataType\"])\n    plist = loads(output)\n    spbattery_info = plist[0]['_items'][0]\n\n    machine = {\n        \"current_amperage\": int(spbattery_info['sppower_current_amperage']),\n        \"current_voltage\": int(spbattery_info['sppower_current_voltage']),\n        \"current_watt\": abs(int(spbattery_info['sppower_current_voltage']) * \\\n            int(spbattery_info['sppower_current_amperage'])/1000/1000),\n        \"model\": plist[1]['_items'][0]['machine_name'],\n        \"cores\": plist[1]['_items'][0]['number_processors'],\n    }\n    return machine\n\ndef get_impact(machine):\n    model = machine['model']\n    cores = machine['cores']\n    watt = machine['current_watt']\n    low = IMPACT[cores][model]['low']\n    high = IMPACT[cores][model]['high']\n    if watt \u003c= low:\n        return \"low\"\n    if watt \u003e= high:\n        return \"high\"\n    return \"mid\"\n\ndef main():\n    machine = parse_system_profiler()\n    impact = get_impact(machine)\n    color = \"gray\"\n    if impact == \"low\":\n        color = \"green\"\n    if impact == \"high\":\n        color = \"red\"\n    refresh_interval = sys.argv[0].split('.')[2]\n    print(\"%.1fW | color=%s\" % (machine['current_watt'], color))\n    print(\"---\")\n    print(\"Refresh (current interval: %s) | refresh=true\" % refresh_interval)\n\nif __name__ == '__main__':\n    main()\n"
				}
			],
			"path": "System/Battery/watt-meter.20s.py",
			"filename": "watt-meter.20s.py",
			"dir": "System/Battery",
			"docsPlugin": "System/Battery/watt-meter.20s.py.html",
			"docsCategory": "System/Battery.html",
			"pathSegments": [
				"System",
				"Battery"
			],
			"categoryPathSegments": [
				{
					"path": "System",
					"text": "System",
					"isLast": false
				},
				{
					"path": "System/Battery",
					"text": "Battery",
					"isLast": true
				}
			],
			"title": "Watt Meter",
			"version": "v1.0.0",
			"author": "Eric Ripa",
			"authors": [
				{
					"name": "Eric Ripa",
					"githubUsername": "eripa",
					"imageURL": "https://avatars.githubusercontent.com/u/1429673?v=4",
					"bio": "",
					"primary": true
				}
			],
			"desc": "Show current watt drain, tries to be smart and highlight high power usage",
			"imageURL": "http://i.imgur.com/blj2KCP.png",
			"dependencies": [
				"python3"
			],
			"aboutURL": "",
			"lastUpdated": "2021-03-08T15:22:02.069559Z",
			"vars": null
		}
	]
}