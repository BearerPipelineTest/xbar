{
	"plugin": {
		"files": [
			{
				"path": "System/launch-agents.10s.sh",
				"filename": "launch-agents.10s.sh",
				"content": "#!/usr/bin/env bash\n\n# \u003cbitbar.title\u003eLaunch Agents\u003c/bitbar.title\u003e\n# \u003cbitbar.version\u003ev1.4\u003c/bitbar.version\u003e\n# \u003cbitbar.author\u003ePaul W. Rankin\u003c/bitbar.author\u003e\n# \u003cbitbar.author.github\u003ernkn\u003c/bitbar.author.github\u003e\n# \u003cbitbar.desc\u003eShows and manages user Launch Agents.\u003c/bitbar.desc\u003e\n# \u003cbitbar.image\u003ehttps://i.imgur.com/UsJRDoE.png\u003c/bitbar.image\u003e\n# \u003cbitbar.dependencies\u003ebash\u003c/bitbar.dependencies\u003e\n\n# BitBar Launch Agents plugin\n\n# User Settings ================================================================\n\n# use_emoji=true                              # uncomment this line to use an emoji\nhome_path=$HOME/Library/LaunchAgents/         # uncomment this line to list User LaunchAgents\nglob_agent_path=/Library/LaunchAgents/        # uncomment this line to list Global LaunchAgents\n# glob_daemon_path=/Library/LaunchDaemons/    # uncomment this line to list Global LaunchDaemons\n\n# ==============================================================================\n\nmain() {\n  print_header\n  open=$(command -v open)\n\n  if [[ -n \"${home_path:=}\" ]]; then\n    compgen -G \"$home_path\"*.plist \u0026\u003e /dev/null || return 0\n    echo \"LaunchAgents:\"\n    plist=(\"$home_path\"*.plist)\n    for service in \"${plist[@]}\"; do\n      listservice \"$service\"\n    done\n    echo \"---\"\n  fi\n\n  if [[ -n \"${glob_agent_path:=}\" ]]; then\n    compgen -G \"$glob_agent_path\"*.plist \u0026\u003e /dev/null || return 0\n    echo \"Global LaunchAgents:\"\n    plist=(\"$glob_agent_path\"*.plist)\n    for service in \"${plist[@]}\"; do\n      listservice \"$service\"\n    done\n    echo \"---\"\n  fi\n\n  if [[ -n \"${glob_daemon_path:=}\" ]]; then\n    compgen -G \"$glob_daemon_path\"*.plist \u0026\u003e /dev/null || return 0\n    echo \"Global LaunchDaemons:\"\n    plist=(\"$glob_daemon_path\"*.plist)\n    for service in \"${plist[@]}\"; do\n      echo \"$(service_property \"$service\" Label) | color=#fff\"\n    done\n    echo \"---\"\n  fi\n\n  if [[ $1 = start ]]\n  then launchctl start \"$2\"\n  fi\n\n  if [[ $1 = stop ]]\n  then launchctl stop \"$2\"\n  fi\n\n  if [[ $1 = load ]]\n  then launchctl load \"$2\"\n  fi\n\n  if [[ $1 = unload ]]\n  then launchctl unload \"$2\"\n  fi\n\n  if [[ $1 = reload ]]\n  then launchctl unload \"$2\"\n    launchctl load \"$2\"\n  fi\n\n}\n\nfunction service_pid {\n  launchctl list | grep \"$1\\$\" | sed -E 's/^([-0-9]+).*([0-9]+).*/\\1/'\n}\n\nfunction service_status {\n  launchctl list | grep \"$1\\$\" | sed -E 's/^([-0-9]+).*([0-9]+).*/\\2/'\n}\n\nfunction service_property {\n  defaults read \"$1\" \"$2\" 2\u003e /dev/null\n}\n\nlistservice() {\n  service=$1\n  label=$(service_property \"$service\" Label )\n  log=$(service_property \"$service\" StandardOutPath || true)\n  errorlog=$(service_property \"$service\" StandardErrorPath || true)\n  pid=$(service_pid \"$label\")\n  status=$(service_status \"$label\")\n  if [[ $pid = \"-\" ]]\n  then pid=-1\n  fi\n  if [[ $pid -eq -1 \u0026\u0026 $status -eq 0 ]]\n  then echo \"$label | color=#00a4db\"\n    echo \"--Unload | bash='$0' param1=unload param2=$service terminal=false refresh=true\"\n    echo \"--Reload | bash='$0' param1=reload param2=$service terminal=false refresh=true alternate=true\"\n    echo \"--Start | bash='$0' param1=start param2=$label terminal=false refresh=true\"\n    echo \"-----\"\n    if [[ -f $log ]]\n    then echo \"--View Log | bash=$open param1=-a param2=Console param3=$log terminal=false\"\n    else echo \"--View Log\"\n    fi\n    if [[ -f $errorlog ]]\n    then echo \"--View Error Log | bash=$open param1=-a param2=Console param3=$errorlog terminal=false\"\n    else echo \"--View Error Log\"\n    fi\n    echo \"-----\"\n    echo \"--Idle\"\n    echo \"--No Errors\"\n  elif [[ $pid -gt 0 \u0026\u0026 $status -eq 0 ]]\n  then echo \"$label | color=green\"\n    echo \"--Unload | bash='$0' param1=unload param2=$service terminal=false refresh=true\"\n    echo \"--Reload | bash='$0' param1=reload param2=$service terminal=false refresh=true alternate=true\"\n    echo \"--Stop | bash='$0' param1=stop param2=$label terminal=false refresh=true\"\n    echo \"-----\"\n    if [[ -f $log ]]\n    then echo \"--View Log | bash=$open param1=-a param2=Console param3=$log terminal=false\"\n    else echo \"--View Log\"\n    fi\n    if [[ -f $errorlog ]]\n    then echo \"--View Error Log | bash=$open param1=-a param2=Console param3=$errorlog terminal=false\"\n    else echo \"--View Error Log\"\n    fi\n    echo \"-----\"\n    echo \"--Running ($pid)\"\n    echo \"--No Errors\"\n  elif [[ $status -gt 0 ]]\n  then echo \"$label | color=red\"\n    echo \"--Unload | bash='$0' param1=unload param2=$service terminal=false refresh=true\"\n    echo \"--Reload | bash='$0' param1=reload param2=$service terminal=false refresh=true alternate=true\"\n    echo \"--Start | bash='$0' param1=start param2=$label terminal=false refresh=true\"\n    echo \"-----\"\n    if [[ -f $log ]]\n    then echo \"--View Log | bash=$open param1=-a param2=Console param3=$log terminal=false\"\n    else echo \"--View Log\"\n    fi\n    if [[ -f $errorlog ]]\n    then echo \"--View Error Log | bash=$open param1=-a param2=Console param3=$errorlog terminal=false\"\n    else echo \"--View Error Log\"\n    fi\n    echo \"-----\"\n    echo \"--Stopped\"\n    echo \"--Error ($status)\"\n  else echo \"$label\"\n    echo \"--Load | bash='$0' param1=load param2=$service terminal=false refresh=true\"\n    echo \"-----\"\n    if [[ -f $log ]]\n    then echo \"--View Log | bash=$open param1=-a param2=Console param3=$log terminal=false\"\n    else echo \"--View Log\"\n    fi\n    if [[ -f $errorlog ]]\n    then echo \"--View Error Log | bash=$open param1=-a param2=Console param3=$errorlog terminal=false\"\n    else echo \"--View Error Log\"\n    fi\n    echo \"-----\"\n    echo \"--Unloaded\"\n  fi\n}\n\nprint_header() {\n  if [[ -n \"${use_emoji:=}\" ]]\n  then echo \":rocket:\"\n  else echo \"| templateImage=iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAWJQAAFiUBSVIk8AAABCRpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IlhNUCBDb3JlIDUuNC4wIj4KICAgPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4KICAgICAgPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIKICAgICAgICAgICAgeG1sbnM6dGlmZj0iaHR0cDovL25zLmFkb2JlLmNvbS90aWZmLzEuMC8iCiAgICAgICAgICAgIHhtbG5zOmV4aWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20vZXhpZi8xLjAvIgogICAgICAgICAgICB4bWxuczpkYz0iaHR0cDovL3B1cmwub3JnL2RjL2VsZW1lbnRzLzEuMS8iCiAgICAgICAgICAgIHhtbG5zOnhtcD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wLyI+CiAgICAgICAgIDx0aWZmOlJlc29sdXRpb25Vbml0PjI8L3RpZmY6UmVzb2x1dGlvblVuaXQ+CiAgICAgICAgIDx0aWZmOkNvbXByZXNzaW9uPjU8L3RpZmY6Q29tcHJlc3Npb24+CiAgICAgICAgIDx0aWZmOlhSZXNvbHV0aW9uPjE0NDwvdGlmZjpYUmVzb2x1dGlvbj4KICAgICAgICAgPHRpZmY6T3JpZW50YXRpb24+MTwvdGlmZjpPcmllbnRhdGlvbj4KICAgICAgICAgPHRpZmY6WVJlc29sdXRpb24+MTQ0PC90aWZmOllSZXNvbHV0aW9uPgogICAgICAgICA8ZXhpZjpQaXhlbFhEaW1lbnNpb24+MzI8L2V4aWY6UGl4ZWxYRGltZW5zaW9uPgogICAgICAgICA8ZXhpZjpDb2xvclNwYWNlPjE8L2V4aWY6Q29sb3JTcGFjZT4KICAgICAgICAgPGV4aWY6UGl4ZWxZRGltZW5zaW9uPjMyPC9leGlmOlBpeGVsWURpbWVuc2lvbj4KICAgICAgICAgPGRjOnN1YmplY3Q+CiAgICAgICAgICAgIDxyZGY6U2VxLz4KICAgICAgICAgPC9kYzpzdWJqZWN0PgogICAgICAgICA8eG1wOk1vZGlmeURhdGU+MjAxNzowMToyNiAwMDowMTo1MjwveG1wOk1vZGlmeURhdGU+CiAgICAgICAgIDx4bXA6Q3JlYXRvclRvb2w+UGl4ZWxtYXRvciAzLjY8L3htcDpDcmVhdG9yVG9vbD4KICAgICAgPC9yZGY6RGVzY3JpcHRpb24+CiAgIDwvcmRmOlJERj4KPC94OnhtcG1ldGE+CqqgHc8AAAOHSURBVFgJvZZLqM1RFMav6y15lDzKY2ByBxRl6BqYSKEUMwMpSjIwEHVTJjJhwICidGNoICkDRGJg4jFzu0VR8kgh8n79fvee79r33zmncw5Z9Z299tp7r2+tvdfe/9PV9e9lLC7Ff5cxMI4vWCegbwLnwCD4An5VQPffSDduyqw30r8KqoT2f4KvtTGav5dxhYul6OdBSSzZN/ADSG5r3zl/LSX5dry9BCF3yyVLP61BfK/ZaTqXkLv1x0AIJA5BbGVrAEJbx5Jim4mHCyAE9QotY2kT3HvWLe8kAqtbmQquAB2bUc41RI3aFOAt1kwELYtbncxddA5I4jknq0aksZfnv491DUUy4TkL9chslFR66TAkzdpkP4CP+XFYbUuy6thqDPeBJJLXq/JGAZRzt7FW6fb1KsVs3c4esAa8Ah+BWfeCzWAScI6Pj2hVzN76uQw2AAPKTUL9c74L0O+CZGKm0W11VLWV4/X03A4TWgaUsp5GIpnGwA2gk3LL7EvcarGVQeTctW0Fisc8svvlmfcz4ESvlGTC6Fu9YiVx/MR2GD+RUUeXSPYwmsnV7GNvZ+vLzE+GmbZMeMTsubwBEn0GZh4yHVmI6SeYRq3zSvIT9COjii5G24tAh9XMz2BbCY6DT6DenDIQyQ1em4n0gUhD8p3MKJ1Ev4fdRVvAC5A6aLYTIX/E/LUgUnfbHfT8/YwuBIPAiZOBxGdr/ce004G7Y/G4JkGWxSS5656BdeABCLFr25YVrLgBzNjsk3n1mAymtO2irxhMGeCQsdGPE/0yZcFB9BBKED1brM3PaYjz0DzGtggo+WoO95r8uqW5ik7zuZVAWEj1yI9i31ub47wU6HV0n2rFHWhZzHwuWAUeAp169RJImfkp7LPA6dq4AWYHDMAaUloOIIUyj0U6kLR65tnqI4z5x/N2bZ7kZbAD9A1OGfXWD5vq/yZSHb8GOsxDYubRr6ErB0B2xsCSvbb9IJJ6Sr9p6y70A51IGuJkeAfbYqD0AedJbo2ou2M7QKQtchdNAZLo7EOtVRfe5/kgshUlY7ZPwXoQaZvchWbnaxfHBnETHAKLgJI/kOXLeQl7z9Do8E3qiNz1/vt5Dp4A/7H0gjkgDj2i6Ab1FuwG2hXrKONDhlZ/cv8lmwHeAZ17torjklgTkSUo9q14xWq3BjqWBFE6MKNkV9rLueq5QeWctvTfZDO0T448SOoAAAAASUVORK5CYII=\"\n  fi\n  echo \"---\"\n}\n\nmain \"$@\"\n\necho \"---\"\necho \"Refresh | refresh=true\"\n"
			}
		],
		"path": "System/launch-agents.10s.sh",
		"filename": "launch-agents.10s.sh",
		"dir": "System",
		"docsPlugin": "System/launch-agents.10s.sh.html",
		"docsCategory": "System.html",
		"pathSegments": [
			"System"
		],
		"categoryPathSegments": [
			{
				"path": "System",
				"text": "System",
				"isLast": true
			}
		],
		"title": "Launch Agents",
		"version": "v1.4",
		"author": "Paul W. Rankin",
		"authors": [
			{
				"name": "Paul W. Rankin",
				"githubUsername": "rnkn",
				"imageURL": "https://avatars.githubusercontent.com/u/1256849?v=4",
				"bio": "Filmmaker. Hobbyist programmer. Most repositories relate to screenwriting.",
				"primary": true
			}
		],
		"desc": "Shows and manages user Launch Agents.",
		"imageURL": "https://i.imgur.com/UsJRDoE.png",
		"dependencies": [
			"bash"
		],
		"aboutURL": "",
		"lastUpdated": "2021-03-08T15:22:03.713829Z",
		"vars": null
	}
}